// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.ApplicationSegment.getApplicationSegment({
 *     name: "example",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.ApplicationSegment.getApplicationSegment({
 *     id: "123456789",
 * });
 * ```
 */
export function getApplicationSegment(args?: GetApplicationSegmentArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationSegmentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:ApplicationSegment/getApplicationSegment:getApplicationSegment", {
        "id": args.id,
        "name": args.name,
        "tcpPortRanges": args.tcpPortRanges,
        "udpPortRanges": args.udpPortRanges,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplicationSegment.
 */
export interface GetApplicationSegmentArgs {
    id?: string;
    /**
     * Name of the application.
     */
    name?: string;
    tcpPortRanges?: inputs.ApplicationSegment.GetApplicationSegmentTcpPortRange[];
    udpPortRanges?: inputs.ApplicationSegment.GetApplicationSegmentUdpPortRange[];
}

/**
 * A collection of values returned by getApplicationSegment.
 */
export interface GetApplicationSegmentResult {
    readonly bypassType: string;
    readonly configSpace: string;
    readonly creationTime: string;
    readonly defaultIdleTimeout: string;
    readonly defaultMaxAge: string;
    readonly description: string;
    readonly domainNames: string[];
    readonly doubleEncrypt: boolean;
    readonly enabled: boolean;
    readonly healthCheckType: string;
    readonly healthReporting: string;
    readonly id?: string;
    readonly ipAnchored: boolean;
    readonly isCnameEnabled: boolean;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly passiveHealthEnabled: boolean;
    readonly segmentGroupId: string;
    readonly segmentGroupName: string;
    readonly selectConnectorCloseToApp: boolean;
    readonly serverGroups: outputs.ApplicationSegment.GetApplicationSegmentServerGroup[];
    readonly tcpPortRanges: string[];
    readonly udpPortRanges: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.ApplicationSegment.getApplicationSegment({
 *     name: "example",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.ApplicationSegment.getApplicationSegment({
 *     id: "123456789",
 * });
 * ```
 */
export function getApplicationSegmentOutput(args?: GetApplicationSegmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationSegmentResult> {
    return pulumi.output(args).apply((a: any) => getApplicationSegment(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationSegment.
 */
export interface GetApplicationSegmentOutputArgs {
    id?: pulumi.Input<string>;
    /**
     * Name of the application.
     */
    name?: pulumi.Input<string>;
    tcpPortRanges?: pulumi.Input<pulumi.Input<inputs.ApplicationSegment.GetApplicationSegmentTcpPortRangeArgs>[]>;
    udpPortRanges?: pulumi.Input<pulumi.Input<inputs.ApplicationSegment.GetApplicationSegmentUdpPortRangeArgs>[]>;
}
