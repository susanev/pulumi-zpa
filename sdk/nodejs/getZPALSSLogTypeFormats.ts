// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zpa_lss_config_log_type_formats** data source to get information about all LSS log type formats in the Zscaler Private Access cloud. This data source is required when creating an LSS Config Controller resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const zpnTransLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_trans_log",
 * });
 * const zpnAuthLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_auth_log",
 * });
 * const zpnAstAuthLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_ast_auth_log",
 * });
 * const zpnHttpTransLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_http_trans_log",
 * });
 * const zpnAuditLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_audit_log",
 * });
 * const zpnSysAuthLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_sys_auth_log",
 * });
 * const zpnAstComprehensiveStats = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_ast_comprehensive_stats",
 * });
 * const zpnWafHttpExchangesLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_waf_http_exchanges_log",
 * });
 * ```
 */
export function getZPALSSLogTypeFormats(args: GetZPALSSLogTypeFormatsArgs, opts?: pulumi.InvokeOptions): Promise<GetZPALSSLogTypeFormatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getZPALSSLogTypeFormats:getZPALSSLogTypeFormats", {
        "logType": args.logType,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPALSSLogTypeFormats.
 */
export interface GetZPALSSLogTypeFormatsArgs {
    /**
     * The type of log to be exported.
     */
    logType: string;
}

/**
 * A collection of values returned by getZPALSSLogTypeFormats.
 */
export interface GetZPALSSLogTypeFormatsResult {
    readonly csv: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
    readonly logType: string;
    readonly tsv: string;
}
/**
 * Use the **zpa_lss_config_log_type_formats** data source to get information about all LSS log type formats in the Zscaler Private Access cloud. This data source is required when creating an LSS Config Controller resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const zpnTransLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_trans_log",
 * });
 * const zpnAuthLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_auth_log",
 * });
 * const zpnAstAuthLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_ast_auth_log",
 * });
 * const zpnHttpTransLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_http_trans_log",
 * });
 * const zpnAuditLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_audit_log",
 * });
 * const zpnSysAuthLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_sys_auth_log",
 * });
 * const zpnAstComprehensiveStats = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_ast_comprehensive_stats",
 * });
 * const zpnWafHttpExchangesLog = zpa.getZPALSSLogTypeFormats({
 *     logType: "zpn_waf_http_exchanges_log",
 * });
 * ```
 */
export function getZPALSSLogTypeFormatsOutput(args: GetZPALSSLogTypeFormatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPALSSLogTypeFormatsResult> {
    return pulumi.output(args).apply((a: any) => getZPALSSLogTypeFormats(a, opts))
}

/**
 * A collection of arguments for invoking getZPALSSLogTypeFormats.
 */
export interface GetZPALSSLogTypeFormatsOutputArgs {
    /**
     * The type of log to be exported.
     */
    logType: pulumi.Input<string>;
}
