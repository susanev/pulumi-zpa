// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const engineering = zpa.getZPASCIMGroups({
 *     idpName: "idp_name",
 *     name: "Engineering",
 * });
 * ```
 */
export function getZPASCIMGroups(args?: GetZPASCIMGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetZPASCIMGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getZPASCIMGroups:getZPASCIMGroups", {
        "id": args.id,
        "idpId": args.idpId,
        "idpName": args.idpName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPASCIMGroups.
 */
export interface GetZPASCIMGroupsArgs {
    id?: string;
    /**
     * (string) The ID of the IdP corresponding to the SAML attribute.
     * * `idpGroupId`(string)
     * * `modifiedTime` (string)
     */
    idpId?: number;
    /**
     * Name. The name of the IdP where the scim group must be exported from.
     */
    idpName?: string;
    /**
     * Name. The name of the scim group to be exported.
     */
    name?: string;
}

/**
 * A collection of values returned by getZPASCIMGroups.
 */
export interface GetZPASCIMGroupsResult {
    /**
     * (string)
     */
    readonly creationTime: number;
    readonly id?: string;
    readonly idpGroupId: string;
    /**
     * (string) The ID of the IdP corresponding to the SAML attribute.
     * * `idpGroupId`(string)
     * * `modifiedTime` (string)
     */
    readonly idpId?: number;
    readonly idpName?: string;
    readonly modifiedTime: number;
    readonly name?: string;
}
/**
 * Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const engineering = zpa.getZPASCIMGroups({
 *     idpName: "idp_name",
 *     name: "Engineering",
 * });
 * ```
 */
export function getZPASCIMGroupsOutput(args?: GetZPASCIMGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPASCIMGroupsResult> {
    return pulumi.output(args).apply((a: any) => getZPASCIMGroups(a, opts))
}

/**
 * A collection of arguments for invoking getZPASCIMGroups.
 */
export interface GetZPASCIMGroupsOutputArgs {
    id?: pulumi.Input<string>;
    /**
     * (string) The ID of the IdP corresponding to the SAML attribute.
     * * `idpGroupId`(string)
     * * `modifiedTime` (string)
     */
    idpId?: pulumi.Input<number>;
    /**
     * Name. The name of the IdP where the scim group must be exported from.
     */
    idpName?: pulumi.Input<string>;
    /**
     * Name. The name of the scim group to be exported.
     */
    name?: pulumi.Input<string>;
}
