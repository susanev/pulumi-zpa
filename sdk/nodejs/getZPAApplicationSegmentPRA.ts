// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the **zpa_application_segment_pra** data source to get information about an application segment for Privileged Remote Access in the Zscaler Private Access cloud. This resource can then be referenced in an access policy rule, access policy timeout rule, access policy client forwarding rule and inspection policy. This resource supports Privileged Remote Access for both `RDP` and `SSH`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.getZPAApplicationSegmentPRA({
 *     name: "PRA_Example",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.getZPAApplicationSegmentPRA({
 *     id: "123456789",
 * });
 * ```
 */
export function getZPAApplicationSegmentPRA(args?: GetZPAApplicationSegmentPRAArgs, opts?: pulumi.InvokeOptions): Promise<GetZPAApplicationSegmentPRAResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getZPAApplicationSegmentPRA:getZPAApplicationSegmentPRA", {
        "id": args.id,
        "name": args.name,
        "tcpPortRanges": args.tcpPortRanges,
        "udpPortRanges": args.udpPortRanges,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPAApplicationSegmentPRA.
 */
export interface GetZPAApplicationSegmentPRAArgs {
    id?: string;
    /**
     * The name of the PRA Application Segment to be exported.
     */
    name?: string;
    /**
     * (string) TCP port ranges used to access the app.
     * * `from:`
     * * `to:`
     */
    tcpPortRanges?: inputs.GetZPAApplicationSegmentPRATcpPortRange[];
    /**
     * (string) UDP port ranges used to access the app.
     * * `from:`
     * * `to:`
     */
    udpPortRanges?: inputs.GetZPAApplicationSegmentPRAUdpPortRange[];
}

/**
 * A collection of values returned by getZPAApplicationSegmentPRA.
 */
export interface GetZPAApplicationSegmentPRAResult {
    /**
     * (string) Indicates whether users can bypass ZPA to access applications.
     */
    readonly bypassType: string;
    /**
     * (string)
     */
    readonly configSpace: string;
    /**
     * (string) Description of the application.
     */
    readonly description: string;
    /**
     * (string) List of domains and IPs.
     */
    readonly domainNames: string[];
    /**
     * (bool) Whether Double Encryption is enabled or disabled for the app.
     */
    readonly doubleEncrypt: boolean;
    /**
     * (bool) Whether this application is enabled or not
     */
    readonly enabled: boolean;
    readonly healthCheckType: string;
    /**
     * (string) Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.
     * * `healthCheckType` (string)
     */
    readonly healthReporting: string;
    readonly id?: string;
    /**
     * (bool)
     */
    readonly ipAnchored: boolean;
    /**
     * (bool) Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the connectors.
     */
    readonly isCnameEnabled: boolean;
    readonly name?: string;
    /**
     * (bool)
     */
    readonly passiveHealthEnabled: boolean;
    /**
     * (String) Segment Group IDs
     */
    readonly segmentGroupId: string;
    readonly segmentGroupName: string;
    /**
     * (string) List of Server Group IDs
     * * `id:` - (string) List of Server Group IDs
     */
    readonly serverGroups: outputs.GetZPAApplicationSegmentPRAServerGroup[];
    /**
     * (string) TCP port ranges used to access the app.
     * * `app_id:` - (string)
     * * `name:` - (string) Name of the Privileged Remote Access
     * * `description:` - (string) Description of the Privileged Remote Access
     * * `domain:` - (string) Domain name of the Privileged Remote Access
     */
    readonly sraApps: outputs.GetZPAApplicationSegmentPRASraApp[];
    /**
     * (string) TCP port ranges used to access the app.
     */
    readonly tcpPortRanges: string[];
    /**
     * (string) UDP port ranges used to access the app.
     */
    readonly udpPortRanges: string[];
}
/**
 * Use the **zpa_application_segment_pra** data source to get information about an application segment for Privileged Remote Access in the Zscaler Private Access cloud. This resource can then be referenced in an access policy rule, access policy timeout rule, access policy client forwarding rule and inspection policy. This resource supports Privileged Remote Access for both `RDP` and `SSH`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.getZPAApplicationSegmentPRA({
 *     name: "PRA_Example",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const this = zpa.getZPAApplicationSegmentPRA({
 *     id: "123456789",
 * });
 * ```
 */
export function getZPAApplicationSegmentPRAOutput(args?: GetZPAApplicationSegmentPRAOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPAApplicationSegmentPRAResult> {
    return pulumi.output(args).apply((a: any) => getZPAApplicationSegmentPRA(a, opts))
}

/**
 * A collection of arguments for invoking getZPAApplicationSegmentPRA.
 */
export interface GetZPAApplicationSegmentPRAOutputArgs {
    id?: pulumi.Input<string>;
    /**
     * The name of the PRA Application Segment to be exported.
     */
    name?: pulumi.Input<string>;
    /**
     * (string) TCP port ranges used to access the app.
     * * `from:`
     * * `to:`
     */
    tcpPortRanges?: pulumi.Input<pulumi.Input<inputs.GetZPAApplicationSegmentPRATcpPortRangeArgs>[]>;
    /**
     * (string) UDP port ranges used to access the app.
     * * `from:`
     * * `to:`
     */
    udpPortRanges?: pulumi.Input<pulumi.Input<inputs.GetZPAApplicationSegmentPRAUdpPortRangeArgs>[]>;
}
