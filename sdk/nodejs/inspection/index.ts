// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetInspectionAllPredefinedControlsArgs, GetInspectionAllPredefinedControlsResult, GetInspectionAllPredefinedControlsOutputArgs } from "./getInspectionAllPredefinedControls";
export const getInspectionAllPredefinedControls: typeof import("./getInspectionAllPredefinedControls").getInspectionAllPredefinedControls = null as any;
export const getInspectionAllPredefinedControlsOutput: typeof import("./getInspectionAllPredefinedControls").getInspectionAllPredefinedControlsOutput = null as any;
utilities.lazyLoad(exports, ["getInspectionAllPredefinedControls","getInspectionAllPredefinedControlsOutput"], () => require("./getInspectionAllPredefinedControls"));

export { GetInspectionCustomControlsArgs, GetInspectionCustomControlsResult, GetInspectionCustomControlsOutputArgs } from "./getInspectionCustomControls";
export const getInspectionCustomControls: typeof import("./getInspectionCustomControls").getInspectionCustomControls = null as any;
export const getInspectionCustomControlsOutput: typeof import("./getInspectionCustomControls").getInspectionCustomControlsOutput = null as any;
utilities.lazyLoad(exports, ["getInspectionCustomControls","getInspectionCustomControlsOutput"], () => require("./getInspectionCustomControls"));

export { GetInspectionPredefinedControlsArgs, GetInspectionPredefinedControlsResult, GetInspectionPredefinedControlsOutputArgs } from "./getInspectionPredefinedControls";
export const getInspectionPredefinedControls: typeof import("./getInspectionPredefinedControls").getInspectionPredefinedControls = null as any;
export const getInspectionPredefinedControlsOutput: typeof import("./getInspectionPredefinedControls").getInspectionPredefinedControlsOutput = null as any;
utilities.lazyLoad(exports, ["getInspectionPredefinedControls","getInspectionPredefinedControlsOutput"], () => require("./getInspectionPredefinedControls"));

export { GetInspectionProfileArgs, GetInspectionProfileResult, GetInspectionProfileOutputArgs } from "./getInspectionProfile";
export const getInspectionProfile: typeof import("./getInspectionProfile").getInspectionProfile = null as any;
export const getInspectionProfileOutput: typeof import("./getInspectionProfile").getInspectionProfileOutput = null as any;
utilities.lazyLoad(exports, ["getInspectionProfile","getInspectionProfileOutput"], () => require("./getInspectionProfile"));

export { InspectionCustomControlsArgs, InspectionCustomControlsState } from "./inspectionCustomControls";
export type InspectionCustomControls = import("./inspectionCustomControls").InspectionCustomControls;
export const InspectionCustomControls: typeof import("./inspectionCustomControls").InspectionCustomControls = null as any;
utilities.lazyLoad(exports, ["InspectionCustomControls"], () => require("./inspectionCustomControls"));

export { InspectionProfileArgs, InspectionProfileState } from "./inspectionProfile";
export type InspectionProfile = import("./inspectionProfile").InspectionProfile;
export const InspectionProfile: typeof import("./inspectionProfile").InspectionProfile = null as any;
utilities.lazyLoad(exports, ["InspectionProfile"], () => require("./inspectionProfile"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "zpa:Inspection/inspectionCustomControls:InspectionCustomControls":
                return new InspectionCustomControls(name, <any>undefined, { urn })
            case "zpa:Inspection/inspectionProfile:InspectionProfile":
                return new InspectionProfile(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("zpa", "Inspection/inspectionCustomControls", _module)
pulumi.runtime.registerResourceModule("zpa", "Inspection/inspectionProfile", _module)
