{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accesspolicy/index.ts",
        "accesspolicy/policyAccessRule.ts",
        "appconnectorgroup/connectorGroup.ts",
        "appconnectorgroup/getAppConnectorGroup.ts",
        "appconnectorgroup/index.ts",
        "applicationsegment/applicationSegment.ts",
        "applicationsegment/applicationSegmentBrowserAccess.ts",
        "applicationsegment/applicationSegmentInspection.ts",
        "applicationsegment/applicationSegmentPRA.ts",
        "applicationsegment/browserAccess.ts",
        "applicationsegment/getApplicationSegment.ts",
        "applicationsegment/getApplicationSegmentBrowserAccess.ts",
        "applicationsegment/getApplicationSegmentInspection.ts",
        "applicationsegment/getApplicationSegmentPRA.ts",
        "applicationsegment/index.ts",
        "applicationserver/applicationServer.ts",
        "applicationserver/getApplicationServer.ts",
        "applicationserver/index.ts",
        "browsercertificate/getBaCertificate.ts",
        "browsercertificate/index.ts",
        "cloudconnectorgroup/getCloudConnectorGroup.ts",
        "cloudconnectorgroup/index.ts",
        "config/index.ts",
        "config/vars.ts",
        "enrollmentcertificate/getEnrollmentCert.ts",
        "enrollmentcertificate/index.ts",
        "forwardpolicy/index.ts",
        "forwardpolicy/policyAccessForwardingRule.ts",
        "idpcontroller/getIdPController.ts",
        "idpcontroller/index.ts",
        "index.ts",
        "inspection/getInspectionAllPredefinedControls.ts",
        "inspection/getInspectionCustomControls.ts",
        "inspection/getInspectionPredefinedControls.ts",
        "inspection/getInspectionProfile.ts",
        "inspection/index.ts",
        "inspection/inspectionCustomControls.ts",
        "inspection/inspectionProfile.ts",
        "inspectionpolicy/index.ts",
        "inspectionpolicy/policyAccessInspectionRule.ts",
        "lssconfig/getLSSClientTypes.ts",
        "lssconfig/getLSSConfigController.ts",
        "lssconfig/getLSSLogTypeFormats.ts",
        "lssconfig/getLSSStatusCodes.ts",
        "lssconfig/index.ts",
        "lssconfig/lssconfigController.ts",
        "machinegroup/getMachineGroup.ts",
        "machinegroup/index.ts",
        "policytype/getPolicyType.ts",
        "policytype/index.ts",
        "postureprofile/getPostureProfile.ts",
        "postureprofile/index.ts",
        "provider.ts",
        "provisioningkey/getProvisioningKey.ts",
        "provisioningkey/index.ts",
        "provisioningkey/provisioningKey.ts",
        "samlattribute/getSAMLAttribute.ts",
        "samlattribute/index.ts",
        "scimattribute/getSCIMAttributeHeader.ts",
        "scimattribute/index.ts",
        "scimgroup/getSCIMGroups.ts",
        "scimgroup/index.ts",
        "segmentgroup/getSegmentGroup.ts",
        "segmentgroup/index.ts",
        "segmentgroup/segmentGroup.ts",
        "servergroup/getServerGroup.ts",
        "servergroup/index.ts",
        "servergroup/serverGroup.ts",
        "serviceedge/getServiceEdgeGroup.ts",
        "serviceedge/index.ts",
        "serviceedge/serviceEdgeGroup.ts",
        "timeoutpolicy/index.ts",
        "timeoutpolicy/policyAccessTimeOutRule.ts",
        "trustednetwork/getTrustedNetwork.ts",
        "trustednetwork/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
