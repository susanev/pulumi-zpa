// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { GetZPAAppConnectorGroupArgs, GetZPAAppConnectorGroupResult, GetZPAAppConnectorGroupOutputArgs } from "./getZPAAppConnectorGroup";
export const getZPAAppConnectorGroup: typeof import("./getZPAAppConnectorGroup").getZPAAppConnectorGroup = null as any;
export const getZPAAppConnectorGroupOutput: typeof import("./getZPAAppConnectorGroup").getZPAAppConnectorGroupOutput = null as any;
utilities.lazyLoad(exports, ["getZPAAppConnectorGroup","getZPAAppConnectorGroupOutput"], () => require("./getZPAAppConnectorGroup"));

export { GetZPAApplicationSegmentArgs, GetZPAApplicationSegmentResult, GetZPAApplicationSegmentOutputArgs } from "./getZPAApplicationSegment";
export const getZPAApplicationSegment: typeof import("./getZPAApplicationSegment").getZPAApplicationSegment = null as any;
export const getZPAApplicationSegmentOutput: typeof import("./getZPAApplicationSegment").getZPAApplicationSegmentOutput = null as any;
utilities.lazyLoad(exports, ["getZPAApplicationSegment","getZPAApplicationSegmentOutput"], () => require("./getZPAApplicationSegment"));

export { GetZPAApplicationSegmentBrowserAccessArgs, GetZPAApplicationSegmentBrowserAccessResult, GetZPAApplicationSegmentBrowserAccessOutputArgs } from "./getZPAApplicationSegmentBrowserAccess";
export const getZPAApplicationSegmentBrowserAccess: typeof import("./getZPAApplicationSegmentBrowserAccess").getZPAApplicationSegmentBrowserAccess = null as any;
export const getZPAApplicationSegmentBrowserAccessOutput: typeof import("./getZPAApplicationSegmentBrowserAccess").getZPAApplicationSegmentBrowserAccessOutput = null as any;
utilities.lazyLoad(exports, ["getZPAApplicationSegmentBrowserAccess","getZPAApplicationSegmentBrowserAccessOutput"], () => require("./getZPAApplicationSegmentBrowserAccess"));

export { GetZPAApplicationSegmentInspectionArgs, GetZPAApplicationSegmentInspectionResult, GetZPAApplicationSegmentInspectionOutputArgs } from "./getZPAApplicationSegmentInspection";
export const getZPAApplicationSegmentInspection: typeof import("./getZPAApplicationSegmentInspection").getZPAApplicationSegmentInspection = null as any;
export const getZPAApplicationSegmentInspectionOutput: typeof import("./getZPAApplicationSegmentInspection").getZPAApplicationSegmentInspectionOutput = null as any;
utilities.lazyLoad(exports, ["getZPAApplicationSegmentInspection","getZPAApplicationSegmentInspectionOutput"], () => require("./getZPAApplicationSegmentInspection"));

export { GetZPAApplicationSegmentPRAArgs, GetZPAApplicationSegmentPRAResult, GetZPAApplicationSegmentPRAOutputArgs } from "./getZPAApplicationSegmentPRA";
export const getZPAApplicationSegmentPRA: typeof import("./getZPAApplicationSegmentPRA").getZPAApplicationSegmentPRA = null as any;
export const getZPAApplicationSegmentPRAOutput: typeof import("./getZPAApplicationSegmentPRA").getZPAApplicationSegmentPRAOutput = null as any;
utilities.lazyLoad(exports, ["getZPAApplicationSegmentPRA","getZPAApplicationSegmentPRAOutput"], () => require("./getZPAApplicationSegmentPRA"));

export { GetZPAApplicationServerArgs, GetZPAApplicationServerResult, GetZPAApplicationServerOutputArgs } from "./getZPAApplicationServer";
export const getZPAApplicationServer: typeof import("./getZPAApplicationServer").getZPAApplicationServer = null as any;
export const getZPAApplicationServerOutput: typeof import("./getZPAApplicationServer").getZPAApplicationServerOutput = null as any;
utilities.lazyLoad(exports, ["getZPAApplicationServer","getZPAApplicationServerOutput"], () => require("./getZPAApplicationServer"));

export { GetZPABaCertificateArgs, GetZPABaCertificateResult, GetZPABaCertificateOutputArgs } from "./getZPABaCertificate";
export const getZPABaCertificate: typeof import("./getZPABaCertificate").getZPABaCertificate = null as any;
export const getZPABaCertificateOutput: typeof import("./getZPABaCertificate").getZPABaCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getZPABaCertificate","getZPABaCertificateOutput"], () => require("./getZPABaCertificate"));

export { GetZPACloudConnectorGroupArgs, GetZPACloudConnectorGroupResult, GetZPACloudConnectorGroupOutputArgs } from "./getZPACloudConnectorGroup";
export const getZPACloudConnectorGroup: typeof import("./getZPACloudConnectorGroup").getZPACloudConnectorGroup = null as any;
export const getZPACloudConnectorGroupOutput: typeof import("./getZPACloudConnectorGroup").getZPACloudConnectorGroupOutput = null as any;
utilities.lazyLoad(exports, ["getZPACloudConnectorGroup","getZPACloudConnectorGroupOutput"], () => require("./getZPACloudConnectorGroup"));

export { GetZPAEnrollmentCertArgs, GetZPAEnrollmentCertResult, GetZPAEnrollmentCertOutputArgs } from "./getZPAEnrollmentCert";
export const getZPAEnrollmentCert: typeof import("./getZPAEnrollmentCert").getZPAEnrollmentCert = null as any;
export const getZPAEnrollmentCertOutput: typeof import("./getZPAEnrollmentCert").getZPAEnrollmentCertOutput = null as any;
utilities.lazyLoad(exports, ["getZPAEnrollmentCert","getZPAEnrollmentCertOutput"], () => require("./getZPAEnrollmentCert"));

export { GetZPAIdPControllerArgs, GetZPAIdPControllerResult, GetZPAIdPControllerOutputArgs } from "./getZPAIdPController";
export const getZPAIdPController: typeof import("./getZPAIdPController").getZPAIdPController = null as any;
export const getZPAIdPControllerOutput: typeof import("./getZPAIdPController").getZPAIdPControllerOutput = null as any;
utilities.lazyLoad(exports, ["getZPAIdPController","getZPAIdPControllerOutput"], () => require("./getZPAIdPController"));

export { GetZPAInspectionAllPredefinedControlsArgs, GetZPAInspectionAllPredefinedControlsResult, GetZPAInspectionAllPredefinedControlsOutputArgs } from "./getZPAInspectionAllPredefinedControls";
export const getZPAInspectionAllPredefinedControls: typeof import("./getZPAInspectionAllPredefinedControls").getZPAInspectionAllPredefinedControls = null as any;
export const getZPAInspectionAllPredefinedControlsOutput: typeof import("./getZPAInspectionAllPredefinedControls").getZPAInspectionAllPredefinedControlsOutput = null as any;
utilities.lazyLoad(exports, ["getZPAInspectionAllPredefinedControls","getZPAInspectionAllPredefinedControlsOutput"], () => require("./getZPAInspectionAllPredefinedControls"));

export { GetZPAInspectionCustomControlsArgs, GetZPAInspectionCustomControlsResult, GetZPAInspectionCustomControlsOutputArgs } from "./getZPAInspectionCustomControls";
export const getZPAInspectionCustomControls: typeof import("./getZPAInspectionCustomControls").getZPAInspectionCustomControls = null as any;
export const getZPAInspectionCustomControlsOutput: typeof import("./getZPAInspectionCustomControls").getZPAInspectionCustomControlsOutput = null as any;
utilities.lazyLoad(exports, ["getZPAInspectionCustomControls","getZPAInspectionCustomControlsOutput"], () => require("./getZPAInspectionCustomControls"));

export { GetZPAInspectionPredefinedControlsArgs, GetZPAInspectionPredefinedControlsResult, GetZPAInspectionPredefinedControlsOutputArgs } from "./getZPAInspectionPredefinedControls";
export const getZPAInspectionPredefinedControls: typeof import("./getZPAInspectionPredefinedControls").getZPAInspectionPredefinedControls = null as any;
export const getZPAInspectionPredefinedControlsOutput: typeof import("./getZPAInspectionPredefinedControls").getZPAInspectionPredefinedControlsOutput = null as any;
utilities.lazyLoad(exports, ["getZPAInspectionPredefinedControls","getZPAInspectionPredefinedControlsOutput"], () => require("./getZPAInspectionPredefinedControls"));

export { GetZPAInspectionProfileArgs, GetZPAInspectionProfileResult, GetZPAInspectionProfileOutputArgs } from "./getZPAInspectionProfile";
export const getZPAInspectionProfile: typeof import("./getZPAInspectionProfile").getZPAInspectionProfile = null as any;
export const getZPAInspectionProfileOutput: typeof import("./getZPAInspectionProfile").getZPAInspectionProfileOutput = null as any;
utilities.lazyLoad(exports, ["getZPAInspectionProfile","getZPAInspectionProfileOutput"], () => require("./getZPAInspectionProfile"));

export { GetZPALSSClientTypesResult } from "./getZPALSSClientTypes";
export const getZPALSSClientTypes: typeof import("./getZPALSSClientTypes").getZPALSSClientTypes = null as any;
utilities.lazyLoad(exports, ["getZPALSSClientTypes"], () => require("./getZPALSSClientTypes"));

export { GetZPALSSConfigControllerArgs, GetZPALSSConfigControllerResult, GetZPALSSConfigControllerOutputArgs } from "./getZPALSSConfigController";
export const getZPALSSConfigController: typeof import("./getZPALSSConfigController").getZPALSSConfigController = null as any;
export const getZPALSSConfigControllerOutput: typeof import("./getZPALSSConfigController").getZPALSSConfigControllerOutput = null as any;
utilities.lazyLoad(exports, ["getZPALSSConfigController","getZPALSSConfigControllerOutput"], () => require("./getZPALSSConfigController"));

export { GetZPALSSLogTypeFormatsArgs, GetZPALSSLogTypeFormatsResult, GetZPALSSLogTypeFormatsOutputArgs } from "./getZPALSSLogTypeFormats";
export const getZPALSSLogTypeFormats: typeof import("./getZPALSSLogTypeFormats").getZPALSSLogTypeFormats = null as any;
export const getZPALSSLogTypeFormatsOutput: typeof import("./getZPALSSLogTypeFormats").getZPALSSLogTypeFormatsOutput = null as any;
utilities.lazyLoad(exports, ["getZPALSSLogTypeFormats","getZPALSSLogTypeFormatsOutput"], () => require("./getZPALSSLogTypeFormats"));

export { GetZPALSSStatusCodesResult } from "./getZPALSSStatusCodes";
export const getZPALSSStatusCodes: typeof import("./getZPALSSStatusCodes").getZPALSSStatusCodes = null as any;
utilities.lazyLoad(exports, ["getZPALSSStatusCodes"], () => require("./getZPALSSStatusCodes"));

export { GetZPAMachineGroupArgs, GetZPAMachineGroupResult, GetZPAMachineGroupOutputArgs } from "./getZPAMachineGroup";
export const getZPAMachineGroup: typeof import("./getZPAMachineGroup").getZPAMachineGroup = null as any;
export const getZPAMachineGroupOutput: typeof import("./getZPAMachineGroup").getZPAMachineGroupOutput = null as any;
utilities.lazyLoad(exports, ["getZPAMachineGroup","getZPAMachineGroupOutput"], () => require("./getZPAMachineGroup"));

export { GetZPAPolicyTypeArgs, GetZPAPolicyTypeResult, GetZPAPolicyTypeOutputArgs } from "./getZPAPolicyType";
export const getZPAPolicyType: typeof import("./getZPAPolicyType").getZPAPolicyType = null as any;
export const getZPAPolicyTypeOutput: typeof import("./getZPAPolicyType").getZPAPolicyTypeOutput = null as any;
utilities.lazyLoad(exports, ["getZPAPolicyType","getZPAPolicyTypeOutput"], () => require("./getZPAPolicyType"));

export { GetZPAPostureProfileArgs, GetZPAPostureProfileResult, GetZPAPostureProfileOutputArgs } from "./getZPAPostureProfile";
export const getZPAPostureProfile: typeof import("./getZPAPostureProfile").getZPAPostureProfile = null as any;
export const getZPAPostureProfileOutput: typeof import("./getZPAPostureProfile").getZPAPostureProfileOutput = null as any;
utilities.lazyLoad(exports, ["getZPAPostureProfile","getZPAPostureProfileOutput"], () => require("./getZPAPostureProfile"));

export { GetZPAProvisioningKeyArgs, GetZPAProvisioningKeyResult, GetZPAProvisioningKeyOutputArgs } from "./getZPAProvisioningKey";
export const getZPAProvisioningKey: typeof import("./getZPAProvisioningKey").getZPAProvisioningKey = null as any;
export const getZPAProvisioningKeyOutput: typeof import("./getZPAProvisioningKey").getZPAProvisioningKeyOutput = null as any;
utilities.lazyLoad(exports, ["getZPAProvisioningKey","getZPAProvisioningKeyOutput"], () => require("./getZPAProvisioningKey"));

export { GetZPASAMLAttributeArgs, GetZPASAMLAttributeResult, GetZPASAMLAttributeOutputArgs } from "./getZPASAMLAttribute";
export const getZPASAMLAttribute: typeof import("./getZPASAMLAttribute").getZPASAMLAttribute = null as any;
export const getZPASAMLAttributeOutput: typeof import("./getZPASAMLAttribute").getZPASAMLAttributeOutput = null as any;
utilities.lazyLoad(exports, ["getZPASAMLAttribute","getZPASAMLAttributeOutput"], () => require("./getZPASAMLAttribute"));

export { GetZPASCIMAttributeHeaderArgs, GetZPASCIMAttributeHeaderResult, GetZPASCIMAttributeHeaderOutputArgs } from "./getZPASCIMAttributeHeader";
export const getZPASCIMAttributeHeader: typeof import("./getZPASCIMAttributeHeader").getZPASCIMAttributeHeader = null as any;
export const getZPASCIMAttributeHeaderOutput: typeof import("./getZPASCIMAttributeHeader").getZPASCIMAttributeHeaderOutput = null as any;
utilities.lazyLoad(exports, ["getZPASCIMAttributeHeader","getZPASCIMAttributeHeaderOutput"], () => require("./getZPASCIMAttributeHeader"));

export { GetZPASCIMGroupsArgs, GetZPASCIMGroupsResult, GetZPASCIMGroupsOutputArgs } from "./getZPASCIMGroups";
export const getZPASCIMGroups: typeof import("./getZPASCIMGroups").getZPASCIMGroups = null as any;
export const getZPASCIMGroupsOutput: typeof import("./getZPASCIMGroups").getZPASCIMGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getZPASCIMGroups","getZPASCIMGroupsOutput"], () => require("./getZPASCIMGroups"));

export { GetZPASegmentGroupArgs, GetZPASegmentGroupResult, GetZPASegmentGroupOutputArgs } from "./getZPASegmentGroup";
export const getZPASegmentGroup: typeof import("./getZPASegmentGroup").getZPASegmentGroup = null as any;
export const getZPASegmentGroupOutput: typeof import("./getZPASegmentGroup").getZPASegmentGroupOutput = null as any;
utilities.lazyLoad(exports, ["getZPASegmentGroup","getZPASegmentGroupOutput"], () => require("./getZPASegmentGroup"));

export { GetZPAServerGroupArgs, GetZPAServerGroupResult, GetZPAServerGroupOutputArgs } from "./getZPAServerGroup";
export const getZPAServerGroup: typeof import("./getZPAServerGroup").getZPAServerGroup = null as any;
export const getZPAServerGroupOutput: typeof import("./getZPAServerGroup").getZPAServerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getZPAServerGroup","getZPAServerGroupOutput"], () => require("./getZPAServerGroup"));

export { GetZPAServiceEdgeGroupArgs, GetZPAServiceEdgeGroupResult, GetZPAServiceEdgeGroupOutputArgs } from "./getZPAServiceEdgeGroup";
export const getZPAServiceEdgeGroup: typeof import("./getZPAServiceEdgeGroup").getZPAServiceEdgeGroup = null as any;
export const getZPAServiceEdgeGroupOutput: typeof import("./getZPAServiceEdgeGroup").getZPAServiceEdgeGroupOutput = null as any;
utilities.lazyLoad(exports, ["getZPAServiceEdgeGroup","getZPAServiceEdgeGroupOutput"], () => require("./getZPAServiceEdgeGroup"));

export { GetZPATrustedNetworkArgs, GetZPATrustedNetworkResult, GetZPATrustedNetworkOutputArgs } from "./getZPATrustedNetwork";
export const getZPATrustedNetwork: typeof import("./getZPATrustedNetwork").getZPATrustedNetwork = null as any;
export const getZPATrustedNetworkOutput: typeof import("./getZPATrustedNetwork").getZPATrustedNetworkOutput = null as any;
utilities.lazyLoad(exports, ["getZPATrustedNetwork","getZPATrustedNetworkOutput"], () => require("./getZPATrustedNetwork"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { ZPAAppConnectorGroupArgs, ZPAAppConnectorGroupState } from "./zpaappConnectorGroup";
export type ZPAAppConnectorGroup = import("./zpaappConnectorGroup").ZPAAppConnectorGroup;
export const ZPAAppConnectorGroup: typeof import("./zpaappConnectorGroup").ZPAAppConnectorGroup = null as any;
utilities.lazyLoad(exports, ["ZPAAppConnectorGroup"], () => require("./zpaappConnectorGroup"));

export { ZPAApplicationSegmentArgs, ZPAApplicationSegmentState } from "./zpaapplicationSegment";
export type ZPAApplicationSegment = import("./zpaapplicationSegment").ZPAApplicationSegment;
export const ZPAApplicationSegment: typeof import("./zpaapplicationSegment").ZPAApplicationSegment = null as any;
utilities.lazyLoad(exports, ["ZPAApplicationSegment"], () => require("./zpaapplicationSegment"));

export { ZPAApplicationSegmentBrowserAccessArgs, ZPAApplicationSegmentBrowserAccessState } from "./zpaapplicationSegmentBrowserAccess";
export type ZPAApplicationSegmentBrowserAccess = import("./zpaapplicationSegmentBrowserAccess").ZPAApplicationSegmentBrowserAccess;
export const ZPAApplicationSegmentBrowserAccess: typeof import("./zpaapplicationSegmentBrowserAccess").ZPAApplicationSegmentBrowserAccess = null as any;
utilities.lazyLoad(exports, ["ZPAApplicationSegmentBrowserAccess"], () => require("./zpaapplicationSegmentBrowserAccess"));

export { ZPAApplicationSegmentInspectionArgs, ZPAApplicationSegmentInspectionState } from "./zpaapplicationSegmentInspection";
export type ZPAApplicationSegmentInspection = import("./zpaapplicationSegmentInspection").ZPAApplicationSegmentInspection;
export const ZPAApplicationSegmentInspection: typeof import("./zpaapplicationSegmentInspection").ZPAApplicationSegmentInspection = null as any;
utilities.lazyLoad(exports, ["ZPAApplicationSegmentInspection"], () => require("./zpaapplicationSegmentInspection"));

export { ZPAApplicationSegmentPRAArgs, ZPAApplicationSegmentPRAState } from "./zpaapplicationSegmentPRA";
export type ZPAApplicationSegmentPRA = import("./zpaapplicationSegmentPRA").ZPAApplicationSegmentPRA;
export const ZPAApplicationSegmentPRA: typeof import("./zpaapplicationSegmentPRA").ZPAApplicationSegmentPRA = null as any;
utilities.lazyLoad(exports, ["ZPAApplicationSegmentPRA"], () => require("./zpaapplicationSegmentPRA"));

export { ZPAApplicationServerArgs, ZPAApplicationServerState } from "./zpaapplicationServer";
export type ZPAApplicationServer = import("./zpaapplicationServer").ZPAApplicationServer;
export const ZPAApplicationServer: typeof import("./zpaapplicationServer").ZPAApplicationServer = null as any;
utilities.lazyLoad(exports, ["ZPAApplicationServer"], () => require("./zpaapplicationServer"));

export { ZPABrowserAccessArgs, ZPABrowserAccessState } from "./zpabrowserAccess";
export type ZPABrowserAccess = import("./zpabrowserAccess").ZPABrowserAccess;
export const ZPABrowserAccess: typeof import("./zpabrowserAccess").ZPABrowserAccess = null as any;
utilities.lazyLoad(exports, ["ZPABrowserAccess"], () => require("./zpabrowserAccess"));

export { ZPAInspectionCustomControlsArgs, ZPAInspectionCustomControlsState } from "./zpainspectionCustomControls";
export type ZPAInspectionCustomControls = import("./zpainspectionCustomControls").ZPAInspectionCustomControls;
export const ZPAInspectionCustomControls: typeof import("./zpainspectionCustomControls").ZPAInspectionCustomControls = null as any;
utilities.lazyLoad(exports, ["ZPAInspectionCustomControls"], () => require("./zpainspectionCustomControls"));

export { ZPAInspectionProfileArgs, ZPAInspectionProfileState } from "./zpainspectionProfile";
export type ZPAInspectionProfile = import("./zpainspectionProfile").ZPAInspectionProfile;
export const ZPAInspectionProfile: typeof import("./zpainspectionProfile").ZPAInspectionProfile = null as any;
utilities.lazyLoad(exports, ["ZPAInspectionProfile"], () => require("./zpainspectionProfile"));

export { ZPALSSConfigControllerArgs, ZPALSSConfigControllerState } from "./zpalssconfigController";
export type ZPALSSConfigController = import("./zpalssconfigController").ZPALSSConfigController;
export const ZPALSSConfigController: typeof import("./zpalssconfigController").ZPALSSConfigController = null as any;
utilities.lazyLoad(exports, ["ZPALSSConfigController"], () => require("./zpalssconfigController"));

export { ZPAPolicyAccessForwardingRuleArgs, ZPAPolicyAccessForwardingRuleState } from "./zpapolicyAccessForwardingRule";
export type ZPAPolicyAccessForwardingRule = import("./zpapolicyAccessForwardingRule").ZPAPolicyAccessForwardingRule;
export const ZPAPolicyAccessForwardingRule: typeof import("./zpapolicyAccessForwardingRule").ZPAPolicyAccessForwardingRule = null as any;
utilities.lazyLoad(exports, ["ZPAPolicyAccessForwardingRule"], () => require("./zpapolicyAccessForwardingRule"));

export { ZPAPolicyAccessInspectionRuleArgs, ZPAPolicyAccessInspectionRuleState } from "./zpapolicyAccessInspectionRule";
export type ZPAPolicyAccessInspectionRule = import("./zpapolicyAccessInspectionRule").ZPAPolicyAccessInspectionRule;
export const ZPAPolicyAccessInspectionRule: typeof import("./zpapolicyAccessInspectionRule").ZPAPolicyAccessInspectionRule = null as any;
utilities.lazyLoad(exports, ["ZPAPolicyAccessInspectionRule"], () => require("./zpapolicyAccessInspectionRule"));

export { ZPAPolicyAccessRuleArgs, ZPAPolicyAccessRuleState } from "./zpapolicyAccessRule";
export type ZPAPolicyAccessRule = import("./zpapolicyAccessRule").ZPAPolicyAccessRule;
export const ZPAPolicyAccessRule: typeof import("./zpapolicyAccessRule").ZPAPolicyAccessRule = null as any;
utilities.lazyLoad(exports, ["ZPAPolicyAccessRule"], () => require("./zpapolicyAccessRule"));

export { ZPAPolicyAccessTimeOutRuleArgs, ZPAPolicyAccessTimeOutRuleState } from "./zpapolicyAccessTimeOutRule";
export type ZPAPolicyAccessTimeOutRule = import("./zpapolicyAccessTimeOutRule").ZPAPolicyAccessTimeOutRule;
export const ZPAPolicyAccessTimeOutRule: typeof import("./zpapolicyAccessTimeOutRule").ZPAPolicyAccessTimeOutRule = null as any;
utilities.lazyLoad(exports, ["ZPAPolicyAccessTimeOutRule"], () => require("./zpapolicyAccessTimeOutRule"));

export { ZPAProvisioningKeyArgs, ZPAProvisioningKeyState } from "./zpaprovisioningKey";
export type ZPAProvisioningKey = import("./zpaprovisioningKey").ZPAProvisioningKey;
export const ZPAProvisioningKey: typeof import("./zpaprovisioningKey").ZPAProvisioningKey = null as any;
utilities.lazyLoad(exports, ["ZPAProvisioningKey"], () => require("./zpaprovisioningKey"));

export { ZPASegmentGroupArgs, ZPASegmentGroupState } from "./zpasegmentGroup";
export type ZPASegmentGroup = import("./zpasegmentGroup").ZPASegmentGroup;
export const ZPASegmentGroup: typeof import("./zpasegmentGroup").ZPASegmentGroup = null as any;
utilities.lazyLoad(exports, ["ZPASegmentGroup"], () => require("./zpasegmentGroup"));

export { ZPAServerGroupArgs, ZPAServerGroupState } from "./zpaserverGroup";
export type ZPAServerGroup = import("./zpaserverGroup").ZPAServerGroup;
export const ZPAServerGroup: typeof import("./zpaserverGroup").ZPAServerGroup = null as any;
utilities.lazyLoad(exports, ["ZPAServerGroup"], () => require("./zpaserverGroup"));

export { ZPAServiceEdgeGroupArgs, ZPAServiceEdgeGroupState } from "./zpaserviceEdgeGroup";
export type ZPAServiceEdgeGroup = import("./zpaserviceEdgeGroup").ZPAServiceEdgeGroup;
export const ZPAServiceEdgeGroup: typeof import("./zpaserviceEdgeGroup").ZPAServiceEdgeGroup = null as any;
utilities.lazyLoad(exports, ["ZPAServiceEdgeGroup"], () => require("./zpaserviceEdgeGroup"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup":
                return new ZPAAppConnectorGroup(name, <any>undefined, { urn })
            case "zpa:index/zPAApplicationSegment:ZPAApplicationSegment":
                return new ZPAApplicationSegment(name, <any>undefined, { urn })
            case "zpa:index/zPAApplicationSegmentBrowserAccess:ZPAApplicationSegmentBrowserAccess":
                return new ZPAApplicationSegmentBrowserAccess(name, <any>undefined, { urn })
            case "zpa:index/zPAApplicationSegmentInspection:ZPAApplicationSegmentInspection":
                return new ZPAApplicationSegmentInspection(name, <any>undefined, { urn })
            case "zpa:index/zPAApplicationSegmentPRA:ZPAApplicationSegmentPRA":
                return new ZPAApplicationSegmentPRA(name, <any>undefined, { urn })
            case "zpa:index/zPAApplicationServer:ZPAApplicationServer":
                return new ZPAApplicationServer(name, <any>undefined, { urn })
            case "zpa:index/zPABrowserAccess:ZPABrowserAccess":
                return new ZPABrowserAccess(name, <any>undefined, { urn })
            case "zpa:index/zPAInspectionCustomControls:ZPAInspectionCustomControls":
                return new ZPAInspectionCustomControls(name, <any>undefined, { urn })
            case "zpa:index/zPAInspectionProfile:ZPAInspectionProfile":
                return new ZPAInspectionProfile(name, <any>undefined, { urn })
            case "zpa:index/zPALSSConfigController:ZPALSSConfigController":
                return new ZPALSSConfigController(name, <any>undefined, { urn })
            case "zpa:index/zPAPolicyAccessForwardingRule:ZPAPolicyAccessForwardingRule":
                return new ZPAPolicyAccessForwardingRule(name, <any>undefined, { urn })
            case "zpa:index/zPAPolicyAccessInspectionRule:ZPAPolicyAccessInspectionRule":
                return new ZPAPolicyAccessInspectionRule(name, <any>undefined, { urn })
            case "zpa:index/zPAPolicyAccessRule:ZPAPolicyAccessRule":
                return new ZPAPolicyAccessRule(name, <any>undefined, { urn })
            case "zpa:index/zPAPolicyAccessTimeOutRule:ZPAPolicyAccessTimeOutRule":
                return new ZPAPolicyAccessTimeOutRule(name, <any>undefined, { urn })
            case "zpa:index/zPAProvisioningKey:ZPAProvisioningKey":
                return new ZPAProvisioningKey(name, <any>undefined, { urn })
            case "zpa:index/zPASegmentGroup:ZPASegmentGroup":
                return new ZPASegmentGroup(name, <any>undefined, { urn })
            case "zpa:index/zPAServerGroup:ZPAServerGroup":
                return new ZPAServerGroup(name, <any>undefined, { urn })
            case "zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup":
                return new ZPAServiceEdgeGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("zpa", "index/zPAAppConnectorGroup", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAApplicationSegment", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAApplicationSegmentBrowserAccess", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAApplicationSegmentInspection", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAApplicationSegmentPRA", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAApplicationServer", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPABrowserAccess", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAInspectionCustomControls", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAInspectionProfile", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPALSSConfigController", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAPolicyAccessForwardingRule", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAPolicyAccessInspectionRule", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAPolicyAccessRule", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAPolicyAccessTimeOutRule", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAProvisioningKey", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPASegmentGroup", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAServerGroup", _module)
pulumi.runtime.registerResourceModule("zpa", "index/zPAServiceEdgeGroup", _module)
pulumi.runtime.registerResourcePackage("zpa", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:zpa") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
