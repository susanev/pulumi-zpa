// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the **zpa_service_edge_group** data source to get information about a service edge group in the Zscaler Private Access cloud. This data source can then be referenced in an App Connector Group. This data source can then be referenced in the following resources:
 *
 * * Create a server group
 * * Provisioning Key
 * * Access policy rule
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getZPAServiceEdgeGroup({
 *     name: "DataCenter",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getZPAServiceEdgeGroup({
 *     id: "123456789",
 * });
 * ```
 */
export function getZPAServiceEdgeGroup(args?: GetZPAServiceEdgeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetZPAServiceEdgeGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getZPAServiceEdgeGroup:getZPAServiceEdgeGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPAServiceEdgeGroup.
 */
export interface GetZPAServiceEdgeGroupArgs {
    /**
     * The ID of the service edge group to be exported.
     */
    id?: string;
    /**
     * The name of the service edge group to be exported.
     */
    name?: string;
}

/**
 * A collection of values returned by getZPAServiceEdgeGroup.
 */
export interface GetZPAServiceEdgeGroupResult {
    /**
     * (string) Whether Double Encryption is enabled or disabled for the app.
     */
    readonly cityCountry: string;
    /**
     * (string)
     */
    readonly countryCode: string;
    /**
     * (string)
     */
    readonly creationTime: string;
    readonly description: string;
    /**
     * (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
     */
    readonly enabled: boolean;
    /**
     * (string)
     */
    readonly geoLocationId: string;
    readonly id: string;
    /**
     * (string)
     */
    readonly isPublic: string;
    /**
     * (string) Latitude of the Service Edge Group. Integer or decimal. With values in the range of `-90` to `90`
     */
    readonly latitude: string;
    /**
     * (string) Location of the Service Edge Group.
     */
    readonly location: string;
    /**
     * (string) Longitude of the Service Edge Group.Integer or decimal. With values in the range of `-180` to `180`
     */
    readonly longitude: string;
    /**
     * (string)
     */
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name: string;
    /**
     * (bool) Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
     */
    readonly overrideVersionProfile: boolean;
    /**
     * (string)
     * * `name` (string)
     * * `applicationStartTime` (string)
     * * `serviceEdgeGroupId` (string)
     * * `serviceEdgeGroupName` (string)
     * * `controlChannelStatus` (string)
     * * `creationTime` (string)
     * * `modifiedBy` (string)
     * * `modifiedTime` (string)
     * * `ctrlBrokerName` (string)
     * * `currentVersion` (string)
     * * `expectedUpgradeTime` (string)
     * * `expectedVersion` (string)
     * * `figerprint` (string)
     * * `ipAcl` (string)
     * * `issuedCertId` (string)
     * * `lastBrokerConnectTime` (string)
     * * `lastBrokerConnectTimeDuration` (string)
     * * `lastBrokerDisconnectTime` (string)
     * * `lastBrokerDisconnectTimeDuration` (string)
     * * `lastUpgradeTime` (string)
     * * `latitude` (string)
     * * `listenIps` (string)
     * * `location` (string)
     * * `longitude` (string)
     * * `provisioningKeyId` (string)
     * * `provisioningKeyName` (string)
     * * `platform` (string)
     * * `previousVersion` (string)
     * * `privateIp` (string)
     * * `publicIp` (string)
     * * `publishIps` (string)
     * * `sargeVersion` (string)
     * * `enrollmentCert` (string)
     * * `upgradeAttempt` (string)
     * * `upgradeStatus` (string)
     */
    readonly serviceEdges: outputs.GetZPAServiceEdgeGroupServiceEdge[];
    /**
     * (string)
     * * `creationTime` (string)
     * * `domain` (string)
     * * `id` (string)
     * * `masterCustomerId` (string)
     * * `modifiedBy` (string)
     * * `modifiedTime` (string)
     * * `name` (string)
     * * `networkId` (string)
     * * `zscalerCloud` (string)
     */
    readonly trustedNetworks: outputs.GetZPAServiceEdgeGroupTrustedNetwork[];
    /**
     * (string) App Connectors in this group will attempt to update to a newer version of the software during this specified day
     */
    readonly upgradeDay: string;
    /**
     * (string) App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
     */
    readonly upgradeTimeInSecs: string;
    /**
     * (String) ID of the version profile.
     * Exported values are:
     * * ``0`` = ``Default``
     * * ``1`` = ``Previous Default``
     * * ``2`` = ``New Release``
     */
    readonly versionProfileId: string;
    /**
     * (String)
     * Exported values are:
     * * ``Default`` = ``0``
     * * ``Previous Default`` = ``1``
     * * ``New Release`` = ``2``
     */
    readonly versionProfileName: string;
    /**
     * (string)
     * Exported values are:
     * * ``ALL``
     * * ``NONE``
     * * ``CUSTOM``
     */
    readonly versionProfileVisibilityScope: string;
}
/**
 * Use the **zpa_service_edge_group** data source to get information about a service edge group in the Zscaler Private Access cloud. This data source can then be referenced in an App Connector Group. This data source can then be referenced in the following resources:
 *
 * * Create a server group
 * * Provisioning Key
 * * Access policy rule
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getZPAServiceEdgeGroup({
 *     name: "DataCenter",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getZPAServiceEdgeGroup({
 *     id: "123456789",
 * });
 * ```
 */
export function getZPAServiceEdgeGroupOutput(args?: GetZPAServiceEdgeGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPAServiceEdgeGroupResult> {
    return pulumi.output(args).apply((a: any) => getZPAServiceEdgeGroup(a, opts))
}

/**
 * A collection of arguments for invoking getZPAServiceEdgeGroup.
 */
export interface GetZPAServiceEdgeGroupOutputArgs {
    /**
     * The ID of the service edge group to be exported.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the service edge group to be exported.
     */
    name?: pulumi.Input<string>;
}
