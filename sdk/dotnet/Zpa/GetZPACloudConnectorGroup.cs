// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    public static class GetZPACloudConnectorGroup
    {
        /// <summary>
        /// Use the **zpa_cloud_connector_group** data source to get information about a cloud connector group created from the Zscaler Private Access cloud. This data source can then be referenced within an Access Policy rule
        /// 
        /// &gt; **NOTE:** A Cloud Connector Group resource is created in the Zscaler Cloud Connector cloud and replicated to the ZPA cloud. This resource can then be referenced in a Access Policy Rule where the Object Type = `CLOUD_CONNECTOR_GROUP` is being used.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Zpa.GetZPACloudConnectorGroup.Invoke(new()
        ///     {
        ///         Name = "AWS-Cloud",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Zpa.GetZPACloudConnectorGroup.Invoke(new()
        ///     {
        ///         Id = "1234567890",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetZPACloudConnectorGroupResult> InvokeAsync(GetZPACloudConnectorGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZPACloudConnectorGroupResult>("zpa:index/getZPACloudConnectorGroup:getZPACloudConnectorGroup", args ?? new GetZPACloudConnectorGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_cloud_connector_group** data source to get information about a cloud connector group created from the Zscaler Private Access cloud. This data source can then be referenced within an Access Policy rule
        /// 
        /// &gt; **NOTE:** A Cloud Connector Group resource is created in the Zscaler Cloud Connector cloud and replicated to the ZPA cloud. This resource can then be referenced in a Access Policy Rule where the Object Type = `CLOUD_CONNECTOR_GROUP` is being used.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Zpa.GetZPACloudConnectorGroup.Invoke(new()
        ///     {
        ///         Name = "AWS-Cloud",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Zpa.GetZPACloudConnectorGroup.Invoke(new()
        ///     {
        ///         Id = "1234567890",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetZPACloudConnectorGroupResult> Invoke(GetZPACloudConnectorGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZPACloudConnectorGroupResult>("zpa:index/getZPACloudConnectorGroup:getZPACloudConnectorGroup", args ?? new GetZPACloudConnectorGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPACloudConnectorGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This field defines the id of the cloud connector group.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// This field defines the name of the cloud connector group.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetZPACloudConnectorGroupArgs()
        {
        }
        public static new GetZPACloudConnectorGroupArgs Empty => new GetZPACloudConnectorGroupArgs();
    }

    public sealed class GetZPACloudConnectorGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This field defines the id of the cloud connector group.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// This field defines the name of the cloud connector group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetZPACloudConnectorGroupInvokeArgs()
        {
        }
        public static new GetZPACloudConnectorGroupInvokeArgs Empty => new GetZPACloudConnectorGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetZPACloudConnectorGroupResult
    {
        /// <summary>
        /// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZPACloudConnectorGroupCloudConnectorResult> CloudConnectors;
        /// <summary>
        /// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (bool) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly string GeolocationId;
        public readonly string? Id;
        /// <summary>
        /// (string)- Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        /// <summary>
        /// (string) - This field defines the name of the cloud connector group.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly string ZiaCloud;
        /// <summary>
        /// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
        /// </summary>
        public readonly string ZiaOrgId;

        [OutputConstructor]
        private GetZPACloudConnectorGroupResult(
            ImmutableArray<Outputs.GetZPACloudConnectorGroupCloudConnectorResult> cloudConnectors,

            string creationTime,

            string description,

            bool enabled,

            string geolocationId,

            string? id,

            string modifiedTime,

            string modifiedby,

            string? name,

            string ziaCloud,

            string ziaOrgId)
        {
            CloudConnectors = cloudConnectors;
            CreationTime = creationTime;
            Description = description;
            Enabled = enabled;
            GeolocationId = geolocationId;
            Id = id;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            ZiaCloud = ziaCloud;
            ZiaOrgId = ziaOrgId;
        }
    }
}
