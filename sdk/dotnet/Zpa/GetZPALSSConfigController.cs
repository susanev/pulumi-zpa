// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    public static class GetZPALSSConfigController
    {
        /// <summary>
        /// Use the **zpa_lss_config_controller** data source to get information about a Log Streaming (LSS) configuration resource created in the Zscaler Private Access.
        /// </summary>
        public static Task<GetZPALSSConfigControllerResult> InvokeAsync(GetZPALSSConfigControllerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZPALSSConfigControllerResult>("zpa:index/getZPALSSConfigController:getZPALSSConfigController", args ?? new GetZPALSSConfigControllerArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_lss_config_controller** data source to get information about a Log Streaming (LSS) configuration resource created in the Zscaler Private Access.
        /// </summary>
        public static Output<GetZPALSSConfigControllerResult> Invoke(GetZPALSSConfigControllerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZPALSSConfigControllerResult>("zpa:index/getZPALSSConfigController:getZPALSSConfigController", args ?? new GetZPALSSConfigControllerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPALSSConfigControllerArgs : global::Pulumi.InvokeArgs
    {
        [Input("configs")]
        private List<Inputs.GetZPALSSConfigControllerConfigArgs>? _configs;

        /// <summary>
        /// (Computed)
        /// </summary>
        public List<Inputs.GetZPALSSConfigControllerConfigArgs> Configs
        {
            get => _configs ?? (_configs = new List<Inputs.GetZPALSSConfigControllerConfigArgs>());
            set => _configs = value;
        }

        /// <summary>
        /// This field defines the name of the log streaming resource.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetZPALSSConfigControllerArgs()
        {
        }
        public static new GetZPALSSConfigControllerArgs Empty => new GetZPALSSConfigControllerArgs();
    }

    public sealed class GetZPALSSConfigControllerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("configs")]
        private InputList<Inputs.GetZPALSSConfigControllerConfigInputArgs>? _configs;

        /// <summary>
        /// (Computed)
        /// </summary>
        public InputList<Inputs.GetZPALSSConfigControllerConfigInputArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.GetZPALSSConfigControllerConfigInputArgs>());
            set => _configs = value;
        }

        /// <summary>
        /// This field defines the name of the log streaming resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetZPALSSConfigControllerInvokeArgs()
        {
        }
        public static new GetZPALSSConfigControllerInvokeArgs Empty => new GetZPALSSConfigControllerInvokeArgs();
    }


    [OutputType]
    public sealed class GetZPALSSConfigControllerResult
    {
        /// <summary>
        /// (Computed)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZPALSSConfigControllerConfigResult> Configs;
        /// <summary>
        /// (Computed)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZPALSSConfigControllerConnectorGroupResult> ConnectorGroups;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.GetZPALSSConfigControllerPolicyRuleResult> PolicyRules;

        [OutputConstructor]
        private GetZPALSSConfigControllerResult(
            ImmutableArray<Outputs.GetZPALSSConfigControllerConfigResult> configs,

            ImmutableArray<Outputs.GetZPALSSConfigControllerConnectorGroupResult> connectorGroups,

            string? id,

            ImmutableArray<Outputs.GetZPALSSConfigControllerPolicyRuleResult> policyRules)
        {
            Configs = configs;
            ConnectorGroups = connectorGroups;
            Id = id;
            PolicyRules = policyRules;
        }
    }
}
