// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    public static class GetZPASCIMGroups
    {
        /// <summary>
        /// Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var engineering = Zpa.GetZPASCIMGroups.Invoke(new()
        ///     {
        ///         IdpName = "idp_name",
        ///         Name = "Engineering",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetZPASCIMGroupsResult> InvokeAsync(GetZPASCIMGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZPASCIMGroupsResult>("zpa:index/getZPASCIMGroups:getZPASCIMGroups", args ?? new GetZPASCIMGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var engineering = Zpa.GetZPASCIMGroups.Invoke(new()
        ///     {
        ///         IdpName = "idp_name",
        ///         Name = "Engineering",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetZPASCIMGroupsResult> Invoke(GetZPASCIMGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZPASCIMGroupsResult>("zpa:index/getZPASCIMGroups:getZPASCIMGroups", args ?? new GetZPASCIMGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPASCIMGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// (string) The ID of the IdP corresponding to the SAML attribute.
        /// * `idp_group_id`(string)
        /// * `modified_time` (string)
        /// </summary>
        [Input("idpId")]
        public int? IdpId { get; set; }

        /// <summary>
        /// Name. The name of the IdP where the scim group must be exported from.
        /// </summary>
        [Input("idpName")]
        public string? IdpName { get; set; }

        /// <summary>
        /// Name. The name of the scim group to be exported.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetZPASCIMGroupsArgs()
        {
        }
        public static new GetZPASCIMGroupsArgs Empty => new GetZPASCIMGroupsArgs();
    }

    public sealed class GetZPASCIMGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// (string) The ID of the IdP corresponding to the SAML attribute.
        /// * `idp_group_id`(string)
        /// * `modified_time` (string)
        /// </summary>
        [Input("idpId")]
        public Input<int>? IdpId { get; set; }

        /// <summary>
        /// Name. The name of the IdP where the scim group must be exported from.
        /// </summary>
        [Input("idpName")]
        public Input<string>? IdpName { get; set; }

        /// <summary>
        /// Name. The name of the scim group to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetZPASCIMGroupsInvokeArgs()
        {
        }
        public static new GetZPASCIMGroupsInvokeArgs Empty => new GetZPASCIMGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetZPASCIMGroupsResult
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly int CreationTime;
        public readonly string? Id;
        public readonly string IdpGroupId;
        /// <summary>
        /// (string) The ID of the IdP corresponding to the SAML attribute.
        /// * `idp_group_id`(string)
        /// * `modified_time` (string)
        /// </summary>
        public readonly int? IdpId;
        public readonly string? IdpName;
        public readonly int ModifiedTime;
        public readonly string? Name;

        [OutputConstructor]
        private GetZPASCIMGroupsResult(
            int creationTime,

            string? id,

            string idpGroupId,

            int? idpId,

            string? idpName,

            int modifiedTime,

            string? name)
        {
            CreationTime = creationTime;
            Id = id;
            IdpGroupId = idpGroupId;
            IdpId = idpId;
            IdpName = idpName;
            ModifiedTime = modifiedTime;
            Name = name;
        }
    }
}
