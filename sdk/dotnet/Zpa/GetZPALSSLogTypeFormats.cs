// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    public static class GetZPALSSLogTypeFormats
    {
        /// <summary>
        /// Use the **zpa_lss_config_log_type_formats** data source to get information about all LSS log type formats in the Zscaler Private Access cloud. This data source is required when creating an LSS Config Controller resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var zpnTransLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_trans_log",
        ///     });
        /// 
        ///     var zpnAuthLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_auth_log",
        ///     });
        /// 
        ///     var zpnAstAuthLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_ast_auth_log",
        ///     });
        /// 
        ///     var zpnHttpTransLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_http_trans_log",
        ///     });
        /// 
        ///     var zpnAuditLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_audit_log",
        ///     });
        /// 
        ///     var zpnSysAuthLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_sys_auth_log",
        ///     });
        /// 
        ///     var zpnAstComprehensiveStats = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_ast_comprehensive_stats",
        ///     });
        /// 
        ///     var zpnWafHttpExchangesLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_waf_http_exchanges_log",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetZPALSSLogTypeFormatsResult> InvokeAsync(GetZPALSSLogTypeFormatsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZPALSSLogTypeFormatsResult>("zpa:index/getZPALSSLogTypeFormats:getZPALSSLogTypeFormats", args ?? new GetZPALSSLogTypeFormatsArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_lss_config_log_type_formats** data source to get information about all LSS log type formats in the Zscaler Private Access cloud. This data source is required when creating an LSS Config Controller resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var zpnTransLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_trans_log",
        ///     });
        /// 
        ///     var zpnAuthLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_auth_log",
        ///     });
        /// 
        ///     var zpnAstAuthLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_ast_auth_log",
        ///     });
        /// 
        ///     var zpnHttpTransLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_http_trans_log",
        ///     });
        /// 
        ///     var zpnAuditLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_audit_log",
        ///     });
        /// 
        ///     var zpnSysAuthLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_sys_auth_log",
        ///     });
        /// 
        ///     var zpnAstComprehensiveStats = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_ast_comprehensive_stats",
        ///     });
        /// 
        ///     var zpnWafHttpExchangesLog = Zpa.GetZPALSSLogTypeFormats.Invoke(new()
        ///     {
        ///         LogType = "zpn_waf_http_exchanges_log",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetZPALSSLogTypeFormatsResult> Invoke(GetZPALSSLogTypeFormatsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZPALSSLogTypeFormatsResult>("zpa:index/getZPALSSLogTypeFormats:getZPALSSLogTypeFormats", args ?? new GetZPALSSLogTypeFormatsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPALSSLogTypeFormatsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of log to be exported.
        /// * `zpn_trans_log`
        /// * `zpn_auth_log`
        /// * `zpn_ast_auth_log`
        /// * `zpn_http_trans_log`
        /// * `zpn_audit_log`
        /// * `zpn_sys_auth_log`
        /// * `zpn_ast_comprehensive_stats`
        /// * `zpn_waf_http_exchanges_log`
        /// </summary>
        [Input("logType", required: true)]
        public string LogType { get; set; } = null!;

        public GetZPALSSLogTypeFormatsArgs()
        {
        }
        public static new GetZPALSSLogTypeFormatsArgs Empty => new GetZPALSSLogTypeFormatsArgs();
    }

    public sealed class GetZPALSSLogTypeFormatsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of log to be exported.
        /// * `zpn_trans_log`
        /// * `zpn_auth_log`
        /// * `zpn_ast_auth_log`
        /// * `zpn_http_trans_log`
        /// * `zpn_audit_log`
        /// * `zpn_sys_auth_log`
        /// * `zpn_ast_comprehensive_stats`
        /// * `zpn_waf_http_exchanges_log`
        /// </summary>
        [Input("logType", required: true)]
        public Input<string> LogType { get; set; } = null!;

        public GetZPALSSLogTypeFormatsInvokeArgs()
        {
        }
        public static new GetZPALSSLogTypeFormatsInvokeArgs Empty => new GetZPALSSLogTypeFormatsInvokeArgs();
    }


    [OutputType]
    public sealed class GetZPALSSLogTypeFormatsResult
    {
        public readonly string Csv;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string LogType;
        public readonly string Tsv;

        [OutputConstructor]
        private GetZPALSSLogTypeFormatsResult(
            string csv,

            string id,

            string json,

            string logType,

            string tsv)
        {
            Csv = csv;
            Id = id;
            Json = json;
            LogType = logType;
            Tsv = tsv;
        }
    }
}
