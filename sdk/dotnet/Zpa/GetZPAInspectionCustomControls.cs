// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    public static class GetZPAInspectionCustomControls
    {
        public static Task<GetZPAInspectionCustomControlsResult> InvokeAsync(GetZPAInspectionCustomControlsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZPAInspectionCustomControlsResult>("zpa:index/getZPAInspectionCustomControls:getZPAInspectionCustomControls", args ?? new GetZPAInspectionCustomControlsArgs(), options.WithDefaults());

        public static Output<GetZPAInspectionCustomControlsResult> Invoke(GetZPAInspectionCustomControlsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZPAInspectionCustomControlsResult>("zpa:index/getZPAInspectionCustomControls:getZPAInspectionCustomControls", args ?? new GetZPAInspectionCustomControlsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPAInspectionCustomControlsArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetZPAInspectionCustomControlsArgs()
        {
        }
        public static new GetZPAInspectionCustomControlsArgs Empty => new GetZPAInspectionCustomControlsArgs();
    }

    public sealed class GetZPAInspectionCustomControlsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetZPAInspectionCustomControlsInvokeArgs()
        {
        }
        public static new GetZPAInspectionCustomControlsInvokeArgs Empty => new GetZPAInspectionCustomControlsInvokeArgs();
    }


    [OutputType]
    public sealed class GetZPAInspectionCustomControlsResult
    {
        public readonly string Action;
        public readonly string ActionValue;
        public readonly string ControlNumber;
        public readonly string ControlRuleJson;
        public readonly string CreationTime;
        public readonly string DefaultAction;
        public readonly string DefaultActionValue;
        public readonly string Description;
        public readonly string Id;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string Name;
        public readonly string ParanoiaLevel;
        public readonly ImmutableArray<Outputs.GetZPAInspectionCustomControlsRuleResult> Rules;
        public readonly string Severity;
        public readonly string Type;
        public readonly string Version;

        [OutputConstructor]
        private GetZPAInspectionCustomControlsResult(
            string action,

            string actionValue,

            string controlNumber,

            string controlRuleJson,

            string creationTime,

            string defaultAction,

            string defaultActionValue,

            string description,

            string id,

            string modifiedTime,

            string modifiedby,

            string name,

            string paranoiaLevel,

            ImmutableArray<Outputs.GetZPAInspectionCustomControlsRuleResult> rules,

            string severity,

            string type,

            string version)
        {
            Action = action;
            ActionValue = actionValue;
            ControlNumber = controlNumber;
            ControlRuleJson = controlRuleJson;
            CreationTime = creationTime;
            DefaultAction = defaultAction;
            DefaultActionValue = defaultActionValue;
            Description = description;
            Id = id;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            ParanoiaLevel = paranoiaLevel;
            Rules = rules;
            Severity = severity;
            Type = type;
            Version = version;
        }
    }
}
