// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    public static class GetZPAServerGroup
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Zpa.GetZPAServerGroup.Invoke(new()
        ///     {
        ///         Name = "server_group_name",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetZPAServerGroupResult> InvokeAsync(GetZPAServerGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZPAServerGroupResult>("zpa:index/getZPAServerGroup:getZPAServerGroup", args ?? new GetZPAServerGroupArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Zpa.GetZPAServerGroup.Invoke(new()
        ///     {
        ///         Name = "server_group_name",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetZPAServerGroupResult> Invoke(GetZPAServerGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZPAServerGroupResult>("zpa:index/getZPAServerGroup:getZPAServerGroup", args ?? new GetZPAServerGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPAServerGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the server group to be exported.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the server group to be exported.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetZPAServerGroupArgs()
        {
        }
        public static new GetZPAServerGroupArgs Empty => new GetZPAServerGroupArgs();
    }

    public sealed class GetZPAServerGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the server group to be exported.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the server group to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetZPAServerGroupInvokeArgs()
        {
        }
        public static new GetZPAServerGroupInvokeArgs Empty => new GetZPAServerGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetZPAServerGroupResult
    {
        /// <summary>
        /// (string)This field is a json array of app-connector-id only.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZPAServerGroupAppConnectorGroupResult> AppConnectorGroups;
        public readonly ImmutableArray<Outputs.GetZPAServerGroupApplicationResult> Applications;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string ConfigSpace;
        public readonly string CreationTime;
        /// <summary>
        /// (string) This field is the description of the server group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (bool) This field controls dynamic discovery of the servers.
        /// </summary>
        public readonly bool DynamicDiscovery;
        /// <summary>
        /// (bool) This field defines if the server group is enabled or disabled.
        /// </summary>
        public readonly bool Enabled;
        public readonly string? Id;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool IpAnchored;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetZPAServerGroupServerResult> Servers;

        [OutputConstructor]
        private GetZPAServerGroupResult(
            ImmutableArray<Outputs.GetZPAServerGroupAppConnectorGroupResult> appConnectorGroups,

            ImmutableArray<Outputs.GetZPAServerGroupApplicationResult> applications,

            string configSpace,

            string creationTime,

            string description,

            bool dynamicDiscovery,

            bool enabled,

            string? id,

            bool ipAnchored,

            string modifiedTime,

            string modifiedby,

            string? name,

            ImmutableArray<Outputs.GetZPAServerGroupServerResult> servers)
        {
            AppConnectorGroups = appConnectorGroups;
            Applications = applications;
            ConfigSpace = configSpace;
            CreationTime = creationTime;
            Description = description;
            DynamicDiscovery = dynamicDiscovery;
            Enabled = enabled;
            Id = id;
            IpAnchored = ipAnchored;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            Servers = servers;
        }
    }
}
