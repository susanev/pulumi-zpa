// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package accesspolicy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language. [Visit](https://github.com/zscaler/zscaler-terraformer) Policy access rule can be imported by using `<POLICY ACCESS RULE ID>` as the import ID. For example
//
// ```sh
//
//	$ pulumi import zpa:AccessPolicy/policyAccessRule:PolicyAccessRule example <policy_access_rule_id>
//
// ```
type PolicyAccessRule struct {
	pulumi.CustomResourceState

	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This field defines the description of the server.
	ActionId pulumi.StringPtrOutput `pulumi:"actionId"`
	// List of app-connector IDs.
	AppConnectorGroups PolicyAccessRuleAppConnectorGroupArrayOutput `pulumi:"appConnectorGroups"`
	// List of the server group IDs.
	AppServerGroups   PolicyAccessRuleAppServerGroupArrayOutput `pulumi:"appServerGroups"`
	BypassDefaultRule pulumi.BoolPtrOutput                      `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions PolicyAccessRuleConditionArrayOutput `pulumi:"conditions"`
	// (Optional) This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrOutput `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// (Optional) This is the description of the access policy rule.
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	LssDefaultRule pulumi.BoolPtrOutput   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name pulumi.StringOutput `pulumi:"name"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    pulumi.StringOutput `pulumi:"operator"`
	PolicySetId pulumi.StringOutput `pulumi:"policySetId"`
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        pulumi.StringOutput    `pulumi:"policyType"`
	Priority          pulumi.StringOutput    `pulumi:"priority"`
	ReauthDefaultRule pulumi.BoolPtrOutput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout pulumi.StringPtrOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringPtrOutput `pulumi:"reauthTimeout"`
	// (Optional)
	RuleOrder              pulumi.StringOutput    `pulumi:"ruleOrder"`
	ZpnInspectionProfileId pulumi.StringPtrOutput `pulumi:"zpnInspectionProfileId"`
}

// NewPolicyAccessRule registers a new resource with the given unique name, arguments, and options.
func NewPolicyAccessRule(ctx *pulumi.Context,
	name string, args *PolicyAccessRuleArgs, opts ...pulumi.ResourceOption) (*PolicyAccessRule, error) {
	if args == nil {
		args = &PolicyAccessRuleArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource PolicyAccessRule
	err := ctx.RegisterResource("zpa:AccessPolicy/policyAccessRule:PolicyAccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAccessRule gets an existing PolicyAccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAccessRuleState, opts ...pulumi.ResourceOption) (*PolicyAccessRule, error) {
	var resource PolicyAccessRule
	err := ctx.ReadResource("zpa:AccessPolicy/policyAccessRule:PolicyAccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAccessRule resources.
type policyAccessRuleState struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId *string `pulumi:"actionId"`
	// List of app-connector IDs.
	AppConnectorGroups []PolicyAccessRuleAppConnectorGroup `pulumi:"appConnectorGroups"`
	// List of the server group IDs.
	AppServerGroups   []PolicyAccessRuleAppServerGroup `pulumi:"appServerGroups"`
	BypassDefaultRule *bool                            `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions []PolicyAccessRuleCondition `pulumi:"conditions"`
	// (Optional) This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// (Optional) This is the description of the access policy rule.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name *string `pulumi:"name"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    *string `pulumi:"operator"`
	PolicySetId *string `pulumi:"policySetId"`
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// (Optional)
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

type PolicyAccessRuleState struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId pulumi.StringPtrInput
	// List of app-connector IDs.
	AppConnectorGroups PolicyAccessRuleAppConnectorGroupArrayInput
	// List of the server group IDs.
	AppServerGroups   PolicyAccessRuleAppServerGroupArrayInput
	BypassDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Conditions PolicyAccessRuleConditionArrayInput
	// (Optional) This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// (Optional) This is the description of the access policy rule.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Name pulumi.StringPtrInput
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    pulumi.StringPtrInput
	PolicySetId pulumi.StringPtrInput
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// (Optional)
	RuleOrder              pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (PolicyAccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessRuleState)(nil)).Elem()
}

type policyAccessRuleArgs struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId *string `pulumi:"actionId"`
	// List of app-connector IDs.
	AppConnectorGroups []PolicyAccessRuleAppConnectorGroup `pulumi:"appConnectorGroups"`
	// List of the server group IDs.
	AppServerGroups   []PolicyAccessRuleAppServerGroup `pulumi:"appServerGroups"`
	BypassDefaultRule *bool                            `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions []PolicyAccessRuleCondition `pulumi:"conditions"`
	// (Optional) This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// (Optional) This is the description of the access policy rule.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name *string `pulumi:"name"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    *string `pulumi:"operator"`
	PolicySetId *string `pulumi:"policySetId"`
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// (Optional)
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

// The set of arguments for constructing a PolicyAccessRule resource.
type PolicyAccessRuleArgs struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId pulumi.StringPtrInput
	// List of app-connector IDs.
	AppConnectorGroups PolicyAccessRuleAppConnectorGroupArrayInput
	// List of the server group IDs.
	AppServerGroups   PolicyAccessRuleAppServerGroupArrayInput
	BypassDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Conditions PolicyAccessRuleConditionArrayInput
	// (Optional) This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// (Optional) This is the description of the access policy rule.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Name pulumi.StringPtrInput
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    pulumi.StringPtrInput
	PolicySetId pulumi.StringPtrInput
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// (Optional)
	RuleOrder              pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (PolicyAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessRuleArgs)(nil)).Elem()
}

type PolicyAccessRuleInput interface {
	pulumi.Input

	ToPolicyAccessRuleOutput() PolicyAccessRuleOutput
	ToPolicyAccessRuleOutputWithContext(ctx context.Context) PolicyAccessRuleOutput
}

func (*PolicyAccessRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessRule)(nil)).Elem()
}

func (i *PolicyAccessRule) ToPolicyAccessRuleOutput() PolicyAccessRuleOutput {
	return i.ToPolicyAccessRuleOutputWithContext(context.Background())
}

func (i *PolicyAccessRule) ToPolicyAccessRuleOutputWithContext(ctx context.Context) PolicyAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessRuleOutput)
}

// PolicyAccessRuleArrayInput is an input type that accepts PolicyAccessRuleArray and PolicyAccessRuleArrayOutput values.
// You can construct a concrete instance of `PolicyAccessRuleArrayInput` via:
//
//	PolicyAccessRuleArray{ PolicyAccessRuleArgs{...} }
type PolicyAccessRuleArrayInput interface {
	pulumi.Input

	ToPolicyAccessRuleArrayOutput() PolicyAccessRuleArrayOutput
	ToPolicyAccessRuleArrayOutputWithContext(context.Context) PolicyAccessRuleArrayOutput
}

type PolicyAccessRuleArray []PolicyAccessRuleInput

func (PolicyAccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessRule)(nil)).Elem()
}

func (i PolicyAccessRuleArray) ToPolicyAccessRuleArrayOutput() PolicyAccessRuleArrayOutput {
	return i.ToPolicyAccessRuleArrayOutputWithContext(context.Background())
}

func (i PolicyAccessRuleArray) ToPolicyAccessRuleArrayOutputWithContext(ctx context.Context) PolicyAccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessRuleArrayOutput)
}

// PolicyAccessRuleMapInput is an input type that accepts PolicyAccessRuleMap and PolicyAccessRuleMapOutput values.
// You can construct a concrete instance of `PolicyAccessRuleMapInput` via:
//
//	PolicyAccessRuleMap{ "key": PolicyAccessRuleArgs{...} }
type PolicyAccessRuleMapInput interface {
	pulumi.Input

	ToPolicyAccessRuleMapOutput() PolicyAccessRuleMapOutput
	ToPolicyAccessRuleMapOutputWithContext(context.Context) PolicyAccessRuleMapOutput
}

type PolicyAccessRuleMap map[string]PolicyAccessRuleInput

func (PolicyAccessRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessRule)(nil)).Elem()
}

func (i PolicyAccessRuleMap) ToPolicyAccessRuleMapOutput() PolicyAccessRuleMapOutput {
	return i.ToPolicyAccessRuleMapOutputWithContext(context.Background())
}

func (i PolicyAccessRuleMap) ToPolicyAccessRuleMapOutputWithContext(ctx context.Context) PolicyAccessRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessRuleMapOutput)
}

type PolicyAccessRuleOutput struct{ *pulumi.OutputState }

func (PolicyAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessRule)(nil)).Elem()
}

func (o PolicyAccessRuleOutput) ToPolicyAccessRuleOutput() PolicyAccessRuleOutput {
	return o
}

func (o PolicyAccessRuleOutput) ToPolicyAccessRuleOutputWithContext(ctx context.Context) PolicyAccessRuleOutput {
	return o
}

// (Optional) This is for providing the rule action. Supported values: “ALLOW“, “DENY“
func (o PolicyAccessRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This field defines the description of the server.
func (o PolicyAccessRuleOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.ActionId }).(pulumi.StringPtrOutput)
}

// List of app-connector IDs.
func (o PolicyAccessRuleOutput) AppConnectorGroups() PolicyAccessRuleAppConnectorGroupArrayOutput {
	return o.ApplyT(func(v *PolicyAccessRule) PolicyAccessRuleAppConnectorGroupArrayOutput { return v.AppConnectorGroups }).(PolicyAccessRuleAppConnectorGroupArrayOutput)
}

// List of the server group IDs.
func (o PolicyAccessRuleOutput) AppServerGroups() PolicyAccessRuleAppServerGroupArrayOutput {
	return o.ApplyT(func(v *PolicyAccessRule) PolicyAccessRuleAppServerGroupArrayOutput { return v.AppServerGroups }).(PolicyAccessRuleAppServerGroupArrayOutput)
}

func (o PolicyAccessRuleOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.BoolPtrOutput { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o PolicyAccessRuleOutput) Conditions() PolicyAccessRuleConditionArrayOutput {
	return o.ApplyT(func(v *PolicyAccessRule) PolicyAccessRuleConditionArrayOutput { return v.Conditions }).(PolicyAccessRuleConditionArrayOutput)
}

// (Optional) This is for providing a customer message for the user.
func (o PolicyAccessRuleOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.CustomMsg }).(pulumi.StringPtrOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional) This is the description of the access policy rule.
func (o PolicyAccessRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessRuleOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.BoolPtrOutput { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o PolicyAccessRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Optional) Supported values: “AND“, and “OR“
func (o PolicyAccessRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

func (o PolicyAccessRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

// (Optional) Supported values: “ACCESS_POLICY“ or “GLOBAL_POLICY“
func (o PolicyAccessRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o PolicyAccessRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o PolicyAccessRuleOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.BoolPtrOutput { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessRuleOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessRuleOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o PolicyAccessRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringOutput { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o PolicyAccessRuleOutput) ZpnInspectionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessRule) pulumi.StringPtrOutput { return v.ZpnInspectionProfileId }).(pulumi.StringPtrOutput)
}

type PolicyAccessRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessRule)(nil)).Elem()
}

func (o PolicyAccessRuleArrayOutput) ToPolicyAccessRuleArrayOutput() PolicyAccessRuleArrayOutput {
	return o
}

func (o PolicyAccessRuleArrayOutput) ToPolicyAccessRuleArrayOutputWithContext(ctx context.Context) PolicyAccessRuleArrayOutput {
	return o
}

func (o PolicyAccessRuleArrayOutput) Index(i pulumi.IntInput) PolicyAccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyAccessRule {
		return vs[0].([]*PolicyAccessRule)[vs[1].(int)]
	}).(PolicyAccessRuleOutput)
}

type PolicyAccessRuleMapOutput struct{ *pulumi.OutputState }

func (PolicyAccessRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessRule)(nil)).Elem()
}

func (o PolicyAccessRuleMapOutput) ToPolicyAccessRuleMapOutput() PolicyAccessRuleMapOutput {
	return o
}

func (o PolicyAccessRuleMapOutput) ToPolicyAccessRuleMapOutputWithContext(ctx context.Context) PolicyAccessRuleMapOutput {
	return o
}

func (o PolicyAccessRuleMapOutput) MapIndex(k pulumi.StringInput) PolicyAccessRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyAccessRule {
		return vs[0].(map[string]*PolicyAccessRule)[vs[1].(string)]
	}).(PolicyAccessRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessRuleInput)(nil)).Elem(), &PolicyAccessRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessRuleArrayInput)(nil)).Elem(), PolicyAccessRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessRuleMapInput)(nil)).Elem(), PolicyAccessRuleMap{})
	pulumi.RegisterOutputType(PolicyAccessRuleOutput{})
	pulumi.RegisterOutputType(PolicyAccessRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessRuleMapOutput{})
}
