// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZPAApplicationSegmentBrowserAccessClientlessApp struct {
	// If you want ZPA to forward unauthenticated HTTP preflight OPTIONS requests from the browser to the app.. Supported values: `true` and `false`
	AllowOptions *bool `pulumi:"allowOptions"`
	// Port for the BA app.
	ApplicationPort string `pulumi:"applicationPort"`
	// Protocol for the BA app. Supported values: `HTTP` and `HTTPS`
	ApplicationProtocol string `pulumi:"applicationProtocol"`
	CertificateId       string `pulumi:"certificateId"`
	// (Optional)
	Cname *string `pulumi:"cname"`
	// (Optional) Description of the application.
	Description *string `pulumi:"description"`
	// Domain name or IP address of the BA app.
	Domain *string `pulumi:"domain"`
	// (Optional) - Whether this app is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// (Optional)
	Hidden *bool   `pulumi:"hidden"`
	Id     *string `pulumi:"id"`
	// (Optional)
	LocalDomain *string `pulumi:"localDomain"`
	// Name of the application.
	Name string `pulumi:"name"`
	// (Optional)
	Path *string `pulumi:"path"`
	// (Optional)
	TrustUntrustedCert *bool `pulumi:"trustUntrustedCert"`
}

// ZPAApplicationSegmentBrowserAccessClientlessAppInput is an input type that accepts ZPAApplicationSegmentBrowserAccessClientlessAppArgs and ZPAApplicationSegmentBrowserAccessClientlessAppOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentBrowserAccessClientlessAppInput` via:
//
//	ZPAApplicationSegmentBrowserAccessClientlessAppArgs{...}
type ZPAApplicationSegmentBrowserAccessClientlessAppInput interface {
	pulumi.Input

	ToZPAApplicationSegmentBrowserAccessClientlessAppOutput() ZPAApplicationSegmentBrowserAccessClientlessAppOutput
	ToZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(context.Context) ZPAApplicationSegmentBrowserAccessClientlessAppOutput
}

type ZPAApplicationSegmentBrowserAccessClientlessAppArgs struct {
	// If you want ZPA to forward unauthenticated HTTP preflight OPTIONS requests from the browser to the app.. Supported values: `true` and `false`
	AllowOptions pulumi.BoolPtrInput `pulumi:"allowOptions"`
	// Port for the BA app.
	ApplicationPort pulumi.StringInput `pulumi:"applicationPort"`
	// Protocol for the BA app. Supported values: `HTTP` and `HTTPS`
	ApplicationProtocol pulumi.StringInput `pulumi:"applicationProtocol"`
	CertificateId       pulumi.StringInput `pulumi:"certificateId"`
	// (Optional)
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// (Optional) Description of the application.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Domain name or IP address of the BA app.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// (Optional) - Whether this app is enabled or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// (Optional)
	Hidden pulumi.BoolPtrInput   `pulumi:"hidden"`
	Id     pulumi.StringPtrInput `pulumi:"id"`
	// (Optional)
	LocalDomain pulumi.StringPtrInput `pulumi:"localDomain"`
	// Name of the application.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// (Optional)
	TrustUntrustedCert pulumi.BoolPtrInput `pulumi:"trustUntrustedCert"`
}

func (ZPAApplicationSegmentBrowserAccessClientlessAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (i ZPAApplicationSegmentBrowserAccessClientlessAppArgs) ToZPAApplicationSegmentBrowserAccessClientlessAppOutput() ZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return i.ToZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentBrowserAccessClientlessAppArgs) ToZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentBrowserAccessClientlessAppOutput)
}

// ZPAApplicationSegmentBrowserAccessClientlessAppArrayInput is an input type that accepts ZPAApplicationSegmentBrowserAccessClientlessAppArray and ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentBrowserAccessClientlessAppArrayInput` via:
//
//	ZPAApplicationSegmentBrowserAccessClientlessAppArray{ ZPAApplicationSegmentBrowserAccessClientlessAppArgs{...} }
type ZPAApplicationSegmentBrowserAccessClientlessAppArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput() ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput
	ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(context.Context) ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput
}

type ZPAApplicationSegmentBrowserAccessClientlessAppArray []ZPAApplicationSegmentBrowserAccessClientlessAppInput

func (ZPAApplicationSegmentBrowserAccessClientlessAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (i ZPAApplicationSegmentBrowserAccessClientlessAppArray) ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput() ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return i.ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentBrowserAccessClientlessAppArray) ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput)
}

type ZPAApplicationSegmentBrowserAccessClientlessAppOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentBrowserAccessClientlessAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) ToZPAApplicationSegmentBrowserAccessClientlessAppOutput() ZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) ToZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return o
}

// If you want ZPA to forward unauthenticated HTTP preflight OPTIONS requests from the browser to the app.. Supported values: `true` and `false`
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) AllowOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *bool { return v.AllowOptions }).(pulumi.BoolPtrOutput)
}

// Port for the BA app.
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) ApplicationPort() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.ApplicationPort }).(pulumi.StringOutput)
}

// Protocol for the BA app. Supported values: `HTTP` and `HTTPS`
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) ApplicationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.ApplicationProtocol }).(pulumi.StringOutput)
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.CertificateId }).(pulumi.StringOutput)
}

// (Optional)
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// (Optional) Description of the application.
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Domain name or IP address of the BA app.
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// (Optional) - Whether this app is enabled or not.
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Hidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *bool { return v.Hidden }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) LocalDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *string { return v.LocalDomain }).(pulumi.StringPtrOutput)
}

// Name of the application.
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional)
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPAApplicationSegmentBrowserAccessClientlessAppOutput) TrustUntrustedCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessClientlessApp) *bool { return v.TrustUntrustedCert }).(pulumi.BoolPtrOutput)
}

type ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput() ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) ToZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentBrowserAccessClientlessApp {
		return vs[0].([]ZPAApplicationSegmentBrowserAccessClientlessApp)[vs[1].(int)]
	}).(ZPAApplicationSegmentBrowserAccessClientlessAppOutput)
}

type ZPAApplicationSegmentBrowserAccessServerGroup struct {
	Ids []string `pulumi:"ids"`
}

// ZPAApplicationSegmentBrowserAccessServerGroupInput is an input type that accepts ZPAApplicationSegmentBrowserAccessServerGroupArgs and ZPAApplicationSegmentBrowserAccessServerGroupOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentBrowserAccessServerGroupInput` via:
//
//	ZPAApplicationSegmentBrowserAccessServerGroupArgs{...}
type ZPAApplicationSegmentBrowserAccessServerGroupInput interface {
	pulumi.Input

	ToZPAApplicationSegmentBrowserAccessServerGroupOutput() ZPAApplicationSegmentBrowserAccessServerGroupOutput
	ToZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(context.Context) ZPAApplicationSegmentBrowserAccessServerGroupOutput
}

type ZPAApplicationSegmentBrowserAccessServerGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAApplicationSegmentBrowserAccessServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentBrowserAccessServerGroupArgs) ToZPAApplicationSegmentBrowserAccessServerGroupOutput() ZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return i.ToZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentBrowserAccessServerGroupArgs) ToZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentBrowserAccessServerGroupOutput)
}

// ZPAApplicationSegmentBrowserAccessServerGroupArrayInput is an input type that accepts ZPAApplicationSegmentBrowserAccessServerGroupArray and ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentBrowserAccessServerGroupArrayInput` via:
//
//	ZPAApplicationSegmentBrowserAccessServerGroupArray{ ZPAApplicationSegmentBrowserAccessServerGroupArgs{...} }
type ZPAApplicationSegmentBrowserAccessServerGroupArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutput() ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput
	ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(context.Context) ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput
}

type ZPAApplicationSegmentBrowserAccessServerGroupArray []ZPAApplicationSegmentBrowserAccessServerGroupInput

func (ZPAApplicationSegmentBrowserAccessServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentBrowserAccessServerGroupArray) ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutput() ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return i.ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentBrowserAccessServerGroupArray) ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput)
}

type ZPAApplicationSegmentBrowserAccessServerGroupOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentBrowserAccessServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentBrowserAccessServerGroupOutput) ToZPAApplicationSegmentBrowserAccessServerGroupOutput() ZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessServerGroupOutput) ToZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutput() ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) ToZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentBrowserAccessServerGroup {
		return vs[0].([]ZPAApplicationSegmentBrowserAccessServerGroup)[vs[1].(int)]
	}).(ZPAApplicationSegmentBrowserAccessServerGroupOutput)
}

type ZPAApplicationSegmentBrowserAccessTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentBrowserAccessTcpPortRangeInput is an input type that accepts ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs and ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentBrowserAccessTcpPortRangeInput` via:
//
//	ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs{...}
type ZPAApplicationSegmentBrowserAccessTcpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutput() ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput
	ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput
}

type ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessTcpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs) ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutput() ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return i.ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs) ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput)
}

type ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessTcpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutput() ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) ToZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentBrowserAccessUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentBrowserAccessUdpPortRangeInput is an input type that accepts ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs and ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentBrowserAccessUdpPortRangeInput` via:
//
//	ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs{...}
type ZPAApplicationSegmentBrowserAccessUdpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutput() ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput
	ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput
}

type ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessUdpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs) ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutput() ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return i.ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs) ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput)
}

type ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessUdpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutput() ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) ToZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentBrowserAccessUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentInspectionCommonAppsDto struct {
	AppsConfigs []ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig `pulumi:"appsConfigs"`
}

// ZPAApplicationSegmentInspectionCommonAppsDtoInput is an input type that accepts ZPAApplicationSegmentInspectionCommonAppsDtoArgs and ZPAApplicationSegmentInspectionCommonAppsDtoOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionCommonAppsDtoInput` via:
//
//	ZPAApplicationSegmentInspectionCommonAppsDtoArgs{...}
type ZPAApplicationSegmentInspectionCommonAppsDtoInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionCommonAppsDtoOutput() ZPAApplicationSegmentInspectionCommonAppsDtoOutput
	ToZPAApplicationSegmentInspectionCommonAppsDtoOutputWithContext(context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoOutput
}

type ZPAApplicationSegmentInspectionCommonAppsDtoArgs struct {
	AppsConfigs ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayInput `pulumi:"appsConfigs"`
}

func (ZPAApplicationSegmentInspectionCommonAppsDtoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDto)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoArgs) ToZPAApplicationSegmentInspectionCommonAppsDtoOutput() ZPAApplicationSegmentInspectionCommonAppsDtoOutput {
	return i.ToZPAApplicationSegmentInspectionCommonAppsDtoOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoArgs) ToZPAApplicationSegmentInspectionCommonAppsDtoOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionCommonAppsDtoOutput)
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoArgs) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput() ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return i.ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoArgs) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionCommonAppsDtoOutput).ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(ctx)
}

// ZPAApplicationSegmentInspectionCommonAppsDtoPtrInput is an input type that accepts ZPAApplicationSegmentInspectionCommonAppsDtoArgs, ZPAApplicationSegmentInspectionCommonAppsDtoPtr and ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionCommonAppsDtoPtrInput` via:
//
//	        ZPAApplicationSegmentInspectionCommonAppsDtoArgs{...}
//
//	or:
//
//	        nil
type ZPAApplicationSegmentInspectionCommonAppsDtoPtrInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput() ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput
	ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput
}

type zpaapplicationSegmentInspectionCommonAppsDtoPtrType ZPAApplicationSegmentInspectionCommonAppsDtoArgs

func ZPAApplicationSegmentInspectionCommonAppsDtoPtr(v *ZPAApplicationSegmentInspectionCommonAppsDtoArgs) ZPAApplicationSegmentInspectionCommonAppsDtoPtrInput {
	return (*zpaapplicationSegmentInspectionCommonAppsDtoPtrType)(v)
}

func (*zpaapplicationSegmentInspectionCommonAppsDtoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAApplicationSegmentInspectionCommonAppsDto)(nil)).Elem()
}

func (i *zpaapplicationSegmentInspectionCommonAppsDtoPtrType) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput() ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return i.ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(context.Background())
}

func (i *zpaapplicationSegmentInspectionCommonAppsDtoPtrType) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput)
}

type ZPAApplicationSegmentInspectionCommonAppsDtoOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionCommonAppsDtoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDto)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoOutput() ZPAApplicationSegmentInspectionCommonAppsDtoOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput() ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return o.ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(context.Background())
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZPAApplicationSegmentInspectionCommonAppsDto) *ZPAApplicationSegmentInspectionCommonAppsDto {
		return &v
	}).(ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoOutput) AppsConfigs() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDto) []ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig {
		return v.AppsConfigs
	}).(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput)
}

type ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAApplicationSegmentInspectionCommonAppsDto)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput() ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput) Elem() ZPAApplicationSegmentInspectionCommonAppsDtoOutput {
	return o.ApplyT(func(v *ZPAApplicationSegmentInspectionCommonAppsDto) ZPAApplicationSegmentInspectionCommonAppsDto {
		if v != nil {
			return *v
		}
		var ret ZPAApplicationSegmentInspectionCommonAppsDto
		return ret
	}).(ZPAApplicationSegmentInspectionCommonAppsDtoOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput) AppsConfigs() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput {
	return o.ApplyT(func(v *ZPAApplicationSegmentInspectionCommonAppsDto) []ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig {
		if v == nil {
			return nil
		}
		return v.AppsConfigs
	}).(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput)
}

type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig struct {
	AllowOptions *bool   `pulumi:"allowOptions"`
	AppId        *string `pulumi:"appId"`
	// Indicates the type of application as inspection. Supported value: `INSPECT`
	AppTypes []string `pulumi:"appTypes"`
	// Port for the Inspection Application Segment.
	ApplicationPort *string `pulumi:"applicationPort"`
	// Protocol for the Inspection Application Segment.. Supported values: `HTTP` and `HTTPS`
	ApplicationProtocol *string `pulumi:"applicationProtocol"`
	// ID of the signing certificate. This field is required if the applicationProtocol is set to `HTTPS`. The certificateId is not supported if the applicationProtocol is set to `HTTP`.
	CertificateId   *string `pulumi:"certificateId"`
	CertificateName *string `pulumi:"certificateName"`
	Cname           *string `pulumi:"cname"`
	// (Optional) Description of the application.
	Description *string `pulumi:"description"`
	// Domain name of the Inspection Application Segment.
	Domain *string `pulumi:"domain"`
	// Whether this application is enabled or not
	Enabled     *bool   `pulumi:"enabled"`
	Hidden      *bool   `pulumi:"hidden"`
	Id          *string `pulumi:"id"`
	LocalDomain *string `pulumi:"localDomain"`
	// Name of the Inspection Application Segment.
	Name               *string `pulumi:"name"`
	Portal             *bool   `pulumi:"portal"`
	TrustUntrustedCert *bool   `pulumi:"trustUntrustedCert"`
}

// ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigInput is an input type that accepts ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs and ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigInput` via:
//
//	ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs{...}
type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput
	ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutputWithContext(context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput
}

type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs struct {
	AllowOptions pulumi.BoolPtrInput   `pulumi:"allowOptions"`
	AppId        pulumi.StringPtrInput `pulumi:"appId"`
	// Indicates the type of application as inspection. Supported value: `INSPECT`
	AppTypes pulumi.StringArrayInput `pulumi:"appTypes"`
	// Port for the Inspection Application Segment.
	ApplicationPort pulumi.StringPtrInput `pulumi:"applicationPort"`
	// Protocol for the Inspection Application Segment.. Supported values: `HTTP` and `HTTPS`
	ApplicationProtocol pulumi.StringPtrInput `pulumi:"applicationProtocol"`
	// ID of the signing certificate. This field is required if the applicationProtocol is set to `HTTPS`. The certificateId is not supported if the applicationProtocol is set to `HTTP`.
	CertificateId   pulumi.StringPtrInput `pulumi:"certificateId"`
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	Cname           pulumi.StringPtrInput `pulumi:"cname"`
	// (Optional) Description of the application.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Domain name of the Inspection Application Segment.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Whether this application is enabled or not
	Enabled     pulumi.BoolPtrInput   `pulumi:"enabled"`
	Hidden      pulumi.BoolPtrInput   `pulumi:"hidden"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	LocalDomain pulumi.StringPtrInput `pulumi:"localDomain"`
	// Name of the Inspection Application Segment.
	Name               pulumi.StringPtrInput `pulumi:"name"`
	Portal             pulumi.BoolPtrInput   `pulumi:"portal"`
	TrustUntrustedCert pulumi.BoolPtrInput   `pulumi:"trustUntrustedCert"`
}

func (ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput {
	return i.ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput)
}

// ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayInput is an input type that accepts ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray and ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayInput` via:
//
//	ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray{ ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs{...} }
type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput
	ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutputWithContext(context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput
}

type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray []ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigInput

func (ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput {
	return i.ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput)
}

type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) AllowOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *bool { return v.AllowOptions }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Indicates the type of application as inspection. Supported value: `INSPECT`
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) AppTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) []string { return v.AppTypes }).(pulumi.StringArrayOutput)
}

// Port for the Inspection Application Segment.
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) ApplicationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.ApplicationPort }).(pulumi.StringPtrOutput)
}

// Protocol for the Inspection Application Segment.. Supported values: `HTTP` and `HTTPS`
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) ApplicationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.ApplicationProtocol }).(pulumi.StringPtrOutput)
}

// ID of the signing certificate. This field is required if the applicationProtocol is set to `HTTPS`. The certificateId is not supported if the applicationProtocol is set to `HTTP`.
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// (Optional) Description of the application.
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Domain name of the Inspection Application Segment.
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Whether this application is enabled or not
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Hidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *bool { return v.Hidden }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) LocalDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.LocalDomain }).(pulumi.StringPtrOutput)
}

// Name of the Inspection Application Segment.
func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) Portal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *bool { return v.Portal }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput) TrustUntrustedCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig) *bool { return v.TrustUntrustedCert }).(pulumi.BoolPtrOutput)
}

type ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput() ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput) ToZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig {
		return vs[0].([]ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfig)[vs[1].(int)]
	}).(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput)
}

type ZPAApplicationSegmentInspectionServerGroup struct {
	Ids []string `pulumi:"ids"`
}

// ZPAApplicationSegmentInspectionServerGroupInput is an input type that accepts ZPAApplicationSegmentInspectionServerGroupArgs and ZPAApplicationSegmentInspectionServerGroupOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionServerGroupInput` via:
//
//	ZPAApplicationSegmentInspectionServerGroupArgs{...}
type ZPAApplicationSegmentInspectionServerGroupInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionServerGroupOutput() ZPAApplicationSegmentInspectionServerGroupOutput
	ToZPAApplicationSegmentInspectionServerGroupOutputWithContext(context.Context) ZPAApplicationSegmentInspectionServerGroupOutput
}

type ZPAApplicationSegmentInspectionServerGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAApplicationSegmentInspectionServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionServerGroupArgs) ToZPAApplicationSegmentInspectionServerGroupOutput() ZPAApplicationSegmentInspectionServerGroupOutput {
	return i.ToZPAApplicationSegmentInspectionServerGroupOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionServerGroupArgs) ToZPAApplicationSegmentInspectionServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionServerGroupOutput)
}

// ZPAApplicationSegmentInspectionServerGroupArrayInput is an input type that accepts ZPAApplicationSegmentInspectionServerGroupArray and ZPAApplicationSegmentInspectionServerGroupArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionServerGroupArrayInput` via:
//
//	ZPAApplicationSegmentInspectionServerGroupArray{ ZPAApplicationSegmentInspectionServerGroupArgs{...} }
type ZPAApplicationSegmentInspectionServerGroupArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionServerGroupArrayOutput() ZPAApplicationSegmentInspectionServerGroupArrayOutput
	ToZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(context.Context) ZPAApplicationSegmentInspectionServerGroupArrayOutput
}

type ZPAApplicationSegmentInspectionServerGroupArray []ZPAApplicationSegmentInspectionServerGroupInput

func (ZPAApplicationSegmentInspectionServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionServerGroupArray) ToZPAApplicationSegmentInspectionServerGroupArrayOutput() ZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return i.ToZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionServerGroupArray) ToZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionServerGroupArrayOutput)
}

type ZPAApplicationSegmentInspectionServerGroupOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionServerGroupOutput) ToZPAApplicationSegmentInspectionServerGroupOutput() ZPAApplicationSegmentInspectionServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionServerGroupOutput) ToZPAApplicationSegmentInspectionServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAApplicationSegmentInspectionServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionServerGroupArrayOutput) ToZPAApplicationSegmentInspectionServerGroupArrayOutput() ZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionServerGroupArrayOutput) ToZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionServerGroupArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentInspectionServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentInspectionServerGroup {
		return vs[0].([]ZPAApplicationSegmentInspectionServerGroup)[vs[1].(int)]
	}).(ZPAApplicationSegmentInspectionServerGroupOutput)
}

type ZPAApplicationSegmentInspectionTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentInspectionTcpPortRangeInput is an input type that accepts ZPAApplicationSegmentInspectionTcpPortRangeArgs and ZPAApplicationSegmentInspectionTcpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionTcpPortRangeInput` via:
//
//	ZPAApplicationSegmentInspectionTcpPortRangeArgs{...}
type ZPAApplicationSegmentInspectionTcpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionTcpPortRangeOutput() ZPAApplicationSegmentInspectionTcpPortRangeOutput
	ToZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentInspectionTcpPortRangeOutput
}

type ZPAApplicationSegmentInspectionTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentInspectionTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionTcpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionTcpPortRangeArgs) ToZPAApplicationSegmentInspectionTcpPortRangeOutput() ZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return i.ToZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionTcpPortRangeArgs) ToZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionTcpPortRangeOutput)
}

type ZPAApplicationSegmentInspectionTcpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionTcpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionTcpPortRangeOutput) ToZPAApplicationSegmentInspectionTcpPortRangeOutput() ZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionTcpPortRangeOutput) ToZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentInspectionTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentInspectionUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentInspectionUdpPortRangeInput is an input type that accepts ZPAApplicationSegmentInspectionUdpPortRangeArgs and ZPAApplicationSegmentInspectionUdpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentInspectionUdpPortRangeInput` via:
//
//	ZPAApplicationSegmentInspectionUdpPortRangeArgs{...}
type ZPAApplicationSegmentInspectionUdpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentInspectionUdpPortRangeOutput() ZPAApplicationSegmentInspectionUdpPortRangeOutput
	ToZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentInspectionUdpPortRangeOutput
}

type ZPAApplicationSegmentInspectionUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentInspectionUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionUdpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentInspectionUdpPortRangeArgs) ToZPAApplicationSegmentInspectionUdpPortRangeOutput() ZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return i.ToZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentInspectionUdpPortRangeArgs) ToZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentInspectionUdpPortRangeOutput)
}

type ZPAApplicationSegmentInspectionUdpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentInspectionUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentInspectionUdpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentInspectionUdpPortRangeOutput) ToZPAApplicationSegmentInspectionUdpPortRangeOutput() ZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionUdpPortRangeOutput) ToZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentInspectionUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentInspectionUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentInspectionUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentPRACommonAppsDto struct {
	AppsConfigs []ZPAApplicationSegmentPRACommonAppsDtoAppsConfig `pulumi:"appsConfigs"`
}

// ZPAApplicationSegmentPRACommonAppsDtoInput is an input type that accepts ZPAApplicationSegmentPRACommonAppsDtoArgs and ZPAApplicationSegmentPRACommonAppsDtoOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRACommonAppsDtoInput` via:
//
//	ZPAApplicationSegmentPRACommonAppsDtoArgs{...}
type ZPAApplicationSegmentPRACommonAppsDtoInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRACommonAppsDtoOutput() ZPAApplicationSegmentPRACommonAppsDtoOutput
	ToZPAApplicationSegmentPRACommonAppsDtoOutputWithContext(context.Context) ZPAApplicationSegmentPRACommonAppsDtoOutput
}

type ZPAApplicationSegmentPRACommonAppsDtoArgs struct {
	AppsConfigs ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayInput `pulumi:"appsConfigs"`
}

func (ZPAApplicationSegmentPRACommonAppsDtoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDto)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRACommonAppsDtoArgs) ToZPAApplicationSegmentPRACommonAppsDtoOutput() ZPAApplicationSegmentPRACommonAppsDtoOutput {
	return i.ToZPAApplicationSegmentPRACommonAppsDtoOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRACommonAppsDtoArgs) ToZPAApplicationSegmentPRACommonAppsDtoOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRACommonAppsDtoOutput)
}

func (i ZPAApplicationSegmentPRACommonAppsDtoArgs) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutput() ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return i.ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRACommonAppsDtoArgs) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRACommonAppsDtoOutput).ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(ctx)
}

// ZPAApplicationSegmentPRACommonAppsDtoPtrInput is an input type that accepts ZPAApplicationSegmentPRACommonAppsDtoArgs, ZPAApplicationSegmentPRACommonAppsDtoPtr and ZPAApplicationSegmentPRACommonAppsDtoPtrOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRACommonAppsDtoPtrInput` via:
//
//	        ZPAApplicationSegmentPRACommonAppsDtoArgs{...}
//
//	or:
//
//	        nil
type ZPAApplicationSegmentPRACommonAppsDtoPtrInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRACommonAppsDtoPtrOutput() ZPAApplicationSegmentPRACommonAppsDtoPtrOutput
	ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(context.Context) ZPAApplicationSegmentPRACommonAppsDtoPtrOutput
}

type zpaapplicationSegmentPRACommonAppsDtoPtrType ZPAApplicationSegmentPRACommonAppsDtoArgs

func ZPAApplicationSegmentPRACommonAppsDtoPtr(v *ZPAApplicationSegmentPRACommonAppsDtoArgs) ZPAApplicationSegmentPRACommonAppsDtoPtrInput {
	return (*zpaapplicationSegmentPRACommonAppsDtoPtrType)(v)
}

func (*zpaapplicationSegmentPRACommonAppsDtoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAApplicationSegmentPRACommonAppsDto)(nil)).Elem()
}

func (i *zpaapplicationSegmentPRACommonAppsDtoPtrType) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutput() ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return i.ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(context.Background())
}

func (i *zpaapplicationSegmentPRACommonAppsDtoPtrType) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRACommonAppsDtoPtrOutput)
}

type ZPAApplicationSegmentPRACommonAppsDtoOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRACommonAppsDtoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDto)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRACommonAppsDtoOutput) ToZPAApplicationSegmentPRACommonAppsDtoOutput() ZPAApplicationSegmentPRACommonAppsDtoOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoOutput) ToZPAApplicationSegmentPRACommonAppsDtoOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoOutput) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutput() ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return o.ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(context.Background())
}

func (o ZPAApplicationSegmentPRACommonAppsDtoOutput) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZPAApplicationSegmentPRACommonAppsDto) *ZPAApplicationSegmentPRACommonAppsDto {
		return &v
	}).(ZPAApplicationSegmentPRACommonAppsDtoPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoOutput) AppsConfigs() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDto) []ZPAApplicationSegmentPRACommonAppsDtoAppsConfig {
		return v.AppsConfigs
	}).(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput)
}

type ZPAApplicationSegmentPRACommonAppsDtoPtrOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRACommonAppsDtoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAApplicationSegmentPRACommonAppsDto)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRACommonAppsDtoPtrOutput) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutput() ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoPtrOutput) ToZPAApplicationSegmentPRACommonAppsDtoPtrOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoPtrOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoPtrOutput) Elem() ZPAApplicationSegmentPRACommonAppsDtoOutput {
	return o.ApplyT(func(v *ZPAApplicationSegmentPRACommonAppsDto) ZPAApplicationSegmentPRACommonAppsDto {
		if v != nil {
			return *v
		}
		var ret ZPAApplicationSegmentPRACommonAppsDto
		return ret
	}).(ZPAApplicationSegmentPRACommonAppsDtoOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoPtrOutput) AppsConfigs() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput {
	return o.ApplyT(func(v *ZPAApplicationSegmentPRACommonAppsDto) []ZPAApplicationSegmentPRACommonAppsDtoAppsConfig {
		if v == nil {
			return nil
		}
		return v.AppsConfigs
	}).(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput)
}

type ZPAApplicationSegmentPRACommonAppsDtoAppsConfig struct {
	AllowOptions *bool   `pulumi:"allowOptions"`
	AppId        *string `pulumi:"appId"`
	// Indicates the type of application as Privileged Remote Access. Supported value: `SECURE_REMOTE_ACCESS`
	AppTypes []string `pulumi:"appTypes"`
	// Port for the Privileged Remote Access
	ApplicationPort *string `pulumi:"applicationPort"`
	// Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
	ApplicationProtocol *string `pulumi:"applicationProtocol"`
	Cname               *string `pulumi:"cname"`
	// Parameter required when `applicationProtocol` is of type `RDP`
	ConnectionSecurity *string `pulumi:"connectionSecurity"`
	// (Optional) Description of the application.
	Description *string `pulumi:"description"`
	// Domain name of the Privileged Remote Access
	Domain *string `pulumi:"domain"`
	// Whether this application is enabled or not
	Enabled     *bool   `pulumi:"enabled"`
	Hidden      *bool   `pulumi:"hidden"`
	Id          *string `pulumi:"id"`
	LocalDomain *string `pulumi:"localDomain"`
	// Name of the Privileged Remote Access
	Name   *string `pulumi:"name"`
	Portal *bool   `pulumi:"portal"`
}

// ZPAApplicationSegmentPRACommonAppsDtoAppsConfigInput is an input type that accepts ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs and ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRACommonAppsDtoAppsConfigInput` via:
//
//	ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs{...}
type ZPAApplicationSegmentPRACommonAppsDtoAppsConfigInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput
	ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutputWithContext(context.Context) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput
}

type ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs struct {
	AllowOptions pulumi.BoolPtrInput   `pulumi:"allowOptions"`
	AppId        pulumi.StringPtrInput `pulumi:"appId"`
	// Indicates the type of application as Privileged Remote Access. Supported value: `SECURE_REMOTE_ACCESS`
	AppTypes pulumi.StringArrayInput `pulumi:"appTypes"`
	// Port for the Privileged Remote Access
	ApplicationPort pulumi.StringPtrInput `pulumi:"applicationPort"`
	// Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
	ApplicationProtocol pulumi.StringPtrInput `pulumi:"applicationProtocol"`
	Cname               pulumi.StringPtrInput `pulumi:"cname"`
	// Parameter required when `applicationProtocol` is of type `RDP`
	ConnectionSecurity pulumi.StringPtrInput `pulumi:"connectionSecurity"`
	// (Optional) Description of the application.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Domain name of the Privileged Remote Access
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Whether this application is enabled or not
	Enabled     pulumi.BoolPtrInput   `pulumi:"enabled"`
	Hidden      pulumi.BoolPtrInput   `pulumi:"hidden"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	LocalDomain pulumi.StringPtrInput `pulumi:"localDomain"`
	// Name of the Privileged Remote Access
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Portal pulumi.BoolPtrInput   `pulumi:"portal"`
}

func (ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDtoAppsConfig)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput {
	return i.ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput)
}

// ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayInput is an input type that accepts ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray and ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayInput` via:
//
//	ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray{ ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs{...} }
type ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput
	ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutputWithContext(context.Context) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput
}

type ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray []ZPAApplicationSegmentPRACommonAppsDtoAppsConfigInput

func (ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentPRACommonAppsDtoAppsConfig)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput {
	return i.ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput)
}

type ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDtoAppsConfig)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) AllowOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *bool { return v.AllowOptions }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Indicates the type of application as Privileged Remote Access. Supported value: `SECURE_REMOTE_ACCESS`
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) AppTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) []string { return v.AppTypes }).(pulumi.StringArrayOutput)
}

// Port for the Privileged Remote Access
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) ApplicationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.ApplicationPort }).(pulumi.StringPtrOutput)
}

// Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) ApplicationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.ApplicationProtocol }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Parameter required when `applicationProtocol` is of type `RDP`
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) ConnectionSecurity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.ConnectionSecurity }).(pulumi.StringPtrOutput)
}

// (Optional) Description of the application.
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Domain name of the Privileged Remote Access
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Whether this application is enabled or not
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Hidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *bool { return v.Hidden }).(pulumi.BoolPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) LocalDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.LocalDomain }).(pulumi.StringPtrOutput)
}

// Name of the Privileged Remote Access
func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput) Portal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRACommonAppsDtoAppsConfig) *bool { return v.Portal }).(pulumi.BoolPtrOutput)
}

type ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentPRACommonAppsDtoAppsConfig)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput() ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput) ToZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput {
	return o
}

func (o ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentPRACommonAppsDtoAppsConfig {
		return vs[0].([]ZPAApplicationSegmentPRACommonAppsDtoAppsConfig)[vs[1].(int)]
	}).(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput)
}

type ZPAApplicationSegmentPRAServerGroup struct {
	Ids []string `pulumi:"ids"`
}

// ZPAApplicationSegmentPRAServerGroupInput is an input type that accepts ZPAApplicationSegmentPRAServerGroupArgs and ZPAApplicationSegmentPRAServerGroupOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRAServerGroupInput` via:
//
//	ZPAApplicationSegmentPRAServerGroupArgs{...}
type ZPAApplicationSegmentPRAServerGroupInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRAServerGroupOutput() ZPAApplicationSegmentPRAServerGroupOutput
	ToZPAApplicationSegmentPRAServerGroupOutputWithContext(context.Context) ZPAApplicationSegmentPRAServerGroupOutput
}

type ZPAApplicationSegmentPRAServerGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAApplicationSegmentPRAServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRAServerGroupArgs) ToZPAApplicationSegmentPRAServerGroupOutput() ZPAApplicationSegmentPRAServerGroupOutput {
	return i.ToZPAApplicationSegmentPRAServerGroupOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRAServerGroupArgs) ToZPAApplicationSegmentPRAServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRAServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRAServerGroupOutput)
}

// ZPAApplicationSegmentPRAServerGroupArrayInput is an input type that accepts ZPAApplicationSegmentPRAServerGroupArray and ZPAApplicationSegmentPRAServerGroupArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRAServerGroupArrayInput` via:
//
//	ZPAApplicationSegmentPRAServerGroupArray{ ZPAApplicationSegmentPRAServerGroupArgs{...} }
type ZPAApplicationSegmentPRAServerGroupArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRAServerGroupArrayOutput() ZPAApplicationSegmentPRAServerGroupArrayOutput
	ToZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(context.Context) ZPAApplicationSegmentPRAServerGroupArrayOutput
}

type ZPAApplicationSegmentPRAServerGroupArray []ZPAApplicationSegmentPRAServerGroupInput

func (ZPAApplicationSegmentPRAServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRAServerGroupArray) ToZPAApplicationSegmentPRAServerGroupArrayOutput() ZPAApplicationSegmentPRAServerGroupArrayOutput {
	return i.ToZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRAServerGroupArray) ToZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRAServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRAServerGroupArrayOutput)
}

type ZPAApplicationSegmentPRAServerGroupOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRAServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRAServerGroupOutput) ToZPAApplicationSegmentPRAServerGroupOutput() ZPAApplicationSegmentPRAServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentPRAServerGroupOutput) ToZPAApplicationSegmentPRAServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRAServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentPRAServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRAServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAApplicationSegmentPRAServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRAServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRAServerGroupArrayOutput) ToZPAApplicationSegmentPRAServerGroupArrayOutput() ZPAApplicationSegmentPRAServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentPRAServerGroupArrayOutput) ToZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRAServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentPRAServerGroupArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentPRAServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentPRAServerGroup {
		return vs[0].([]ZPAApplicationSegmentPRAServerGroup)[vs[1].(int)]
	}).(ZPAApplicationSegmentPRAServerGroupOutput)
}

type ZPAApplicationSegmentPRATcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentPRATcpPortRangeInput is an input type that accepts ZPAApplicationSegmentPRATcpPortRangeArgs and ZPAApplicationSegmentPRATcpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRATcpPortRangeInput` via:
//
//	ZPAApplicationSegmentPRATcpPortRangeArgs{...}
type ZPAApplicationSegmentPRATcpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRATcpPortRangeOutput() ZPAApplicationSegmentPRATcpPortRangeOutput
	ToZPAApplicationSegmentPRATcpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentPRATcpPortRangeOutput
}

type ZPAApplicationSegmentPRATcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentPRATcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRATcpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRATcpPortRangeArgs) ToZPAApplicationSegmentPRATcpPortRangeOutput() ZPAApplicationSegmentPRATcpPortRangeOutput {
	return i.ToZPAApplicationSegmentPRATcpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRATcpPortRangeArgs) ToZPAApplicationSegmentPRATcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRATcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRATcpPortRangeOutput)
}

type ZPAApplicationSegmentPRATcpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRATcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRATcpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRATcpPortRangeOutput) ToZPAApplicationSegmentPRATcpPortRangeOutput() ZPAApplicationSegmentPRATcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentPRATcpPortRangeOutput) ToZPAApplicationSegmentPRATcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRATcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentPRATcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRATcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentPRATcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRATcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentPRAUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentPRAUdpPortRangeInput is an input type that accepts ZPAApplicationSegmentPRAUdpPortRangeArgs and ZPAApplicationSegmentPRAUdpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentPRAUdpPortRangeInput` via:
//
//	ZPAApplicationSegmentPRAUdpPortRangeArgs{...}
type ZPAApplicationSegmentPRAUdpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentPRAUdpPortRangeOutput() ZPAApplicationSegmentPRAUdpPortRangeOutput
	ToZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentPRAUdpPortRangeOutput
}

type ZPAApplicationSegmentPRAUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentPRAUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRAUdpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentPRAUdpPortRangeArgs) ToZPAApplicationSegmentPRAUdpPortRangeOutput() ZPAApplicationSegmentPRAUdpPortRangeOutput {
	return i.ToZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentPRAUdpPortRangeArgs) ToZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRAUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentPRAUdpPortRangeOutput)
}

type ZPAApplicationSegmentPRAUdpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentPRAUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentPRAUdpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentPRAUdpPortRangeOutput) ToZPAApplicationSegmentPRAUdpPortRangeOutput() ZPAApplicationSegmentPRAUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentPRAUdpPortRangeOutput) ToZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentPRAUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentPRAUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRAUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentPRAUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentPRAUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentServerGroup struct {
	Ids []string `pulumi:"ids"`
}

// ZPAApplicationSegmentServerGroupInput is an input type that accepts ZPAApplicationSegmentServerGroupArgs and ZPAApplicationSegmentServerGroupOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentServerGroupInput` via:
//
//	ZPAApplicationSegmentServerGroupArgs{...}
type ZPAApplicationSegmentServerGroupInput interface {
	pulumi.Input

	ToZPAApplicationSegmentServerGroupOutput() ZPAApplicationSegmentServerGroupOutput
	ToZPAApplicationSegmentServerGroupOutputWithContext(context.Context) ZPAApplicationSegmentServerGroupOutput
}

type ZPAApplicationSegmentServerGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAApplicationSegmentServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentServerGroupArgs) ToZPAApplicationSegmentServerGroupOutput() ZPAApplicationSegmentServerGroupOutput {
	return i.ToZPAApplicationSegmentServerGroupOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentServerGroupArgs) ToZPAApplicationSegmentServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentServerGroupOutput)
}

// ZPAApplicationSegmentServerGroupArrayInput is an input type that accepts ZPAApplicationSegmentServerGroupArray and ZPAApplicationSegmentServerGroupArrayOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentServerGroupArrayInput` via:
//
//	ZPAApplicationSegmentServerGroupArray{ ZPAApplicationSegmentServerGroupArgs{...} }
type ZPAApplicationSegmentServerGroupArrayInput interface {
	pulumi.Input

	ToZPAApplicationSegmentServerGroupArrayOutput() ZPAApplicationSegmentServerGroupArrayOutput
	ToZPAApplicationSegmentServerGroupArrayOutputWithContext(context.Context) ZPAApplicationSegmentServerGroupArrayOutput
}

type ZPAApplicationSegmentServerGroupArray []ZPAApplicationSegmentServerGroupInput

func (ZPAApplicationSegmentServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (i ZPAApplicationSegmentServerGroupArray) ToZPAApplicationSegmentServerGroupArrayOutput() ZPAApplicationSegmentServerGroupArrayOutput {
	return i.ToZPAApplicationSegmentServerGroupArrayOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentServerGroupArray) ToZPAApplicationSegmentServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentServerGroupArrayOutput)
}

type ZPAApplicationSegmentServerGroupOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentServerGroupOutput) ToZPAApplicationSegmentServerGroupOutput() ZPAApplicationSegmentServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentServerGroupOutput) ToZPAApplicationSegmentServerGroupOutputWithContext(ctx context.Context) ZPAApplicationSegmentServerGroupOutput {
	return o
}

func (o ZPAApplicationSegmentServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAApplicationSegmentServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (o ZPAApplicationSegmentServerGroupArrayOutput) ToZPAApplicationSegmentServerGroupArrayOutput() ZPAApplicationSegmentServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentServerGroupArrayOutput) ToZPAApplicationSegmentServerGroupArrayOutputWithContext(ctx context.Context) ZPAApplicationSegmentServerGroupArrayOutput {
	return o
}

func (o ZPAApplicationSegmentServerGroupArrayOutput) Index(i pulumi.IntInput) ZPAApplicationSegmentServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAApplicationSegmentServerGroup {
		return vs[0].([]ZPAApplicationSegmentServerGroup)[vs[1].(int)]
	}).(ZPAApplicationSegmentServerGroupOutput)
}

type ZPAApplicationSegmentTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentTcpPortRangeInput is an input type that accepts ZPAApplicationSegmentTcpPortRangeArgs and ZPAApplicationSegmentTcpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentTcpPortRangeInput` via:
//
//	ZPAApplicationSegmentTcpPortRangeArgs{...}
type ZPAApplicationSegmentTcpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentTcpPortRangeOutput() ZPAApplicationSegmentTcpPortRangeOutput
	ToZPAApplicationSegmentTcpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentTcpPortRangeOutput
}

type ZPAApplicationSegmentTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentTcpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentTcpPortRangeArgs) ToZPAApplicationSegmentTcpPortRangeOutput() ZPAApplicationSegmentTcpPortRangeOutput {
	return i.ToZPAApplicationSegmentTcpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentTcpPortRangeArgs) ToZPAApplicationSegmentTcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentTcpPortRangeOutput)
}

type ZPAApplicationSegmentTcpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentTcpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentTcpPortRangeOutput) ToZPAApplicationSegmentTcpPortRangeOutput() ZPAApplicationSegmentTcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentTcpPortRangeOutput) ToZPAApplicationSegmentTcpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentTcpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAApplicationSegmentUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPAApplicationSegmentUdpPortRangeInput is an input type that accepts ZPAApplicationSegmentUdpPortRangeArgs and ZPAApplicationSegmentUdpPortRangeOutput values.
// You can construct a concrete instance of `ZPAApplicationSegmentUdpPortRangeInput` via:
//
//	ZPAApplicationSegmentUdpPortRangeArgs{...}
type ZPAApplicationSegmentUdpPortRangeInput interface {
	pulumi.Input

	ToZPAApplicationSegmentUdpPortRangeOutput() ZPAApplicationSegmentUdpPortRangeOutput
	ToZPAApplicationSegmentUdpPortRangeOutputWithContext(context.Context) ZPAApplicationSegmentUdpPortRangeOutput
}

type ZPAApplicationSegmentUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPAApplicationSegmentUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentUdpPortRange)(nil)).Elem()
}

func (i ZPAApplicationSegmentUdpPortRangeArgs) ToZPAApplicationSegmentUdpPortRangeOutput() ZPAApplicationSegmentUdpPortRangeOutput {
	return i.ToZPAApplicationSegmentUdpPortRangeOutputWithContext(context.Background())
}

func (i ZPAApplicationSegmentUdpPortRangeArgs) ToZPAApplicationSegmentUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAApplicationSegmentUdpPortRangeOutput)
}

type ZPAApplicationSegmentUdpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPAApplicationSegmentUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAApplicationSegmentUdpPortRange)(nil)).Elem()
}

func (o ZPAApplicationSegmentUdpPortRangeOutput) ToZPAApplicationSegmentUdpPortRangeOutput() ZPAApplicationSegmentUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentUdpPortRangeOutput) ToZPAApplicationSegmentUdpPortRangeOutputWithContext(ctx context.Context) ZPAApplicationSegmentUdpPortRangeOutput {
	return o
}

func (o ZPAApplicationSegmentUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPAApplicationSegmentUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAApplicationSegmentUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPABrowserAccessClientlessApp struct {
	AllowOptions        *bool   `pulumi:"allowOptions"`
	ApplicationPort     string  `pulumi:"applicationPort"`
	ApplicationProtocol string  `pulumi:"applicationProtocol"`
	CertificateId       string  `pulumi:"certificateId"`
	Cname               *string `pulumi:"cname"`
	Description         *string `pulumi:"description"`
	Domain              *string `pulumi:"domain"`
	Enabled             *bool   `pulumi:"enabled"`
	Hidden              *bool   `pulumi:"hidden"`
	Id                  *string `pulumi:"id"`
	LocalDomain         *string `pulumi:"localDomain"`
	Name                string  `pulumi:"name"`
	Path                *string `pulumi:"path"`
	TrustUntrustedCert  *bool   `pulumi:"trustUntrustedCert"`
}

// ZPABrowserAccessClientlessAppInput is an input type that accepts ZPABrowserAccessClientlessAppArgs and ZPABrowserAccessClientlessAppOutput values.
// You can construct a concrete instance of `ZPABrowserAccessClientlessAppInput` via:
//
//	ZPABrowserAccessClientlessAppArgs{...}
type ZPABrowserAccessClientlessAppInput interface {
	pulumi.Input

	ToZPABrowserAccessClientlessAppOutput() ZPABrowserAccessClientlessAppOutput
	ToZPABrowserAccessClientlessAppOutputWithContext(context.Context) ZPABrowserAccessClientlessAppOutput
}

type ZPABrowserAccessClientlessAppArgs struct {
	AllowOptions        pulumi.BoolPtrInput   `pulumi:"allowOptions"`
	ApplicationPort     pulumi.StringInput    `pulumi:"applicationPort"`
	ApplicationProtocol pulumi.StringInput    `pulumi:"applicationProtocol"`
	CertificateId       pulumi.StringInput    `pulumi:"certificateId"`
	Cname               pulumi.StringPtrInput `pulumi:"cname"`
	Description         pulumi.StringPtrInput `pulumi:"description"`
	Domain              pulumi.StringPtrInput `pulumi:"domain"`
	Enabled             pulumi.BoolPtrInput   `pulumi:"enabled"`
	Hidden              pulumi.BoolPtrInput   `pulumi:"hidden"`
	Id                  pulumi.StringPtrInput `pulumi:"id"`
	LocalDomain         pulumi.StringPtrInput `pulumi:"localDomain"`
	Name                pulumi.StringInput    `pulumi:"name"`
	Path                pulumi.StringPtrInput `pulumi:"path"`
	TrustUntrustedCert  pulumi.BoolPtrInput   `pulumi:"trustUntrustedCert"`
}

func (ZPABrowserAccessClientlessAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessClientlessApp)(nil)).Elem()
}

func (i ZPABrowserAccessClientlessAppArgs) ToZPABrowserAccessClientlessAppOutput() ZPABrowserAccessClientlessAppOutput {
	return i.ToZPABrowserAccessClientlessAppOutputWithContext(context.Background())
}

func (i ZPABrowserAccessClientlessAppArgs) ToZPABrowserAccessClientlessAppOutputWithContext(ctx context.Context) ZPABrowserAccessClientlessAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPABrowserAccessClientlessAppOutput)
}

// ZPABrowserAccessClientlessAppArrayInput is an input type that accepts ZPABrowserAccessClientlessAppArray and ZPABrowserAccessClientlessAppArrayOutput values.
// You can construct a concrete instance of `ZPABrowserAccessClientlessAppArrayInput` via:
//
//	ZPABrowserAccessClientlessAppArray{ ZPABrowserAccessClientlessAppArgs{...} }
type ZPABrowserAccessClientlessAppArrayInput interface {
	pulumi.Input

	ToZPABrowserAccessClientlessAppArrayOutput() ZPABrowserAccessClientlessAppArrayOutput
	ToZPABrowserAccessClientlessAppArrayOutputWithContext(context.Context) ZPABrowserAccessClientlessAppArrayOutput
}

type ZPABrowserAccessClientlessAppArray []ZPABrowserAccessClientlessAppInput

func (ZPABrowserAccessClientlessAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPABrowserAccessClientlessApp)(nil)).Elem()
}

func (i ZPABrowserAccessClientlessAppArray) ToZPABrowserAccessClientlessAppArrayOutput() ZPABrowserAccessClientlessAppArrayOutput {
	return i.ToZPABrowserAccessClientlessAppArrayOutputWithContext(context.Background())
}

func (i ZPABrowserAccessClientlessAppArray) ToZPABrowserAccessClientlessAppArrayOutputWithContext(ctx context.Context) ZPABrowserAccessClientlessAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPABrowserAccessClientlessAppArrayOutput)
}

type ZPABrowserAccessClientlessAppOutput struct{ *pulumi.OutputState }

func (ZPABrowserAccessClientlessAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessClientlessApp)(nil)).Elem()
}

func (o ZPABrowserAccessClientlessAppOutput) ToZPABrowserAccessClientlessAppOutput() ZPABrowserAccessClientlessAppOutput {
	return o
}

func (o ZPABrowserAccessClientlessAppOutput) ToZPABrowserAccessClientlessAppOutputWithContext(ctx context.Context) ZPABrowserAccessClientlessAppOutput {
	return o
}

func (o ZPABrowserAccessClientlessAppOutput) AllowOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *bool { return v.AllowOptions }).(pulumi.BoolPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) ApplicationPort() pulumi.StringOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) string { return v.ApplicationPort }).(pulumi.StringOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) ApplicationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) string { return v.ApplicationProtocol }).(pulumi.StringOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Hidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *bool { return v.Hidden }).(pulumi.BoolPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) LocalDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *string { return v.LocalDomain }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) string { return v.Name }).(pulumi.StringOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessClientlessAppOutput) TrustUntrustedCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessClientlessApp) *bool { return v.TrustUntrustedCert }).(pulumi.BoolPtrOutput)
}

type ZPABrowserAccessClientlessAppArrayOutput struct{ *pulumi.OutputState }

func (ZPABrowserAccessClientlessAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPABrowserAccessClientlessApp)(nil)).Elem()
}

func (o ZPABrowserAccessClientlessAppArrayOutput) ToZPABrowserAccessClientlessAppArrayOutput() ZPABrowserAccessClientlessAppArrayOutput {
	return o
}

func (o ZPABrowserAccessClientlessAppArrayOutput) ToZPABrowserAccessClientlessAppArrayOutputWithContext(ctx context.Context) ZPABrowserAccessClientlessAppArrayOutput {
	return o
}

func (o ZPABrowserAccessClientlessAppArrayOutput) Index(i pulumi.IntInput) ZPABrowserAccessClientlessAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPABrowserAccessClientlessApp {
		return vs[0].([]ZPABrowserAccessClientlessApp)[vs[1].(int)]
	}).(ZPABrowserAccessClientlessAppOutput)
}

type ZPABrowserAccessServerGroup struct {
	Ids []string `pulumi:"ids"`
}

// ZPABrowserAccessServerGroupInput is an input type that accepts ZPABrowserAccessServerGroupArgs and ZPABrowserAccessServerGroupOutput values.
// You can construct a concrete instance of `ZPABrowserAccessServerGroupInput` via:
//
//	ZPABrowserAccessServerGroupArgs{...}
type ZPABrowserAccessServerGroupInput interface {
	pulumi.Input

	ToZPABrowserAccessServerGroupOutput() ZPABrowserAccessServerGroupOutput
	ToZPABrowserAccessServerGroupOutputWithContext(context.Context) ZPABrowserAccessServerGroupOutput
}

type ZPABrowserAccessServerGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPABrowserAccessServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessServerGroup)(nil)).Elem()
}

func (i ZPABrowserAccessServerGroupArgs) ToZPABrowserAccessServerGroupOutput() ZPABrowserAccessServerGroupOutput {
	return i.ToZPABrowserAccessServerGroupOutputWithContext(context.Background())
}

func (i ZPABrowserAccessServerGroupArgs) ToZPABrowserAccessServerGroupOutputWithContext(ctx context.Context) ZPABrowserAccessServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPABrowserAccessServerGroupOutput)
}

// ZPABrowserAccessServerGroupArrayInput is an input type that accepts ZPABrowserAccessServerGroupArray and ZPABrowserAccessServerGroupArrayOutput values.
// You can construct a concrete instance of `ZPABrowserAccessServerGroupArrayInput` via:
//
//	ZPABrowserAccessServerGroupArray{ ZPABrowserAccessServerGroupArgs{...} }
type ZPABrowserAccessServerGroupArrayInput interface {
	pulumi.Input

	ToZPABrowserAccessServerGroupArrayOutput() ZPABrowserAccessServerGroupArrayOutput
	ToZPABrowserAccessServerGroupArrayOutputWithContext(context.Context) ZPABrowserAccessServerGroupArrayOutput
}

type ZPABrowserAccessServerGroupArray []ZPABrowserAccessServerGroupInput

func (ZPABrowserAccessServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPABrowserAccessServerGroup)(nil)).Elem()
}

func (i ZPABrowserAccessServerGroupArray) ToZPABrowserAccessServerGroupArrayOutput() ZPABrowserAccessServerGroupArrayOutput {
	return i.ToZPABrowserAccessServerGroupArrayOutputWithContext(context.Background())
}

func (i ZPABrowserAccessServerGroupArray) ToZPABrowserAccessServerGroupArrayOutputWithContext(ctx context.Context) ZPABrowserAccessServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPABrowserAccessServerGroupArrayOutput)
}

type ZPABrowserAccessServerGroupOutput struct{ *pulumi.OutputState }

func (ZPABrowserAccessServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessServerGroup)(nil)).Elem()
}

func (o ZPABrowserAccessServerGroupOutput) ToZPABrowserAccessServerGroupOutput() ZPABrowserAccessServerGroupOutput {
	return o
}

func (o ZPABrowserAccessServerGroupOutput) ToZPABrowserAccessServerGroupOutputWithContext(ctx context.Context) ZPABrowserAccessServerGroupOutput {
	return o
}

func (o ZPABrowserAccessServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPABrowserAccessServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPABrowserAccessServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPABrowserAccessServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPABrowserAccessServerGroup)(nil)).Elem()
}

func (o ZPABrowserAccessServerGroupArrayOutput) ToZPABrowserAccessServerGroupArrayOutput() ZPABrowserAccessServerGroupArrayOutput {
	return o
}

func (o ZPABrowserAccessServerGroupArrayOutput) ToZPABrowserAccessServerGroupArrayOutputWithContext(ctx context.Context) ZPABrowserAccessServerGroupArrayOutput {
	return o
}

func (o ZPABrowserAccessServerGroupArrayOutput) Index(i pulumi.IntInput) ZPABrowserAccessServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPABrowserAccessServerGroup {
		return vs[0].([]ZPABrowserAccessServerGroup)[vs[1].(int)]
	}).(ZPABrowserAccessServerGroupOutput)
}

type ZPABrowserAccessTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPABrowserAccessTcpPortRangeInput is an input type that accepts ZPABrowserAccessTcpPortRangeArgs and ZPABrowserAccessTcpPortRangeOutput values.
// You can construct a concrete instance of `ZPABrowserAccessTcpPortRangeInput` via:
//
//	ZPABrowserAccessTcpPortRangeArgs{...}
type ZPABrowserAccessTcpPortRangeInput interface {
	pulumi.Input

	ToZPABrowserAccessTcpPortRangeOutput() ZPABrowserAccessTcpPortRangeOutput
	ToZPABrowserAccessTcpPortRangeOutputWithContext(context.Context) ZPABrowserAccessTcpPortRangeOutput
}

type ZPABrowserAccessTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPABrowserAccessTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessTcpPortRange)(nil)).Elem()
}

func (i ZPABrowserAccessTcpPortRangeArgs) ToZPABrowserAccessTcpPortRangeOutput() ZPABrowserAccessTcpPortRangeOutput {
	return i.ToZPABrowserAccessTcpPortRangeOutputWithContext(context.Background())
}

func (i ZPABrowserAccessTcpPortRangeArgs) ToZPABrowserAccessTcpPortRangeOutputWithContext(ctx context.Context) ZPABrowserAccessTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPABrowserAccessTcpPortRangeOutput)
}

type ZPABrowserAccessTcpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPABrowserAccessTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessTcpPortRange)(nil)).Elem()
}

func (o ZPABrowserAccessTcpPortRangeOutput) ToZPABrowserAccessTcpPortRangeOutput() ZPABrowserAccessTcpPortRangeOutput {
	return o
}

func (o ZPABrowserAccessTcpPortRangeOutput) ToZPABrowserAccessTcpPortRangeOutputWithContext(ctx context.Context) ZPABrowserAccessTcpPortRangeOutput {
	return o
}

func (o ZPABrowserAccessTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPABrowserAccessUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// ZPABrowserAccessUdpPortRangeInput is an input type that accepts ZPABrowserAccessUdpPortRangeArgs and ZPABrowserAccessUdpPortRangeOutput values.
// You can construct a concrete instance of `ZPABrowserAccessUdpPortRangeInput` via:
//
//	ZPABrowserAccessUdpPortRangeArgs{...}
type ZPABrowserAccessUdpPortRangeInput interface {
	pulumi.Input

	ToZPABrowserAccessUdpPortRangeOutput() ZPABrowserAccessUdpPortRangeOutput
	ToZPABrowserAccessUdpPortRangeOutputWithContext(context.Context) ZPABrowserAccessUdpPortRangeOutput
}

type ZPABrowserAccessUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (ZPABrowserAccessUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessUdpPortRange)(nil)).Elem()
}

func (i ZPABrowserAccessUdpPortRangeArgs) ToZPABrowserAccessUdpPortRangeOutput() ZPABrowserAccessUdpPortRangeOutput {
	return i.ToZPABrowserAccessUdpPortRangeOutputWithContext(context.Background())
}

func (i ZPABrowserAccessUdpPortRangeArgs) ToZPABrowserAccessUdpPortRangeOutputWithContext(ctx context.Context) ZPABrowserAccessUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPABrowserAccessUdpPortRangeOutput)
}

type ZPABrowserAccessUdpPortRangeOutput struct{ *pulumi.OutputState }

func (ZPABrowserAccessUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPABrowserAccessUdpPortRange)(nil)).Elem()
}

func (o ZPABrowserAccessUdpPortRangeOutput) ToZPABrowserAccessUdpPortRangeOutput() ZPABrowserAccessUdpPortRangeOutput {
	return o
}

func (o ZPABrowserAccessUdpPortRangeOutput) ToZPABrowserAccessUdpPortRangeOutputWithContext(ctx context.Context) ZPABrowserAccessUdpPortRangeOutput {
	return o
}

func (o ZPABrowserAccessUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ZPABrowserAccessUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPABrowserAccessUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type ZPAInspectionCustomControlsAssociatedInspectionProfileName struct {
	Ids []string `pulumi:"ids"`
}

// ZPAInspectionCustomControlsAssociatedInspectionProfileNameInput is an input type that accepts ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs and ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput values.
// You can construct a concrete instance of `ZPAInspectionCustomControlsAssociatedInspectionProfileNameInput` via:
//
//	ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs{...}
type ZPAInspectionCustomControlsAssociatedInspectionProfileNameInput interface {
	pulumi.Input

	ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput() ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput
	ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutputWithContext(context.Context) ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput
}

type ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionCustomControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (i ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput() ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput {
	return i.ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutputWithContext(context.Background())
}

func (i ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput)
}

// ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayInput is an input type that accepts ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray and ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput values.
// You can construct a concrete instance of `ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayInput` via:
//
//	ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray{ ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs{...} }
type ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayInput interface {
	pulumi.Input

	ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput() ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput
	ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutputWithContext(context.Context) ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput
}

type ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray []ZPAInspectionCustomControlsAssociatedInspectionProfileNameInput

func (ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionCustomControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (i ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput() ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput {
	return i.ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutputWithContext(context.Background())
}

func (i ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput)
}

type ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput struct{ *pulumi.OutputState }

func (ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionCustomControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (o ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput() ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput {
	return o
}

func (o ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput {
	return o
}

func (o ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsAssociatedInspectionProfileName) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput struct{ *pulumi.OutputState }

func (ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionCustomControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (o ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput() ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput) ToZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput) Index(i pulumi.IntInput) ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAInspectionCustomControlsAssociatedInspectionProfileName {
		return vs[0].([]ZPAInspectionCustomControlsAssociatedInspectionProfileName)[vs[1].(int)]
	}).(ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput)
}

type ZPAInspectionCustomControlsRule struct {
	Conditions *ZPAInspectionCustomControlsRuleConditions `pulumi:"conditions"`
	Names      []string                                   `pulumi:"names"`
	Type       *string                                    `pulumi:"type"`
}

// ZPAInspectionCustomControlsRuleInput is an input type that accepts ZPAInspectionCustomControlsRuleArgs and ZPAInspectionCustomControlsRuleOutput values.
// You can construct a concrete instance of `ZPAInspectionCustomControlsRuleInput` via:
//
//	ZPAInspectionCustomControlsRuleArgs{...}
type ZPAInspectionCustomControlsRuleInput interface {
	pulumi.Input

	ToZPAInspectionCustomControlsRuleOutput() ZPAInspectionCustomControlsRuleOutput
	ToZPAInspectionCustomControlsRuleOutputWithContext(context.Context) ZPAInspectionCustomControlsRuleOutput
}

type ZPAInspectionCustomControlsRuleArgs struct {
	Conditions ZPAInspectionCustomControlsRuleConditionsPtrInput `pulumi:"conditions"`
	Names      pulumi.StringArrayInput                           `pulumi:"names"`
	Type       pulumi.StringPtrInput                             `pulumi:"type"`
}

func (ZPAInspectionCustomControlsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (i ZPAInspectionCustomControlsRuleArgs) ToZPAInspectionCustomControlsRuleOutput() ZPAInspectionCustomControlsRuleOutput {
	return i.ToZPAInspectionCustomControlsRuleOutputWithContext(context.Background())
}

func (i ZPAInspectionCustomControlsRuleArgs) ToZPAInspectionCustomControlsRuleOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsRuleOutput)
}

// ZPAInspectionCustomControlsRuleArrayInput is an input type that accepts ZPAInspectionCustomControlsRuleArray and ZPAInspectionCustomControlsRuleArrayOutput values.
// You can construct a concrete instance of `ZPAInspectionCustomControlsRuleArrayInput` via:
//
//	ZPAInspectionCustomControlsRuleArray{ ZPAInspectionCustomControlsRuleArgs{...} }
type ZPAInspectionCustomControlsRuleArrayInput interface {
	pulumi.Input

	ToZPAInspectionCustomControlsRuleArrayOutput() ZPAInspectionCustomControlsRuleArrayOutput
	ToZPAInspectionCustomControlsRuleArrayOutputWithContext(context.Context) ZPAInspectionCustomControlsRuleArrayOutput
}

type ZPAInspectionCustomControlsRuleArray []ZPAInspectionCustomControlsRuleInput

func (ZPAInspectionCustomControlsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (i ZPAInspectionCustomControlsRuleArray) ToZPAInspectionCustomControlsRuleArrayOutput() ZPAInspectionCustomControlsRuleArrayOutput {
	return i.ToZPAInspectionCustomControlsRuleArrayOutputWithContext(context.Background())
}

func (i ZPAInspectionCustomControlsRuleArray) ToZPAInspectionCustomControlsRuleArrayOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsRuleArrayOutput)
}

type ZPAInspectionCustomControlsRuleOutput struct{ *pulumi.OutputState }

func (ZPAInspectionCustomControlsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (o ZPAInspectionCustomControlsRuleOutput) ToZPAInspectionCustomControlsRuleOutput() ZPAInspectionCustomControlsRuleOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleOutput) ToZPAInspectionCustomControlsRuleOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleOutput) Conditions() ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsRule) *ZPAInspectionCustomControlsRuleConditions {
		return v.Conditions
	}).(ZPAInspectionCustomControlsRuleConditionsPtrOutput)
}

func (o ZPAInspectionCustomControlsRuleOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsRule) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o ZPAInspectionCustomControlsRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ZPAInspectionCustomControlsRuleArrayOutput struct{ *pulumi.OutputState }

func (ZPAInspectionCustomControlsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (o ZPAInspectionCustomControlsRuleArrayOutput) ToZPAInspectionCustomControlsRuleArrayOutput() ZPAInspectionCustomControlsRuleArrayOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleArrayOutput) ToZPAInspectionCustomControlsRuleArrayOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleArrayOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleArrayOutput) Index(i pulumi.IntInput) ZPAInspectionCustomControlsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAInspectionCustomControlsRule {
		return vs[0].([]ZPAInspectionCustomControlsRule)[vs[1].(int)]
	}).(ZPAInspectionCustomControlsRuleOutput)
}

type ZPAInspectionCustomControlsRuleConditions struct {
	Lhs *string `pulumi:"lhs"`
	Op  *string `pulumi:"op"`
	Rhs *string `pulumi:"rhs"`
}

// ZPAInspectionCustomControlsRuleConditionsInput is an input type that accepts ZPAInspectionCustomControlsRuleConditionsArgs and ZPAInspectionCustomControlsRuleConditionsOutput values.
// You can construct a concrete instance of `ZPAInspectionCustomControlsRuleConditionsInput` via:
//
//	ZPAInspectionCustomControlsRuleConditionsArgs{...}
type ZPAInspectionCustomControlsRuleConditionsInput interface {
	pulumi.Input

	ToZPAInspectionCustomControlsRuleConditionsOutput() ZPAInspectionCustomControlsRuleConditionsOutput
	ToZPAInspectionCustomControlsRuleConditionsOutputWithContext(context.Context) ZPAInspectionCustomControlsRuleConditionsOutput
}

type ZPAInspectionCustomControlsRuleConditionsArgs struct {
	Lhs pulumi.StringPtrInput `pulumi:"lhs"`
	Op  pulumi.StringPtrInput `pulumi:"op"`
	Rhs pulumi.StringPtrInput `pulumi:"rhs"`
}

func (ZPAInspectionCustomControlsRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionCustomControlsRuleConditions)(nil)).Elem()
}

func (i ZPAInspectionCustomControlsRuleConditionsArgs) ToZPAInspectionCustomControlsRuleConditionsOutput() ZPAInspectionCustomControlsRuleConditionsOutput {
	return i.ToZPAInspectionCustomControlsRuleConditionsOutputWithContext(context.Background())
}

func (i ZPAInspectionCustomControlsRuleConditionsArgs) ToZPAInspectionCustomControlsRuleConditionsOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsRuleConditionsOutput)
}

func (i ZPAInspectionCustomControlsRuleConditionsArgs) ToZPAInspectionCustomControlsRuleConditionsPtrOutput() ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return i.ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(context.Background())
}

func (i ZPAInspectionCustomControlsRuleConditionsArgs) ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsRuleConditionsOutput).ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(ctx)
}

// ZPAInspectionCustomControlsRuleConditionsPtrInput is an input type that accepts ZPAInspectionCustomControlsRuleConditionsArgs, ZPAInspectionCustomControlsRuleConditionsPtr and ZPAInspectionCustomControlsRuleConditionsPtrOutput values.
// You can construct a concrete instance of `ZPAInspectionCustomControlsRuleConditionsPtrInput` via:
//
//	        ZPAInspectionCustomControlsRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type ZPAInspectionCustomControlsRuleConditionsPtrInput interface {
	pulumi.Input

	ToZPAInspectionCustomControlsRuleConditionsPtrOutput() ZPAInspectionCustomControlsRuleConditionsPtrOutput
	ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(context.Context) ZPAInspectionCustomControlsRuleConditionsPtrOutput
}

type zpainspectionCustomControlsRuleConditionsPtrType ZPAInspectionCustomControlsRuleConditionsArgs

func ZPAInspectionCustomControlsRuleConditionsPtr(v *ZPAInspectionCustomControlsRuleConditionsArgs) ZPAInspectionCustomControlsRuleConditionsPtrInput {
	return (*zpainspectionCustomControlsRuleConditionsPtrType)(v)
}

func (*zpainspectionCustomControlsRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAInspectionCustomControlsRuleConditions)(nil)).Elem()
}

func (i *zpainspectionCustomControlsRuleConditionsPtrType) ToZPAInspectionCustomControlsRuleConditionsPtrOutput() ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return i.ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *zpainspectionCustomControlsRuleConditionsPtrType) ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionCustomControlsRuleConditionsPtrOutput)
}

type ZPAInspectionCustomControlsRuleConditionsOutput struct{ *pulumi.OutputState }

func (ZPAInspectionCustomControlsRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionCustomControlsRuleConditions)(nil)).Elem()
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) ToZPAInspectionCustomControlsRuleConditionsOutput() ZPAInspectionCustomControlsRuleConditionsOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) ToZPAInspectionCustomControlsRuleConditionsOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleConditionsOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) ToZPAInspectionCustomControlsRuleConditionsPtrOutput() ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return o.ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(context.Background())
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZPAInspectionCustomControlsRuleConditions) *ZPAInspectionCustomControlsRuleConditions {
		return &v
	}).(ZPAInspectionCustomControlsRuleConditionsPtrOutput)
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) Lhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsRuleConditions) *string { return v.Lhs }).(pulumi.StringPtrOutput)
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsRuleConditions) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o ZPAInspectionCustomControlsRuleConditionsOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionCustomControlsRuleConditions) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

type ZPAInspectionCustomControlsRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (ZPAInspectionCustomControlsRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAInspectionCustomControlsRuleConditions)(nil)).Elem()
}

func (o ZPAInspectionCustomControlsRuleConditionsPtrOutput) ToZPAInspectionCustomControlsRuleConditionsPtrOutput() ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleConditionsPtrOutput) ToZPAInspectionCustomControlsRuleConditionsPtrOutputWithContext(ctx context.Context) ZPAInspectionCustomControlsRuleConditionsPtrOutput {
	return o
}

func (o ZPAInspectionCustomControlsRuleConditionsPtrOutput) Elem() ZPAInspectionCustomControlsRuleConditionsOutput {
	return o.ApplyT(func(v *ZPAInspectionCustomControlsRuleConditions) ZPAInspectionCustomControlsRuleConditions {
		if v != nil {
			return *v
		}
		var ret ZPAInspectionCustomControlsRuleConditions
		return ret
	}).(ZPAInspectionCustomControlsRuleConditionsOutput)
}

func (o ZPAInspectionCustomControlsRuleConditionsPtrOutput) Lhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAInspectionCustomControlsRuleConditions) *string {
		if v == nil {
			return nil
		}
		return v.Lhs
	}).(pulumi.StringPtrOutput)
}

func (o ZPAInspectionCustomControlsRuleConditionsPtrOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAInspectionCustomControlsRuleConditions) *string {
		if v == nil {
			return nil
		}
		return v.Op
	}).(pulumi.StringPtrOutput)
}

func (o ZPAInspectionCustomControlsRuleConditionsPtrOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAInspectionCustomControlsRuleConditions) *string {
		if v == nil {
			return nil
		}
		return v.Rhs
	}).(pulumi.StringPtrOutput)
}

type ZPAInspectionProfileControlsInfo struct {
	// (Optional) Control types. Supported Values: `CUSTOM`, `PREDEFINED`, `ZSCALER`
	ControlType *string `pulumi:"controlType"`
	// (Optional) Control information counts `Long`
	Count *string `pulumi:"count"`
}

// ZPAInspectionProfileControlsInfoInput is an input type that accepts ZPAInspectionProfileControlsInfoArgs and ZPAInspectionProfileControlsInfoOutput values.
// You can construct a concrete instance of `ZPAInspectionProfileControlsInfoInput` via:
//
//	ZPAInspectionProfileControlsInfoArgs{...}
type ZPAInspectionProfileControlsInfoInput interface {
	pulumi.Input

	ToZPAInspectionProfileControlsInfoOutput() ZPAInspectionProfileControlsInfoOutput
	ToZPAInspectionProfileControlsInfoOutputWithContext(context.Context) ZPAInspectionProfileControlsInfoOutput
}

type ZPAInspectionProfileControlsInfoArgs struct {
	// (Optional) Control types. Supported Values: `CUSTOM`, `PREDEFINED`, `ZSCALER`
	ControlType pulumi.StringPtrInput `pulumi:"controlType"`
	// (Optional) Control information counts `Long`
	Count pulumi.StringPtrInput `pulumi:"count"`
}

func (ZPAInspectionProfileControlsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (i ZPAInspectionProfileControlsInfoArgs) ToZPAInspectionProfileControlsInfoOutput() ZPAInspectionProfileControlsInfoOutput {
	return i.ToZPAInspectionProfileControlsInfoOutputWithContext(context.Background())
}

func (i ZPAInspectionProfileControlsInfoArgs) ToZPAInspectionProfileControlsInfoOutputWithContext(ctx context.Context) ZPAInspectionProfileControlsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionProfileControlsInfoOutput)
}

// ZPAInspectionProfileControlsInfoArrayInput is an input type that accepts ZPAInspectionProfileControlsInfoArray and ZPAInspectionProfileControlsInfoArrayOutput values.
// You can construct a concrete instance of `ZPAInspectionProfileControlsInfoArrayInput` via:
//
//	ZPAInspectionProfileControlsInfoArray{ ZPAInspectionProfileControlsInfoArgs{...} }
type ZPAInspectionProfileControlsInfoArrayInput interface {
	pulumi.Input

	ToZPAInspectionProfileControlsInfoArrayOutput() ZPAInspectionProfileControlsInfoArrayOutput
	ToZPAInspectionProfileControlsInfoArrayOutputWithContext(context.Context) ZPAInspectionProfileControlsInfoArrayOutput
}

type ZPAInspectionProfileControlsInfoArray []ZPAInspectionProfileControlsInfoInput

func (ZPAInspectionProfileControlsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (i ZPAInspectionProfileControlsInfoArray) ToZPAInspectionProfileControlsInfoArrayOutput() ZPAInspectionProfileControlsInfoArrayOutput {
	return i.ToZPAInspectionProfileControlsInfoArrayOutputWithContext(context.Background())
}

func (i ZPAInspectionProfileControlsInfoArray) ToZPAInspectionProfileControlsInfoArrayOutputWithContext(ctx context.Context) ZPAInspectionProfileControlsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionProfileControlsInfoArrayOutput)
}

type ZPAInspectionProfileControlsInfoOutput struct{ *pulumi.OutputState }

func (ZPAInspectionProfileControlsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (o ZPAInspectionProfileControlsInfoOutput) ToZPAInspectionProfileControlsInfoOutput() ZPAInspectionProfileControlsInfoOutput {
	return o
}

func (o ZPAInspectionProfileControlsInfoOutput) ToZPAInspectionProfileControlsInfoOutputWithContext(ctx context.Context) ZPAInspectionProfileControlsInfoOutput {
	return o
}

// (Optional) Control types. Supported Values: `CUSTOM`, `PREDEFINED`, `ZSCALER`
func (o ZPAInspectionProfileControlsInfoOutput) ControlType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionProfileControlsInfo) *string { return v.ControlType }).(pulumi.StringPtrOutput)
}

// (Optional) Control information counts `Long`
func (o ZPAInspectionProfileControlsInfoOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionProfileControlsInfo) *string { return v.Count }).(pulumi.StringPtrOutput)
}

type ZPAInspectionProfileControlsInfoArrayOutput struct{ *pulumi.OutputState }

func (ZPAInspectionProfileControlsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (o ZPAInspectionProfileControlsInfoArrayOutput) ToZPAInspectionProfileControlsInfoArrayOutput() ZPAInspectionProfileControlsInfoArrayOutput {
	return o
}

func (o ZPAInspectionProfileControlsInfoArrayOutput) ToZPAInspectionProfileControlsInfoArrayOutputWithContext(ctx context.Context) ZPAInspectionProfileControlsInfoArrayOutput {
	return o
}

func (o ZPAInspectionProfileControlsInfoArrayOutput) Index(i pulumi.IntInput) ZPAInspectionProfileControlsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAInspectionProfileControlsInfo {
		return vs[0].([]ZPAInspectionProfileControlsInfo)[vs[1].(int)]
	}).(ZPAInspectionProfileControlsInfoOutput)
}

type ZPAInspectionProfileCustomControl struct {
	// The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action string `pulumi:"action"`
	// Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue *string `pulumi:"actionValue"`
	// ID of the predefined control
	Id string `pulumi:"id"`
}

// ZPAInspectionProfileCustomControlInput is an input type that accepts ZPAInspectionProfileCustomControlArgs and ZPAInspectionProfileCustomControlOutput values.
// You can construct a concrete instance of `ZPAInspectionProfileCustomControlInput` via:
//
//	ZPAInspectionProfileCustomControlArgs{...}
type ZPAInspectionProfileCustomControlInput interface {
	pulumi.Input

	ToZPAInspectionProfileCustomControlOutput() ZPAInspectionProfileCustomControlOutput
	ToZPAInspectionProfileCustomControlOutputWithContext(context.Context) ZPAInspectionProfileCustomControlOutput
}

type ZPAInspectionProfileCustomControlArgs struct {
	// The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action pulumi.StringInput `pulumi:"action"`
	// Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue pulumi.StringPtrInput `pulumi:"actionValue"`
	// ID of the predefined control
	Id pulumi.StringInput `pulumi:"id"`
}

func (ZPAInspectionProfileCustomControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (i ZPAInspectionProfileCustomControlArgs) ToZPAInspectionProfileCustomControlOutput() ZPAInspectionProfileCustomControlOutput {
	return i.ToZPAInspectionProfileCustomControlOutputWithContext(context.Background())
}

func (i ZPAInspectionProfileCustomControlArgs) ToZPAInspectionProfileCustomControlOutputWithContext(ctx context.Context) ZPAInspectionProfileCustomControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionProfileCustomControlOutput)
}

// ZPAInspectionProfileCustomControlArrayInput is an input type that accepts ZPAInspectionProfileCustomControlArray and ZPAInspectionProfileCustomControlArrayOutput values.
// You can construct a concrete instance of `ZPAInspectionProfileCustomControlArrayInput` via:
//
//	ZPAInspectionProfileCustomControlArray{ ZPAInspectionProfileCustomControlArgs{...} }
type ZPAInspectionProfileCustomControlArrayInput interface {
	pulumi.Input

	ToZPAInspectionProfileCustomControlArrayOutput() ZPAInspectionProfileCustomControlArrayOutput
	ToZPAInspectionProfileCustomControlArrayOutputWithContext(context.Context) ZPAInspectionProfileCustomControlArrayOutput
}

type ZPAInspectionProfileCustomControlArray []ZPAInspectionProfileCustomControlInput

func (ZPAInspectionProfileCustomControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (i ZPAInspectionProfileCustomControlArray) ToZPAInspectionProfileCustomControlArrayOutput() ZPAInspectionProfileCustomControlArrayOutput {
	return i.ToZPAInspectionProfileCustomControlArrayOutputWithContext(context.Background())
}

func (i ZPAInspectionProfileCustomControlArray) ToZPAInspectionProfileCustomControlArrayOutputWithContext(ctx context.Context) ZPAInspectionProfileCustomControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionProfileCustomControlArrayOutput)
}

type ZPAInspectionProfileCustomControlOutput struct{ *pulumi.OutputState }

func (ZPAInspectionProfileCustomControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (o ZPAInspectionProfileCustomControlOutput) ToZPAInspectionProfileCustomControlOutput() ZPAInspectionProfileCustomControlOutput {
	return o
}

func (o ZPAInspectionProfileCustomControlOutput) ToZPAInspectionProfileCustomControlOutputWithContext(ctx context.Context) ZPAInspectionProfileCustomControlOutput {
	return o
}

// The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
func (o ZPAInspectionProfileCustomControlOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAInspectionProfileCustomControl) string { return v.Action }).(pulumi.StringOutput)
}

// Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
func (o ZPAInspectionProfileCustomControlOutput) ActionValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionProfileCustomControl) *string { return v.ActionValue }).(pulumi.StringPtrOutput)
}

// ID of the predefined control
func (o ZPAInspectionProfileCustomControlOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAInspectionProfileCustomControl) string { return v.Id }).(pulumi.StringOutput)
}

type ZPAInspectionProfileCustomControlArrayOutput struct{ *pulumi.OutputState }

func (ZPAInspectionProfileCustomControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (o ZPAInspectionProfileCustomControlArrayOutput) ToZPAInspectionProfileCustomControlArrayOutput() ZPAInspectionProfileCustomControlArrayOutput {
	return o
}

func (o ZPAInspectionProfileCustomControlArrayOutput) ToZPAInspectionProfileCustomControlArrayOutputWithContext(ctx context.Context) ZPAInspectionProfileCustomControlArrayOutput {
	return o
}

func (o ZPAInspectionProfileCustomControlArrayOutput) Index(i pulumi.IntInput) ZPAInspectionProfileCustomControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAInspectionProfileCustomControl {
		return vs[0].([]ZPAInspectionProfileCustomControl)[vs[1].(int)]
	}).(ZPAInspectionProfileCustomControlOutput)
}

type ZPAInspectionProfilePredefinedControl struct {
	// The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action string `pulumi:"action"`
	// Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue *string `pulumi:"actionValue"`
	// ID of the predefined control
	Id string `pulumi:"id"`
}

// ZPAInspectionProfilePredefinedControlInput is an input type that accepts ZPAInspectionProfilePredefinedControlArgs and ZPAInspectionProfilePredefinedControlOutput values.
// You can construct a concrete instance of `ZPAInspectionProfilePredefinedControlInput` via:
//
//	ZPAInspectionProfilePredefinedControlArgs{...}
type ZPAInspectionProfilePredefinedControlInput interface {
	pulumi.Input

	ToZPAInspectionProfilePredefinedControlOutput() ZPAInspectionProfilePredefinedControlOutput
	ToZPAInspectionProfilePredefinedControlOutputWithContext(context.Context) ZPAInspectionProfilePredefinedControlOutput
}

type ZPAInspectionProfilePredefinedControlArgs struct {
	// The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action pulumi.StringInput `pulumi:"action"`
	// Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue pulumi.StringPtrInput `pulumi:"actionValue"`
	// ID of the predefined control
	Id pulumi.StringInput `pulumi:"id"`
}

func (ZPAInspectionProfilePredefinedControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (i ZPAInspectionProfilePredefinedControlArgs) ToZPAInspectionProfilePredefinedControlOutput() ZPAInspectionProfilePredefinedControlOutput {
	return i.ToZPAInspectionProfilePredefinedControlOutputWithContext(context.Background())
}

func (i ZPAInspectionProfilePredefinedControlArgs) ToZPAInspectionProfilePredefinedControlOutputWithContext(ctx context.Context) ZPAInspectionProfilePredefinedControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionProfilePredefinedControlOutput)
}

// ZPAInspectionProfilePredefinedControlArrayInput is an input type that accepts ZPAInspectionProfilePredefinedControlArray and ZPAInspectionProfilePredefinedControlArrayOutput values.
// You can construct a concrete instance of `ZPAInspectionProfilePredefinedControlArrayInput` via:
//
//	ZPAInspectionProfilePredefinedControlArray{ ZPAInspectionProfilePredefinedControlArgs{...} }
type ZPAInspectionProfilePredefinedControlArrayInput interface {
	pulumi.Input

	ToZPAInspectionProfilePredefinedControlArrayOutput() ZPAInspectionProfilePredefinedControlArrayOutput
	ToZPAInspectionProfilePredefinedControlArrayOutputWithContext(context.Context) ZPAInspectionProfilePredefinedControlArrayOutput
}

type ZPAInspectionProfilePredefinedControlArray []ZPAInspectionProfilePredefinedControlInput

func (ZPAInspectionProfilePredefinedControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (i ZPAInspectionProfilePredefinedControlArray) ToZPAInspectionProfilePredefinedControlArrayOutput() ZPAInspectionProfilePredefinedControlArrayOutput {
	return i.ToZPAInspectionProfilePredefinedControlArrayOutputWithContext(context.Background())
}

func (i ZPAInspectionProfilePredefinedControlArray) ToZPAInspectionProfilePredefinedControlArrayOutputWithContext(ctx context.Context) ZPAInspectionProfilePredefinedControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAInspectionProfilePredefinedControlArrayOutput)
}

type ZPAInspectionProfilePredefinedControlOutput struct{ *pulumi.OutputState }

func (ZPAInspectionProfilePredefinedControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (o ZPAInspectionProfilePredefinedControlOutput) ToZPAInspectionProfilePredefinedControlOutput() ZPAInspectionProfilePredefinedControlOutput {
	return o
}

func (o ZPAInspectionProfilePredefinedControlOutput) ToZPAInspectionProfilePredefinedControlOutputWithContext(ctx context.Context) ZPAInspectionProfilePredefinedControlOutput {
	return o
}

// The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
func (o ZPAInspectionProfilePredefinedControlOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAInspectionProfilePredefinedControl) string { return v.Action }).(pulumi.StringOutput)
}

// Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
func (o ZPAInspectionProfilePredefinedControlOutput) ActionValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAInspectionProfilePredefinedControl) *string { return v.ActionValue }).(pulumi.StringPtrOutput)
}

// ID of the predefined control
func (o ZPAInspectionProfilePredefinedControlOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAInspectionProfilePredefinedControl) string { return v.Id }).(pulumi.StringOutput)
}

type ZPAInspectionProfilePredefinedControlArrayOutput struct{ *pulumi.OutputState }

func (ZPAInspectionProfilePredefinedControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (o ZPAInspectionProfilePredefinedControlArrayOutput) ToZPAInspectionProfilePredefinedControlArrayOutput() ZPAInspectionProfilePredefinedControlArrayOutput {
	return o
}

func (o ZPAInspectionProfilePredefinedControlArrayOutput) ToZPAInspectionProfilePredefinedControlArrayOutputWithContext(ctx context.Context) ZPAInspectionProfilePredefinedControlArrayOutput {
	return o
}

func (o ZPAInspectionProfilePredefinedControlArrayOutput) Index(i pulumi.IntInput) ZPAInspectionProfilePredefinedControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAInspectionProfilePredefinedControl {
		return vs[0].([]ZPAInspectionProfilePredefinedControl)[vs[1].(int)]
	}).(ZPAInspectionProfilePredefinedControlOutput)
}

type ZPALSSConfigControllerConfig struct {
	// (Optional)
	AuditMessage *string `pulumi:"auditMessage"`
	// (Optional)
	Description *string `pulumi:"description"`
	// (Optional)
	Enabled *bool `pulumi:"enabled"`
	// (Optional)
	Filters []string `pulumi:"filters"`
	// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
	Format string `pulumi:"format"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id *string `pulumi:"id"`
	// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
	LssHost string `pulumi:"lssHost"`
	// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
	LssPort string `pulumi:"lssPort"`
	// (Optional)
	Name string `pulumi:"name"`
	// Refer to the log type documentation
	SourceLogType string `pulumi:"sourceLogType"`
	// (Optional)
	UseTls *bool `pulumi:"useTls"`
}

// ZPALSSConfigControllerConfigInput is an input type that accepts ZPALSSConfigControllerConfigArgs and ZPALSSConfigControllerConfigOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerConfigInput` via:
//
//	ZPALSSConfigControllerConfigArgs{...}
type ZPALSSConfigControllerConfigInput interface {
	pulumi.Input

	ToZPALSSConfigControllerConfigOutput() ZPALSSConfigControllerConfigOutput
	ToZPALSSConfigControllerConfigOutputWithContext(context.Context) ZPALSSConfigControllerConfigOutput
}

type ZPALSSConfigControllerConfigArgs struct {
	// (Optional)
	AuditMessage pulumi.StringPtrInput `pulumi:"auditMessage"`
	// (Optional)
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Optional)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// (Optional)
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
	Format pulumi.StringInput `pulumi:"format"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
	LssHost pulumi.StringInput `pulumi:"lssHost"`
	// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
	LssPort pulumi.StringInput `pulumi:"lssPort"`
	// (Optional)
	Name pulumi.StringInput `pulumi:"name"`
	// Refer to the log type documentation
	SourceLogType pulumi.StringInput `pulumi:"sourceLogType"`
	// (Optional)
	UseTls pulumi.BoolPtrInput `pulumi:"useTls"`
}

func (ZPALSSConfigControllerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerConfig)(nil)).Elem()
}

func (i ZPALSSConfigControllerConfigArgs) ToZPALSSConfigControllerConfigOutput() ZPALSSConfigControllerConfigOutput {
	return i.ToZPALSSConfigControllerConfigOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerConfigArgs) ToZPALSSConfigControllerConfigOutputWithContext(ctx context.Context) ZPALSSConfigControllerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerConfigOutput)
}

func (i ZPALSSConfigControllerConfigArgs) ToZPALSSConfigControllerConfigPtrOutput() ZPALSSConfigControllerConfigPtrOutput {
	return i.ToZPALSSConfigControllerConfigPtrOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerConfigArgs) ToZPALSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerConfigOutput).ToZPALSSConfigControllerConfigPtrOutputWithContext(ctx)
}

// ZPALSSConfigControllerConfigPtrInput is an input type that accepts ZPALSSConfigControllerConfigArgs, ZPALSSConfigControllerConfigPtr and ZPALSSConfigControllerConfigPtrOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerConfigPtrInput` via:
//
//	        ZPALSSConfigControllerConfigArgs{...}
//
//	or:
//
//	        nil
type ZPALSSConfigControllerConfigPtrInput interface {
	pulumi.Input

	ToZPALSSConfigControllerConfigPtrOutput() ZPALSSConfigControllerConfigPtrOutput
	ToZPALSSConfigControllerConfigPtrOutputWithContext(context.Context) ZPALSSConfigControllerConfigPtrOutput
}

type zpalssconfigControllerConfigPtrType ZPALSSConfigControllerConfigArgs

func ZPALSSConfigControllerConfigPtr(v *ZPALSSConfigControllerConfigArgs) ZPALSSConfigControllerConfigPtrInput {
	return (*zpalssconfigControllerConfigPtrType)(v)
}

func (*zpalssconfigControllerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPALSSConfigControllerConfig)(nil)).Elem()
}

func (i *zpalssconfigControllerConfigPtrType) ToZPALSSConfigControllerConfigPtrOutput() ZPALSSConfigControllerConfigPtrOutput {
	return i.ToZPALSSConfigControllerConfigPtrOutputWithContext(context.Background())
}

func (i *zpalssconfigControllerConfigPtrType) ToZPALSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerConfigPtrOutput)
}

type ZPALSSConfigControllerConfigOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerConfig)(nil)).Elem()
}

func (o ZPALSSConfigControllerConfigOutput) ToZPALSSConfigControllerConfigOutput() ZPALSSConfigControllerConfigOutput {
	return o
}

func (o ZPALSSConfigControllerConfigOutput) ToZPALSSConfigControllerConfigOutputWithContext(ctx context.Context) ZPALSSConfigControllerConfigOutput {
	return o
}

func (o ZPALSSConfigControllerConfigOutput) ToZPALSSConfigControllerConfigPtrOutput() ZPALSSConfigControllerConfigPtrOutput {
	return o.ToZPALSSConfigControllerConfigPtrOutputWithContext(context.Background())
}

func (o ZPALSSConfigControllerConfigOutput) ToZPALSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZPALSSConfigControllerConfig) *ZPALSSConfigControllerConfig {
		return &v
	}).(ZPALSSConfigControllerConfigPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigOutput) AuditMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) *string { return v.AuditMessage }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
func (o ZPALSSConfigControllerConfigOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) string { return v.Format }).(pulumi.StringOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o ZPALSSConfigControllerConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
func (o ZPALSSConfigControllerConfigOutput) LssHost() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) string { return v.LssHost }).(pulumi.StringOutput)
}

// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
func (o ZPALSSConfigControllerConfigOutput) LssPort() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) string { return v.LssPort }).(pulumi.StringOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) string { return v.Name }).(pulumi.StringOutput)
}

// Refer to the log type documentation
func (o ZPALSSConfigControllerConfigOutput) SourceLogType() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) string { return v.SourceLogType }).(pulumi.StringOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigOutput) UseTls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConfig) *bool { return v.UseTls }).(pulumi.BoolPtrOutput)
}

type ZPALSSConfigControllerConfigPtrOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPALSSConfigControllerConfig)(nil)).Elem()
}

func (o ZPALSSConfigControllerConfigPtrOutput) ToZPALSSConfigControllerConfigPtrOutput() ZPALSSConfigControllerConfigPtrOutput {
	return o
}

func (o ZPALSSConfigControllerConfigPtrOutput) ToZPALSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerConfigPtrOutput {
	return o
}

func (o ZPALSSConfigControllerConfigPtrOutput) Elem() ZPALSSConfigControllerConfigOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) ZPALSSConfigControllerConfig {
		if v != nil {
			return *v
		}
		var ret ZPALSSConfigControllerConfig
		return ret
	}).(ZPALSSConfigControllerConfigOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigPtrOutput) AuditMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuditMessage
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigPtrOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) []string {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(pulumi.StringArrayOutput)
}

// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
func (o ZPALSSConfigControllerConfigPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o ZPALSSConfigControllerConfigPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
func (o ZPALSSConfigControllerConfigPtrOutput) LssHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LssHost
	}).(pulumi.StringPtrOutput)
}

// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
func (o ZPALSSConfigControllerConfigPtrOutput) LssPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LssPort
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Refer to the log type documentation
func (o ZPALSSConfigControllerConfigPtrOutput) SourceLogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SourceLogType
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerConfigPtrOutput) UseTls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseTls
	}).(pulumi.BoolPtrOutput)
}

type ZPALSSConfigControllerConnectorGroup struct {
	// App Connector Group ID(s) where logs will be forwarded to.
	Ids []string `pulumi:"ids"`
}

// ZPALSSConfigControllerConnectorGroupInput is an input type that accepts ZPALSSConfigControllerConnectorGroupArgs and ZPALSSConfigControllerConnectorGroupOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerConnectorGroupInput` via:
//
//	ZPALSSConfigControllerConnectorGroupArgs{...}
type ZPALSSConfigControllerConnectorGroupInput interface {
	pulumi.Input

	ToZPALSSConfigControllerConnectorGroupOutput() ZPALSSConfigControllerConnectorGroupOutput
	ToZPALSSConfigControllerConnectorGroupOutputWithContext(context.Context) ZPALSSConfigControllerConnectorGroupOutput
}

type ZPALSSConfigControllerConnectorGroupArgs struct {
	// App Connector Group ID(s) where logs will be forwarded to.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPALSSConfigControllerConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i ZPALSSConfigControllerConnectorGroupArgs) ToZPALSSConfigControllerConnectorGroupOutput() ZPALSSConfigControllerConnectorGroupOutput {
	return i.ToZPALSSConfigControllerConnectorGroupOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerConnectorGroupArgs) ToZPALSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) ZPALSSConfigControllerConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerConnectorGroupOutput)
}

// ZPALSSConfigControllerConnectorGroupArrayInput is an input type that accepts ZPALSSConfigControllerConnectorGroupArray and ZPALSSConfigControllerConnectorGroupArrayOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerConnectorGroupArrayInput` via:
//
//	ZPALSSConfigControllerConnectorGroupArray{ ZPALSSConfigControllerConnectorGroupArgs{...} }
type ZPALSSConfigControllerConnectorGroupArrayInput interface {
	pulumi.Input

	ToZPALSSConfigControllerConnectorGroupArrayOutput() ZPALSSConfigControllerConnectorGroupArrayOutput
	ToZPALSSConfigControllerConnectorGroupArrayOutputWithContext(context.Context) ZPALSSConfigControllerConnectorGroupArrayOutput
}

type ZPALSSConfigControllerConnectorGroupArray []ZPALSSConfigControllerConnectorGroupInput

func (ZPALSSConfigControllerConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i ZPALSSConfigControllerConnectorGroupArray) ToZPALSSConfigControllerConnectorGroupArrayOutput() ZPALSSConfigControllerConnectorGroupArrayOutput {
	return i.ToZPALSSConfigControllerConnectorGroupArrayOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerConnectorGroupArray) ToZPALSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) ZPALSSConfigControllerConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerConnectorGroupArrayOutput)
}

type ZPALSSConfigControllerConnectorGroupOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o ZPALSSConfigControllerConnectorGroupOutput) ToZPALSSConfigControllerConnectorGroupOutput() ZPALSSConfigControllerConnectorGroupOutput {
	return o
}

func (o ZPALSSConfigControllerConnectorGroupOutput) ToZPALSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) ZPALSSConfigControllerConnectorGroupOutput {
	return o
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o ZPALSSConfigControllerConnectorGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerConnectorGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPALSSConfigControllerConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o ZPALSSConfigControllerConnectorGroupArrayOutput) ToZPALSSConfigControllerConnectorGroupArrayOutput() ZPALSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o ZPALSSConfigControllerConnectorGroupArrayOutput) ToZPALSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) ZPALSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o ZPALSSConfigControllerConnectorGroupArrayOutput) Index(i pulumi.IntInput) ZPALSSConfigControllerConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPALSSConfigControllerConnectorGroup {
		return vs[0].([]ZPALSSConfigControllerConnectorGroup)[vs[1].(int)]
	}).(ZPALSSConfigControllerConnectorGroupOutput)
}

type ZPALSSConfigControllerPolicyRuleResource struct {
	// (Optional)
	Action            *string `pulumi:"action"`
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions []ZPALSSConfigControllerPolicyRuleResourceCondition `pulumi:"conditions"`
	// (Optional)
	CustomMsg   *string `pulumi:"customMsg"`
	DefaultRule *bool   `pulumi:"defaultRule"`
	// (Optional)
	Description *string `pulumi:"description"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id             *string `pulumi:"id"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name string `pulumi:"name"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator               *string `pulumi:"operator"`
	PolicySetId            *string `pulumi:"policySetId"`
	PolicyType             *string `pulumi:"policyType"`
	Priority               *string `pulumi:"priority"`
	ReauthDefaultRule      *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout      *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout          *string `pulumi:"reauthTimeout"`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

// ZPALSSConfigControllerPolicyRuleResourceInput is an input type that accepts ZPALSSConfigControllerPolicyRuleResourceArgs and ZPALSSConfigControllerPolicyRuleResourceOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerPolicyRuleResourceInput` via:
//
//	ZPALSSConfigControllerPolicyRuleResourceArgs{...}
type ZPALSSConfigControllerPolicyRuleResourceInput interface {
	pulumi.Input

	ToZPALSSConfigControllerPolicyRuleResourceOutput() ZPALSSConfigControllerPolicyRuleResourceOutput
	ToZPALSSConfigControllerPolicyRuleResourceOutputWithContext(context.Context) ZPALSSConfigControllerPolicyRuleResourceOutput
}

type ZPALSSConfigControllerPolicyRuleResourceArgs struct {
	// (Optional)
	Action            pulumi.StringPtrInput `pulumi:"action"`
	ActionId          pulumi.StringPtrInput `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolPtrInput   `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions ZPALSSConfigControllerPolicyRuleResourceConditionArrayInput `pulumi:"conditions"`
	// (Optional)
	CustomMsg   pulumi.StringPtrInput `pulumi:"customMsg"`
	DefaultRule pulumi.BoolPtrInput   `pulumi:"defaultRule"`
	// (Optional)
	Description pulumi.StringPtrInput `pulumi:"description"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	LssDefaultRule pulumi.BoolPtrInput   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator               pulumi.StringPtrInput `pulumi:"operator"`
	PolicySetId            pulumi.StringPtrInput `pulumi:"policySetId"`
	PolicyType             pulumi.StringPtrInput `pulumi:"policyType"`
	Priority               pulumi.StringPtrInput `pulumi:"priority"`
	ReauthDefaultRule      pulumi.BoolPtrInput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout      pulumi.StringPtrInput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout          pulumi.StringPtrInput `pulumi:"reauthTimeout"`
	RuleOrder              pulumi.StringPtrInput `pulumi:"ruleOrder"`
	ZpnInspectionProfileId pulumi.StringPtrInput `pulumi:"zpnInspectionProfileId"`
}

func (ZPALSSConfigControllerPolicyRuleResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (i ZPALSSConfigControllerPolicyRuleResourceArgs) ToZPALSSConfigControllerPolicyRuleResourceOutput() ZPALSSConfigControllerPolicyRuleResourceOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourceOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerPolicyRuleResourceArgs) ToZPALSSConfigControllerPolicyRuleResourceOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourceOutput)
}

func (i ZPALSSConfigControllerPolicyRuleResourceArgs) ToZPALSSConfigControllerPolicyRuleResourcePtrOutput() ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerPolicyRuleResourceArgs) ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourceOutput).ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx)
}

// ZPALSSConfigControllerPolicyRuleResourcePtrInput is an input type that accepts ZPALSSConfigControllerPolicyRuleResourceArgs, ZPALSSConfigControllerPolicyRuleResourcePtr and ZPALSSConfigControllerPolicyRuleResourcePtrOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerPolicyRuleResourcePtrInput` via:
//
//	        ZPALSSConfigControllerPolicyRuleResourceArgs{...}
//
//	or:
//
//	        nil
type ZPALSSConfigControllerPolicyRuleResourcePtrInput interface {
	pulumi.Input

	ToZPALSSConfigControllerPolicyRuleResourcePtrOutput() ZPALSSConfigControllerPolicyRuleResourcePtrOutput
	ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Context) ZPALSSConfigControllerPolicyRuleResourcePtrOutput
}

type zpalssconfigControllerPolicyRuleResourcePtrType ZPALSSConfigControllerPolicyRuleResourceArgs

func ZPALSSConfigControllerPolicyRuleResourcePtr(v *ZPALSSConfigControllerPolicyRuleResourceArgs) ZPALSSConfigControllerPolicyRuleResourcePtrInput {
	return (*zpalssconfigControllerPolicyRuleResourcePtrType)(v)
}

func (*zpalssconfigControllerPolicyRuleResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPALSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (i *zpalssconfigControllerPolicyRuleResourcePtrType) ToZPALSSConfigControllerPolicyRuleResourcePtrOutput() ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Background())
}

func (i *zpalssconfigControllerPolicyRuleResourcePtrType) ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourcePtrOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerPolicyRuleResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ToZPALSSConfigControllerPolicyRuleResourceOutput() ZPALSSConfigControllerPolicyRuleResourceOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ToZPALSSConfigControllerPolicyRuleResourceOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ToZPALSSConfigControllerPolicyRuleResourcePtrOutput() ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return o.ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Background())
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZPALSSConfigControllerPolicyRuleResource) *ZPALSSConfigControllerPolicyRuleResource {
		return &v
	}).(ZPALSSConfigControllerPolicyRuleResourcePtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *bool { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Conditions() ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) []ZPALSSConfigControllerPolicyRuleResourceCondition {
		return v.Conditions
	}).(ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.CustomMsg }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *bool { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *bool { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) - Supported values are: `AND` or `OR`
func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) PolicySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.PolicySetId }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *bool { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.RuleOrder }).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceOutput) ZpnInspectionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResource) *string { return v.ZpnInspectionProfileId }).(pulumi.StringPtrOutput)
}

type ZPALSSConfigControllerPolicyRuleResourcePtrOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPALSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ToZPALSSConfigControllerPolicyRuleResourcePtrOutput() ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ToZPALSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourcePtrOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Elem() ZPALSSConfigControllerPolicyRuleResourceOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) ZPALSSConfigControllerPolicyRuleResource {
		if v != nil {
			return *v
		}
		var ret ZPALSSConfigControllerPolicyRuleResource
		return ret
	}).(ZPALSSConfigControllerPolicyRuleResourceOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ActionId
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.BypassDefaultRule
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Conditions() ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) []ZPALSSConfigControllerPolicyRuleResourceCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.CustomMsg
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.DefaultRule
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.LssDefaultRule
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// (Optional) - Supported values are: `AND` or `OR`
func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) PolicySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.PolicySetId
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.ReauthDefaultRule
	}).(pulumi.BoolPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ReauthIdleTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ReauthTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.RuleOrder
	}).(pulumi.StringPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourcePtrOutput) ZpnInspectionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPALSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ZpnInspectionProfileId
	}).(pulumi.StringPtrOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceCondition struct {
	// (Optional)
	Negated  *bool                                                      `pulumi:"negated"`
	Operands []ZPALSSConfigControllerPolicyRuleResourceConditionOperand `pulumi:"operands"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator string `pulumi:"operator"`
}

// ZPALSSConfigControllerPolicyRuleResourceConditionInput is an input type that accepts ZPALSSConfigControllerPolicyRuleResourceConditionArgs and ZPALSSConfigControllerPolicyRuleResourceConditionOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerPolicyRuleResourceConditionInput` via:
//
//	ZPALSSConfigControllerPolicyRuleResourceConditionArgs{...}
type ZPALSSConfigControllerPolicyRuleResourceConditionInput interface {
	pulumi.Input

	ToZPALSSConfigControllerPolicyRuleResourceConditionOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOutput
	ToZPALSSConfigControllerPolicyRuleResourceConditionOutputWithContext(context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOutput
}

type ZPALSSConfigControllerPolicyRuleResourceConditionArgs struct {
	// (Optional)
	Negated  pulumi.BoolPtrInput                                                `pulumi:"negated"`
	Operands ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayInput `pulumi:"operands"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (ZPALSSConfigControllerPolicyRuleResourceConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionArgs) ToZPALSSConfigControllerPolicyRuleResourceConditionOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourceConditionOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionArgs) ToZPALSSConfigControllerPolicyRuleResourceConditionOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourceConditionOutput)
}

// ZPALSSConfigControllerPolicyRuleResourceConditionArrayInput is an input type that accepts ZPALSSConfigControllerPolicyRuleResourceConditionArray and ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerPolicyRuleResourceConditionArrayInput` via:
//
//	ZPALSSConfigControllerPolicyRuleResourceConditionArray{ ZPALSSConfigControllerPolicyRuleResourceConditionArgs{...} }
type ZPALSSConfigControllerPolicyRuleResourceConditionArrayInput interface {
	pulumi.Input

	ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput() ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput
	ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput
}

type ZPALSSConfigControllerPolicyRuleResourceConditionArray []ZPALSSConfigControllerPolicyRuleResourceConditionInput

func (ZPALSSConfigControllerPolicyRuleResourceConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPALSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionArray) ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput() ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionArray) ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceConditionOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerPolicyRuleResourceConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOutput {
	return o
}

// (Optional)
func (o ZPALSSConfigControllerPolicyRuleResourceConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResourceCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOutput) Operands() ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResourceCondition) []ZPALSSConfigControllerPolicyRuleResourceConditionOperand {
		return v.Operands
	}).(ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput)
}

// (Optional) - Supported values are: `AND` or `OR`
func (o ZPALSSConfigControllerPolicyRuleResourceConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResourceCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPALSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput() ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput) Index(i pulumi.IntInput) ZPALSSConfigControllerPolicyRuleResourceConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPALSSConfigControllerPolicyRuleResourceCondition {
		return vs[0].([]ZPALSSConfigControllerPolicyRuleResourceCondition)[vs[1].(int)]
	}).(ZPALSSConfigControllerPolicyRuleResourceConditionOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceConditionOperand struct {
	// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `SAML`, `SCIM`, `SCIM_GROUP`
	ObjectType string `pulumi:"objectType"`
	// (Optional) The below values are supported when choosing `objectType` of type `CLIENT_TYPE`.
	Values []string `pulumi:"values"`
}

// ZPALSSConfigControllerPolicyRuleResourceConditionOperandInput is an input type that accepts ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs and ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerPolicyRuleResourceConditionOperandInput` via:
//
//	ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs{...}
type ZPALSSConfigControllerPolicyRuleResourceConditionOperandInput interface {
	pulumi.Input

	ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput
	ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput
}

type ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs struct {
	// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `SAML`, `SCIM`, `SCIM_GROUP`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// (Optional) The below values are supported when choosing `objectType` of type `CLIENT_TYPE`.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput)
}

// ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayInput is an input type that accepts ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray and ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput values.
// You can construct a concrete instance of `ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayInput` via:
//
//	ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray{ ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs{...} }
type ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayInput interface {
	pulumi.Input

	ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput
	ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput
}

type ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray []ZPALSSConfigControllerPolicyRuleResourceConditionOperandInput

func (ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPALSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return i.ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(context.Background())
}

func (i ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return o
}

// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `SAML`, `SCIM`, `SCIM_GROUP`
func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResourceConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

// (Optional) The below values are supported when choosing `objectType` of type `CLIENT_TYPE`.
func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPALSSConfigControllerPolicyRuleResourceConditionOperand) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPALSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput() ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) ToZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(ctx context.Context) ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return o
}

func (o ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) Index(i pulumi.IntInput) ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPALSSConfigControllerPolicyRuleResourceConditionOperand {
		return vs[0].([]ZPALSSConfigControllerPolicyRuleResourceConditionOperand)[vs[1].(int)]
	}).(ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput)
}

type ZPAPolicyAccessForwardingRuleCondition struct {
	Id       *string                                         `pulumi:"id"`
	Negated  *bool                                           `pulumi:"negated"`
	Operands []ZPAPolicyAccessForwardingRuleConditionOperand `pulumi:"operands"`
	Operator string                                          `pulumi:"operator"`
}

// ZPAPolicyAccessForwardingRuleConditionInput is an input type that accepts ZPAPolicyAccessForwardingRuleConditionArgs and ZPAPolicyAccessForwardingRuleConditionOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessForwardingRuleConditionInput` via:
//
//	ZPAPolicyAccessForwardingRuleConditionArgs{...}
type ZPAPolicyAccessForwardingRuleConditionInput interface {
	pulumi.Input

	ToZPAPolicyAccessForwardingRuleConditionOutput() ZPAPolicyAccessForwardingRuleConditionOutput
	ToZPAPolicyAccessForwardingRuleConditionOutputWithContext(context.Context) ZPAPolicyAccessForwardingRuleConditionOutput
}

type ZPAPolicyAccessForwardingRuleConditionArgs struct {
	Id       pulumi.StringPtrInput                                   `pulumi:"id"`
	Negated  pulumi.BoolPtrInput                                     `pulumi:"negated"`
	Operands ZPAPolicyAccessForwardingRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator pulumi.StringInput                                      `pulumi:"operator"`
}

func (ZPAPolicyAccessForwardingRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessForwardingRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessForwardingRuleConditionArgs) ToZPAPolicyAccessForwardingRuleConditionOutput() ZPAPolicyAccessForwardingRuleConditionOutput {
	return i.ToZPAPolicyAccessForwardingRuleConditionOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessForwardingRuleConditionArgs) ToZPAPolicyAccessForwardingRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessForwardingRuleConditionOutput)
}

// ZPAPolicyAccessForwardingRuleConditionArrayInput is an input type that accepts ZPAPolicyAccessForwardingRuleConditionArray and ZPAPolicyAccessForwardingRuleConditionArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessForwardingRuleConditionArrayInput` via:
//
//	ZPAPolicyAccessForwardingRuleConditionArray{ ZPAPolicyAccessForwardingRuleConditionArgs{...} }
type ZPAPolicyAccessForwardingRuleConditionArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessForwardingRuleConditionArrayOutput() ZPAPolicyAccessForwardingRuleConditionArrayOutput
	ToZPAPolicyAccessForwardingRuleConditionArrayOutputWithContext(context.Context) ZPAPolicyAccessForwardingRuleConditionArrayOutput
}

type ZPAPolicyAccessForwardingRuleConditionArray []ZPAPolicyAccessForwardingRuleConditionInput

func (ZPAPolicyAccessForwardingRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessForwardingRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessForwardingRuleConditionArray) ToZPAPolicyAccessForwardingRuleConditionArrayOutput() ZPAPolicyAccessForwardingRuleConditionArrayOutput {
	return i.ToZPAPolicyAccessForwardingRuleConditionArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessForwardingRuleConditionArray) ToZPAPolicyAccessForwardingRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessForwardingRuleConditionArrayOutput)
}

type ZPAPolicyAccessForwardingRuleConditionOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessForwardingRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessForwardingRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessForwardingRuleConditionOutput) ToZPAPolicyAccessForwardingRuleConditionOutput() ZPAPolicyAccessForwardingRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionOutput) ToZPAPolicyAccessForwardingRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleCondition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOutput) Operands() ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleCondition) []ZPAPolicyAccessForwardingRuleConditionOperand {
		return v.Operands
	}).(ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type ZPAPolicyAccessForwardingRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessForwardingRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessForwardingRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessForwardingRuleConditionArrayOutput) ToZPAPolicyAccessForwardingRuleConditionArrayOutput() ZPAPolicyAccessForwardingRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionArrayOutput) ToZPAPolicyAccessForwardingRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessForwardingRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessForwardingRuleCondition {
		return vs[0].([]ZPAPolicyAccessForwardingRuleCondition)[vs[1].(int)]
	}).(ZPAPolicyAccessForwardingRuleConditionOutput)
}

type ZPAPolicyAccessForwardingRuleConditionOperand struct {
	Id         *string  `pulumi:"id"`
	IdpId      *string  `pulumi:"idpId"`
	Lhs        string   `pulumi:"lhs"`
	Name       *string  `pulumi:"name"`
	ObjectType string   `pulumi:"objectType"`
	Rhs        *string  `pulumi:"rhs"`
	RhsLists   []string `pulumi:"rhsLists"`
}

// ZPAPolicyAccessForwardingRuleConditionOperandInput is an input type that accepts ZPAPolicyAccessForwardingRuleConditionOperandArgs and ZPAPolicyAccessForwardingRuleConditionOperandOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessForwardingRuleConditionOperandInput` via:
//
//	ZPAPolicyAccessForwardingRuleConditionOperandArgs{...}
type ZPAPolicyAccessForwardingRuleConditionOperandInput interface {
	pulumi.Input

	ToZPAPolicyAccessForwardingRuleConditionOperandOutput() ZPAPolicyAccessForwardingRuleConditionOperandOutput
	ToZPAPolicyAccessForwardingRuleConditionOperandOutputWithContext(context.Context) ZPAPolicyAccessForwardingRuleConditionOperandOutput
}

type ZPAPolicyAccessForwardingRuleConditionOperandArgs struct {
	Id         pulumi.StringPtrInput   `pulumi:"id"`
	IdpId      pulumi.StringPtrInput   `pulumi:"idpId"`
	Lhs        pulumi.StringInput      `pulumi:"lhs"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	ObjectType pulumi.StringInput      `pulumi:"objectType"`
	Rhs        pulumi.StringPtrInput   `pulumi:"rhs"`
	RhsLists   pulumi.StringArrayInput `pulumi:"rhsLists"`
}

func (ZPAPolicyAccessForwardingRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessForwardingRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessForwardingRuleConditionOperandArgs) ToZPAPolicyAccessForwardingRuleConditionOperandOutput() ZPAPolicyAccessForwardingRuleConditionOperandOutput {
	return i.ToZPAPolicyAccessForwardingRuleConditionOperandOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessForwardingRuleConditionOperandArgs) ToZPAPolicyAccessForwardingRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessForwardingRuleConditionOperandOutput)
}

// ZPAPolicyAccessForwardingRuleConditionOperandArrayInput is an input type that accepts ZPAPolicyAccessForwardingRuleConditionOperandArray and ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessForwardingRuleConditionOperandArrayInput` via:
//
//	ZPAPolicyAccessForwardingRuleConditionOperandArray{ ZPAPolicyAccessForwardingRuleConditionOperandArgs{...} }
type ZPAPolicyAccessForwardingRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutput() ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput
	ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutputWithContext(context.Context) ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput
}

type ZPAPolicyAccessForwardingRuleConditionOperandArray []ZPAPolicyAccessForwardingRuleConditionOperandInput

func (ZPAPolicyAccessForwardingRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessForwardingRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessForwardingRuleConditionOperandArray) ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutput() ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput {
	return i.ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessForwardingRuleConditionOperandArray) ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput)
}

type ZPAPolicyAccessForwardingRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessForwardingRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessForwardingRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) ToZPAPolicyAccessForwardingRuleConditionOperandOutput() ZPAPolicyAccessForwardingRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) ToZPAPolicyAccessForwardingRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) IdpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) *string { return v.IdpId }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandOutput) RhsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessForwardingRuleConditionOperand) []string { return v.RhsLists }).(pulumi.StringArrayOutput)
}

type ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessForwardingRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput) ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutput() ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput) ToZPAPolicyAccessForwardingRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessForwardingRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessForwardingRuleConditionOperand {
		return vs[0].([]ZPAPolicyAccessForwardingRuleConditionOperand)[vs[1].(int)]
	}).(ZPAPolicyAccessForwardingRuleConditionOperandOutput)
}

type ZPAPolicyAccessInspectionRuleCondition struct {
	Id       *string                                         `pulumi:"id"`
	Negated  *bool                                           `pulumi:"negated"`
	Operands []ZPAPolicyAccessInspectionRuleConditionOperand `pulumi:"operands"`
	Operator string                                          `pulumi:"operator"`
}

// ZPAPolicyAccessInspectionRuleConditionInput is an input type that accepts ZPAPolicyAccessInspectionRuleConditionArgs and ZPAPolicyAccessInspectionRuleConditionOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessInspectionRuleConditionInput` via:
//
//	ZPAPolicyAccessInspectionRuleConditionArgs{...}
type ZPAPolicyAccessInspectionRuleConditionInput interface {
	pulumi.Input

	ToZPAPolicyAccessInspectionRuleConditionOutput() ZPAPolicyAccessInspectionRuleConditionOutput
	ToZPAPolicyAccessInspectionRuleConditionOutputWithContext(context.Context) ZPAPolicyAccessInspectionRuleConditionOutput
}

type ZPAPolicyAccessInspectionRuleConditionArgs struct {
	Id       pulumi.StringPtrInput                                   `pulumi:"id"`
	Negated  pulumi.BoolPtrInput                                     `pulumi:"negated"`
	Operands ZPAPolicyAccessInspectionRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator pulumi.StringInput                                      `pulumi:"operator"`
}

func (ZPAPolicyAccessInspectionRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessInspectionRuleConditionArgs) ToZPAPolicyAccessInspectionRuleConditionOutput() ZPAPolicyAccessInspectionRuleConditionOutput {
	return i.ToZPAPolicyAccessInspectionRuleConditionOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessInspectionRuleConditionArgs) ToZPAPolicyAccessInspectionRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessInspectionRuleConditionOutput)
}

// ZPAPolicyAccessInspectionRuleConditionArrayInput is an input type that accepts ZPAPolicyAccessInspectionRuleConditionArray and ZPAPolicyAccessInspectionRuleConditionArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessInspectionRuleConditionArrayInput` via:
//
//	ZPAPolicyAccessInspectionRuleConditionArray{ ZPAPolicyAccessInspectionRuleConditionArgs{...} }
type ZPAPolicyAccessInspectionRuleConditionArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessInspectionRuleConditionArrayOutput() ZPAPolicyAccessInspectionRuleConditionArrayOutput
	ToZPAPolicyAccessInspectionRuleConditionArrayOutputWithContext(context.Context) ZPAPolicyAccessInspectionRuleConditionArrayOutput
}

type ZPAPolicyAccessInspectionRuleConditionArray []ZPAPolicyAccessInspectionRuleConditionInput

func (ZPAPolicyAccessInspectionRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessInspectionRuleConditionArray) ToZPAPolicyAccessInspectionRuleConditionArrayOutput() ZPAPolicyAccessInspectionRuleConditionArrayOutput {
	return i.ToZPAPolicyAccessInspectionRuleConditionArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessInspectionRuleConditionArray) ToZPAPolicyAccessInspectionRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessInspectionRuleConditionArrayOutput)
}

type ZPAPolicyAccessInspectionRuleConditionOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessInspectionRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessInspectionRuleConditionOutput) ToZPAPolicyAccessInspectionRuleConditionOutput() ZPAPolicyAccessInspectionRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionOutput) ToZPAPolicyAccessInspectionRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleCondition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOutput) Operands() ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleCondition) []ZPAPolicyAccessInspectionRuleConditionOperand {
		return v.Operands
	}).(ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type ZPAPolicyAccessInspectionRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessInspectionRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessInspectionRuleConditionArrayOutput) ToZPAPolicyAccessInspectionRuleConditionArrayOutput() ZPAPolicyAccessInspectionRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionArrayOutput) ToZPAPolicyAccessInspectionRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessInspectionRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessInspectionRuleCondition {
		return vs[0].([]ZPAPolicyAccessInspectionRuleCondition)[vs[1].(int)]
	}).(ZPAPolicyAccessInspectionRuleConditionOutput)
}

type ZPAPolicyAccessInspectionRuleConditionOperand struct {
	Id         *string  `pulumi:"id"`
	IdpId      *string  `pulumi:"idpId"`
	Lhs        string   `pulumi:"lhs"`
	Name       *string  `pulumi:"name"`
	ObjectType string   `pulumi:"objectType"`
	Rhs        *string  `pulumi:"rhs"`
	RhsLists   []string `pulumi:"rhsLists"`
}

// ZPAPolicyAccessInspectionRuleConditionOperandInput is an input type that accepts ZPAPolicyAccessInspectionRuleConditionOperandArgs and ZPAPolicyAccessInspectionRuleConditionOperandOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessInspectionRuleConditionOperandInput` via:
//
//	ZPAPolicyAccessInspectionRuleConditionOperandArgs{...}
type ZPAPolicyAccessInspectionRuleConditionOperandInput interface {
	pulumi.Input

	ToZPAPolicyAccessInspectionRuleConditionOperandOutput() ZPAPolicyAccessInspectionRuleConditionOperandOutput
	ToZPAPolicyAccessInspectionRuleConditionOperandOutputWithContext(context.Context) ZPAPolicyAccessInspectionRuleConditionOperandOutput
}

type ZPAPolicyAccessInspectionRuleConditionOperandArgs struct {
	Id         pulumi.StringPtrInput   `pulumi:"id"`
	IdpId      pulumi.StringPtrInput   `pulumi:"idpId"`
	Lhs        pulumi.StringInput      `pulumi:"lhs"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	ObjectType pulumi.StringInput      `pulumi:"objectType"`
	Rhs        pulumi.StringPtrInput   `pulumi:"rhs"`
	RhsLists   pulumi.StringArrayInput `pulumi:"rhsLists"`
}

func (ZPAPolicyAccessInspectionRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessInspectionRuleConditionOperandArgs) ToZPAPolicyAccessInspectionRuleConditionOperandOutput() ZPAPolicyAccessInspectionRuleConditionOperandOutput {
	return i.ToZPAPolicyAccessInspectionRuleConditionOperandOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessInspectionRuleConditionOperandArgs) ToZPAPolicyAccessInspectionRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessInspectionRuleConditionOperandOutput)
}

// ZPAPolicyAccessInspectionRuleConditionOperandArrayInput is an input type that accepts ZPAPolicyAccessInspectionRuleConditionOperandArray and ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessInspectionRuleConditionOperandArrayInput` via:
//
//	ZPAPolicyAccessInspectionRuleConditionOperandArray{ ZPAPolicyAccessInspectionRuleConditionOperandArgs{...} }
type ZPAPolicyAccessInspectionRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutput() ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput
	ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(context.Context) ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput
}

type ZPAPolicyAccessInspectionRuleConditionOperandArray []ZPAPolicyAccessInspectionRuleConditionOperandInput

func (ZPAPolicyAccessInspectionRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessInspectionRuleConditionOperandArray) ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutput() ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput {
	return i.ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessInspectionRuleConditionOperandArray) ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput)
}

type ZPAPolicyAccessInspectionRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessInspectionRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) ToZPAPolicyAccessInspectionRuleConditionOperandOutput() ZPAPolicyAccessInspectionRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) ToZPAPolicyAccessInspectionRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) IdpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) *string { return v.IdpId }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandOutput) RhsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessInspectionRuleConditionOperand) []string { return v.RhsLists }).(pulumi.StringArrayOutput)
}

type ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput) ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutput() ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput) ToZPAPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessInspectionRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessInspectionRuleConditionOperand {
		return vs[0].([]ZPAPolicyAccessInspectionRuleConditionOperand)[vs[1].(int)]
	}).(ZPAPolicyAccessInspectionRuleConditionOperandOutput)
}

type ZPAPolicyAccessRuleAppConnectorGroup struct {
	// (Optional) The ID of a server group resource
	Ids []string `pulumi:"ids"`
}

// ZPAPolicyAccessRuleAppConnectorGroupInput is an input type that accepts ZPAPolicyAccessRuleAppConnectorGroupArgs and ZPAPolicyAccessRuleAppConnectorGroupOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleAppConnectorGroupInput` via:
//
//	ZPAPolicyAccessRuleAppConnectorGroupArgs{...}
type ZPAPolicyAccessRuleAppConnectorGroupInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleAppConnectorGroupOutput() ZPAPolicyAccessRuleAppConnectorGroupOutput
	ToZPAPolicyAccessRuleAppConnectorGroupOutputWithContext(context.Context) ZPAPolicyAccessRuleAppConnectorGroupOutput
}

type ZPAPolicyAccessRuleAppConnectorGroupArgs struct {
	// (Optional) The ID of a server group resource
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAPolicyAccessRuleAppConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleAppConnectorGroup)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleAppConnectorGroupArgs) ToZPAPolicyAccessRuleAppConnectorGroupOutput() ZPAPolicyAccessRuleAppConnectorGroupOutput {
	return i.ToZPAPolicyAccessRuleAppConnectorGroupOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleAppConnectorGroupArgs) ToZPAPolicyAccessRuleAppConnectorGroupOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleAppConnectorGroupOutput)
}

// ZPAPolicyAccessRuleAppConnectorGroupArrayInput is an input type that accepts ZPAPolicyAccessRuleAppConnectorGroupArray and ZPAPolicyAccessRuleAppConnectorGroupArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleAppConnectorGroupArrayInput` via:
//
//	ZPAPolicyAccessRuleAppConnectorGroupArray{ ZPAPolicyAccessRuleAppConnectorGroupArgs{...} }
type ZPAPolicyAccessRuleAppConnectorGroupArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleAppConnectorGroupArrayOutput() ZPAPolicyAccessRuleAppConnectorGroupArrayOutput
	ToZPAPolicyAccessRuleAppConnectorGroupArrayOutputWithContext(context.Context) ZPAPolicyAccessRuleAppConnectorGroupArrayOutput
}

type ZPAPolicyAccessRuleAppConnectorGroupArray []ZPAPolicyAccessRuleAppConnectorGroupInput

func (ZPAPolicyAccessRuleAppConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleAppConnectorGroup)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleAppConnectorGroupArray) ToZPAPolicyAccessRuleAppConnectorGroupArrayOutput() ZPAPolicyAccessRuleAppConnectorGroupArrayOutput {
	return i.ToZPAPolicyAccessRuleAppConnectorGroupArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleAppConnectorGroupArray) ToZPAPolicyAccessRuleAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleAppConnectorGroupArrayOutput)
}

type ZPAPolicyAccessRuleAppConnectorGroupOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleAppConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleAppConnectorGroup)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleAppConnectorGroupOutput) ToZPAPolicyAccessRuleAppConnectorGroupOutput() ZPAPolicyAccessRuleAppConnectorGroupOutput {
	return o
}

func (o ZPAPolicyAccessRuleAppConnectorGroupOutput) ToZPAPolicyAccessRuleAppConnectorGroupOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppConnectorGroupOutput {
	return o
}

// (Optional) The ID of a server group resource
func (o ZPAPolicyAccessRuleAppConnectorGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleAppConnectorGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAPolicyAccessRuleAppConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleAppConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleAppConnectorGroup)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleAppConnectorGroupArrayOutput) ToZPAPolicyAccessRuleAppConnectorGroupArrayOutput() ZPAPolicyAccessRuleAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleAppConnectorGroupArrayOutput) ToZPAPolicyAccessRuleAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleAppConnectorGroupArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessRuleAppConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessRuleAppConnectorGroup {
		return vs[0].([]ZPAPolicyAccessRuleAppConnectorGroup)[vs[1].(int)]
	}).(ZPAPolicyAccessRuleAppConnectorGroupOutput)
}

type ZPAPolicyAccessRuleAppServerGroup struct {
	// (Optional) The ID of a server group resource
	Ids []string `pulumi:"ids"`
}

// ZPAPolicyAccessRuleAppServerGroupInput is an input type that accepts ZPAPolicyAccessRuleAppServerGroupArgs and ZPAPolicyAccessRuleAppServerGroupOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleAppServerGroupInput` via:
//
//	ZPAPolicyAccessRuleAppServerGroupArgs{...}
type ZPAPolicyAccessRuleAppServerGroupInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleAppServerGroupOutput() ZPAPolicyAccessRuleAppServerGroupOutput
	ToZPAPolicyAccessRuleAppServerGroupOutputWithContext(context.Context) ZPAPolicyAccessRuleAppServerGroupOutput
}

type ZPAPolicyAccessRuleAppServerGroupArgs struct {
	// (Optional) The ID of a server group resource
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAPolicyAccessRuleAppServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleAppServerGroup)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleAppServerGroupArgs) ToZPAPolicyAccessRuleAppServerGroupOutput() ZPAPolicyAccessRuleAppServerGroupOutput {
	return i.ToZPAPolicyAccessRuleAppServerGroupOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleAppServerGroupArgs) ToZPAPolicyAccessRuleAppServerGroupOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleAppServerGroupOutput)
}

// ZPAPolicyAccessRuleAppServerGroupArrayInput is an input type that accepts ZPAPolicyAccessRuleAppServerGroupArray and ZPAPolicyAccessRuleAppServerGroupArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleAppServerGroupArrayInput` via:
//
//	ZPAPolicyAccessRuleAppServerGroupArray{ ZPAPolicyAccessRuleAppServerGroupArgs{...} }
type ZPAPolicyAccessRuleAppServerGroupArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleAppServerGroupArrayOutput() ZPAPolicyAccessRuleAppServerGroupArrayOutput
	ToZPAPolicyAccessRuleAppServerGroupArrayOutputWithContext(context.Context) ZPAPolicyAccessRuleAppServerGroupArrayOutput
}

type ZPAPolicyAccessRuleAppServerGroupArray []ZPAPolicyAccessRuleAppServerGroupInput

func (ZPAPolicyAccessRuleAppServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleAppServerGroup)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleAppServerGroupArray) ToZPAPolicyAccessRuleAppServerGroupArrayOutput() ZPAPolicyAccessRuleAppServerGroupArrayOutput {
	return i.ToZPAPolicyAccessRuleAppServerGroupArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleAppServerGroupArray) ToZPAPolicyAccessRuleAppServerGroupArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleAppServerGroupArrayOutput)
}

type ZPAPolicyAccessRuleAppServerGroupOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleAppServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleAppServerGroup)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleAppServerGroupOutput) ToZPAPolicyAccessRuleAppServerGroupOutput() ZPAPolicyAccessRuleAppServerGroupOutput {
	return o
}

func (o ZPAPolicyAccessRuleAppServerGroupOutput) ToZPAPolicyAccessRuleAppServerGroupOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppServerGroupOutput {
	return o
}

// (Optional) The ID of a server group resource
func (o ZPAPolicyAccessRuleAppServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleAppServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAPolicyAccessRuleAppServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleAppServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleAppServerGroup)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleAppServerGroupArrayOutput) ToZPAPolicyAccessRuleAppServerGroupArrayOutput() ZPAPolicyAccessRuleAppServerGroupArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleAppServerGroupArrayOutput) ToZPAPolicyAccessRuleAppServerGroupArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleAppServerGroupArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleAppServerGroupArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessRuleAppServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessRuleAppServerGroup {
		return vs[0].([]ZPAPolicyAccessRuleAppServerGroup)[vs[1].(int)]
	}).(ZPAPolicyAccessRuleAppServerGroupOutput)
}

type ZPAPolicyAccessRuleCondition struct {
	// (Optional) The ID of a server group resource
	Id *string `pulumi:"id"`
	// (Optional) Supported values: ``true`` or ``false``
	Negated *bool `pulumi:"negated"`
	// (Optional) - Operands block must be repeated if multiple per `objectType` conditions are to be added to the rule.
	Operands []ZPAPolicyAccessRuleConditionOperand `pulumi:"operands"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator string `pulumi:"operator"`
}

// ZPAPolicyAccessRuleConditionInput is an input type that accepts ZPAPolicyAccessRuleConditionArgs and ZPAPolicyAccessRuleConditionOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleConditionInput` via:
//
//	ZPAPolicyAccessRuleConditionArgs{...}
type ZPAPolicyAccessRuleConditionInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleConditionOutput() ZPAPolicyAccessRuleConditionOutput
	ToZPAPolicyAccessRuleConditionOutputWithContext(context.Context) ZPAPolicyAccessRuleConditionOutput
}

type ZPAPolicyAccessRuleConditionArgs struct {
	// (Optional) The ID of a server group resource
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) Supported values: ``true`` or ``false``
	Negated pulumi.BoolPtrInput `pulumi:"negated"`
	// (Optional) - Operands block must be repeated if multiple per `objectType` conditions are to be added to the rule.
	Operands ZPAPolicyAccessRuleConditionOperandArrayInput `pulumi:"operands"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (ZPAPolicyAccessRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleConditionArgs) ToZPAPolicyAccessRuleConditionOutput() ZPAPolicyAccessRuleConditionOutput {
	return i.ToZPAPolicyAccessRuleConditionOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleConditionArgs) ToZPAPolicyAccessRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleConditionOutput)
}

// ZPAPolicyAccessRuleConditionArrayInput is an input type that accepts ZPAPolicyAccessRuleConditionArray and ZPAPolicyAccessRuleConditionArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleConditionArrayInput` via:
//
//	ZPAPolicyAccessRuleConditionArray{ ZPAPolicyAccessRuleConditionArgs{...} }
type ZPAPolicyAccessRuleConditionArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleConditionArrayOutput() ZPAPolicyAccessRuleConditionArrayOutput
	ToZPAPolicyAccessRuleConditionArrayOutputWithContext(context.Context) ZPAPolicyAccessRuleConditionArrayOutput
}

type ZPAPolicyAccessRuleConditionArray []ZPAPolicyAccessRuleConditionInput

func (ZPAPolicyAccessRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleConditionArray) ToZPAPolicyAccessRuleConditionArrayOutput() ZPAPolicyAccessRuleConditionArrayOutput {
	return i.ToZPAPolicyAccessRuleConditionArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleConditionArray) ToZPAPolicyAccessRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleConditionArrayOutput)
}

type ZPAPolicyAccessRuleConditionOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleConditionOutput) ToZPAPolicyAccessRuleConditionOutput() ZPAPolicyAccessRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessRuleConditionOutput) ToZPAPolicyAccessRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionOutput {
	return o
}

// (Optional) The ID of a server group resource
func (o ZPAPolicyAccessRuleConditionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleCondition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) Supported values: “true“ or “false“
func (o ZPAPolicyAccessRuleConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

// (Optional) - Operands block must be repeated if multiple per `objectType` conditions are to be added to the rule.
func (o ZPAPolicyAccessRuleConditionOutput) Operands() ZPAPolicyAccessRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleCondition) []ZPAPolicyAccessRuleConditionOperand { return v.Operands }).(ZPAPolicyAccessRuleConditionOperandArrayOutput)
}

// (Optional) Supported values: “AND“, and “OR“
func (o ZPAPolicyAccessRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type ZPAPolicyAccessRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleConditionArrayOutput) ToZPAPolicyAccessRuleConditionArrayOutput() ZPAPolicyAccessRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleConditionArrayOutput) ToZPAPolicyAccessRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleConditionArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessRuleCondition {
		return vs[0].([]ZPAPolicyAccessRuleCondition)[vs[1].(int)]
	}).(ZPAPolicyAccessRuleConditionOutput)
}

type ZPAPolicyAccessRuleConditionOperand struct {
	// (Optional) The ID of a server group resource
	Id *string `pulumi:"id"`
	// (Optional)
	IdpId *string `pulumi:"idpId"`
	// (Optional) LHS must always carry the string value ``id`` or the attribute ID of the resource being associated with the rule.
	Lhs string `pulumi:"lhs"`
	// (Optional)
	Name *string `pulumi:"name"`
	// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `SAML`, `IDP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `POSTURE`, `SCIM`, `SCIM_GROUP`, and `CLOUD_CONNECTOR_GROUP`. `TRUSTED_NETWORK`, and `CLIENT_TYPE`.
	ObjectType string `pulumi:"objectType"`
	// (Optional) RHS is either the ID attribute of a resource or fixed string value. Refer to the chart below for further details.
	Rhs      *string  `pulumi:"rhs"`
	RhsLists []string `pulumi:"rhsLists"`
}

// ZPAPolicyAccessRuleConditionOperandInput is an input type that accepts ZPAPolicyAccessRuleConditionOperandArgs and ZPAPolicyAccessRuleConditionOperandOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleConditionOperandInput` via:
//
//	ZPAPolicyAccessRuleConditionOperandArgs{...}
type ZPAPolicyAccessRuleConditionOperandInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleConditionOperandOutput() ZPAPolicyAccessRuleConditionOperandOutput
	ToZPAPolicyAccessRuleConditionOperandOutputWithContext(context.Context) ZPAPolicyAccessRuleConditionOperandOutput
}

type ZPAPolicyAccessRuleConditionOperandArgs struct {
	// (Optional) The ID of a server group resource
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional)
	IdpId pulumi.StringPtrInput `pulumi:"idpId"`
	// (Optional) LHS must always carry the string value ``id`` or the attribute ID of the resource being associated with the rule.
	Lhs pulumi.StringInput `pulumi:"lhs"`
	// (Optional)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `SAML`, `IDP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `POSTURE`, `SCIM`, `SCIM_GROUP`, and `CLOUD_CONNECTOR_GROUP`. `TRUSTED_NETWORK`, and `CLIENT_TYPE`.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// (Optional) RHS is either the ID attribute of a resource or fixed string value. Refer to the chart below for further details.
	Rhs      pulumi.StringPtrInput   `pulumi:"rhs"`
	RhsLists pulumi.StringArrayInput `pulumi:"rhsLists"`
}

func (ZPAPolicyAccessRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleConditionOperandArgs) ToZPAPolicyAccessRuleConditionOperandOutput() ZPAPolicyAccessRuleConditionOperandOutput {
	return i.ToZPAPolicyAccessRuleConditionOperandOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleConditionOperandArgs) ToZPAPolicyAccessRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleConditionOperandOutput)
}

// ZPAPolicyAccessRuleConditionOperandArrayInput is an input type that accepts ZPAPolicyAccessRuleConditionOperandArray and ZPAPolicyAccessRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleConditionOperandArrayInput` via:
//
//	ZPAPolicyAccessRuleConditionOperandArray{ ZPAPolicyAccessRuleConditionOperandArgs{...} }
type ZPAPolicyAccessRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleConditionOperandArrayOutput() ZPAPolicyAccessRuleConditionOperandArrayOutput
	ToZPAPolicyAccessRuleConditionOperandArrayOutputWithContext(context.Context) ZPAPolicyAccessRuleConditionOperandArrayOutput
}

type ZPAPolicyAccessRuleConditionOperandArray []ZPAPolicyAccessRuleConditionOperandInput

func (ZPAPolicyAccessRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleConditionOperandArray) ToZPAPolicyAccessRuleConditionOperandArrayOutput() ZPAPolicyAccessRuleConditionOperandArrayOutput {
	return i.ToZPAPolicyAccessRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleConditionOperandArray) ToZPAPolicyAccessRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleConditionOperandArrayOutput)
}

type ZPAPolicyAccessRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleConditionOperandOutput) ToZPAPolicyAccessRuleConditionOperandOutput() ZPAPolicyAccessRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessRuleConditionOperandOutput) ToZPAPolicyAccessRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionOperandOutput {
	return o
}

// (Optional) The ID of a server group resource
func (o ZPAPolicyAccessRuleConditionOperandOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPAPolicyAccessRuleConditionOperandOutput) IdpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) *string { return v.IdpId }).(pulumi.StringPtrOutput)
}

// (Optional) LHS must always carry the string value “id“ or the attribute ID of the resource being associated with the rule.
func (o ZPAPolicyAccessRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

// (Optional)
func (o ZPAPolicyAccessRuleConditionOperandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `SAML`, `IDP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `POSTURE`, `SCIM`, `SCIM_GROUP`, and `CLOUD_CONNECTOR_GROUP`. `TRUSTED_NETWORK`, and `CLIENT_TYPE`.
func (o ZPAPolicyAccessRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

// (Optional) RHS is either the ID attribute of a resource or fixed string value. Refer to the chart below for further details.
func (o ZPAPolicyAccessRuleConditionOperandOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessRuleConditionOperandOutput) RhsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessRuleConditionOperand) []string { return v.RhsLists }).(pulumi.StringArrayOutput)
}

type ZPAPolicyAccessRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleConditionOperandArrayOutput) ToZPAPolicyAccessRuleConditionOperandArrayOutput() ZPAPolicyAccessRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleConditionOperandArrayOutput) ToZPAPolicyAccessRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessRuleConditionOperand {
		return vs[0].([]ZPAPolicyAccessRuleConditionOperand)[vs[1].(int)]
	}).(ZPAPolicyAccessRuleConditionOperandOutput)
}

type ZPAPolicyAccessTimeOutRuleCondition struct {
	Id       *string                                      `pulumi:"id"`
	Negated  *bool                                        `pulumi:"negated"`
	Operands []ZPAPolicyAccessTimeOutRuleConditionOperand `pulumi:"operands"`
	Operator string                                       `pulumi:"operator"`
}

// ZPAPolicyAccessTimeOutRuleConditionInput is an input type that accepts ZPAPolicyAccessTimeOutRuleConditionArgs and ZPAPolicyAccessTimeOutRuleConditionOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessTimeOutRuleConditionInput` via:
//
//	ZPAPolicyAccessTimeOutRuleConditionArgs{...}
type ZPAPolicyAccessTimeOutRuleConditionInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeOutRuleConditionOutput() ZPAPolicyAccessTimeOutRuleConditionOutput
	ToZPAPolicyAccessTimeOutRuleConditionOutputWithContext(context.Context) ZPAPolicyAccessTimeOutRuleConditionOutput
}

type ZPAPolicyAccessTimeOutRuleConditionArgs struct {
	Id       pulumi.StringPtrInput                                `pulumi:"id"`
	Negated  pulumi.BoolPtrInput                                  `pulumi:"negated"`
	Operands ZPAPolicyAccessTimeOutRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator pulumi.StringInput                                   `pulumi:"operator"`
}

func (ZPAPolicyAccessTimeOutRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessTimeOutRuleConditionArgs) ToZPAPolicyAccessTimeOutRuleConditionOutput() ZPAPolicyAccessTimeOutRuleConditionOutput {
	return i.ToZPAPolicyAccessTimeOutRuleConditionOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessTimeOutRuleConditionArgs) ToZPAPolicyAccessTimeOutRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeOutRuleConditionOutput)
}

// ZPAPolicyAccessTimeOutRuleConditionArrayInput is an input type that accepts ZPAPolicyAccessTimeOutRuleConditionArray and ZPAPolicyAccessTimeOutRuleConditionArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessTimeOutRuleConditionArrayInput` via:
//
//	ZPAPolicyAccessTimeOutRuleConditionArray{ ZPAPolicyAccessTimeOutRuleConditionArgs{...} }
type ZPAPolicyAccessTimeOutRuleConditionArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeOutRuleConditionArrayOutput() ZPAPolicyAccessTimeOutRuleConditionArrayOutput
	ToZPAPolicyAccessTimeOutRuleConditionArrayOutputWithContext(context.Context) ZPAPolicyAccessTimeOutRuleConditionArrayOutput
}

type ZPAPolicyAccessTimeOutRuleConditionArray []ZPAPolicyAccessTimeOutRuleConditionInput

func (ZPAPolicyAccessTimeOutRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (i ZPAPolicyAccessTimeOutRuleConditionArray) ToZPAPolicyAccessTimeOutRuleConditionArrayOutput() ZPAPolicyAccessTimeOutRuleConditionArrayOutput {
	return i.ToZPAPolicyAccessTimeOutRuleConditionArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessTimeOutRuleConditionArray) ToZPAPolicyAccessTimeOutRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeOutRuleConditionArrayOutput)
}

type ZPAPolicyAccessTimeOutRuleConditionOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeOutRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeOutRuleConditionOutput) ToZPAPolicyAccessTimeOutRuleConditionOutput() ZPAPolicyAccessTimeOutRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionOutput) ToZPAPolicyAccessTimeOutRuleConditionOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleCondition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOutput) Operands() ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleCondition) []ZPAPolicyAccessTimeOutRuleConditionOperand {
		return v.Operands
	}).(ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type ZPAPolicyAccessTimeOutRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeOutRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeOutRuleConditionArrayOutput) ToZPAPolicyAccessTimeOutRuleConditionArrayOutput() ZPAPolicyAccessTimeOutRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionArrayOutput) ToZPAPolicyAccessTimeOutRuleConditionArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionArrayOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessTimeOutRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessTimeOutRuleCondition {
		return vs[0].([]ZPAPolicyAccessTimeOutRuleCondition)[vs[1].(int)]
	}).(ZPAPolicyAccessTimeOutRuleConditionOutput)
}

type ZPAPolicyAccessTimeOutRuleConditionOperand struct {
	Id         *string  `pulumi:"id"`
	IdpId      *string  `pulumi:"idpId"`
	Lhs        string   `pulumi:"lhs"`
	Name       *string  `pulumi:"name"`
	ObjectType string   `pulumi:"objectType"`
	Rhs        *string  `pulumi:"rhs"`
	RhsLists   []string `pulumi:"rhsLists"`
}

// ZPAPolicyAccessTimeOutRuleConditionOperandInput is an input type that accepts ZPAPolicyAccessTimeOutRuleConditionOperandArgs and ZPAPolicyAccessTimeOutRuleConditionOperandOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessTimeOutRuleConditionOperandInput` via:
//
//	ZPAPolicyAccessTimeOutRuleConditionOperandArgs{...}
type ZPAPolicyAccessTimeOutRuleConditionOperandInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeOutRuleConditionOperandOutput() ZPAPolicyAccessTimeOutRuleConditionOperandOutput
	ToZPAPolicyAccessTimeOutRuleConditionOperandOutputWithContext(context.Context) ZPAPolicyAccessTimeOutRuleConditionOperandOutput
}

type ZPAPolicyAccessTimeOutRuleConditionOperandArgs struct {
	Id         pulumi.StringPtrInput   `pulumi:"id"`
	IdpId      pulumi.StringPtrInput   `pulumi:"idpId"`
	Lhs        pulumi.StringInput      `pulumi:"lhs"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	ObjectType pulumi.StringInput      `pulumi:"objectType"`
	Rhs        pulumi.StringPtrInput   `pulumi:"rhs"`
	RhsLists   pulumi.StringArrayInput `pulumi:"rhsLists"`
}

func (ZPAPolicyAccessTimeOutRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessTimeOutRuleConditionOperandArgs) ToZPAPolicyAccessTimeOutRuleConditionOperandOutput() ZPAPolicyAccessTimeOutRuleConditionOperandOutput {
	return i.ToZPAPolicyAccessTimeOutRuleConditionOperandOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessTimeOutRuleConditionOperandArgs) ToZPAPolicyAccessTimeOutRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeOutRuleConditionOperandOutput)
}

// ZPAPolicyAccessTimeOutRuleConditionOperandArrayInput is an input type that accepts ZPAPolicyAccessTimeOutRuleConditionOperandArray and ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessTimeOutRuleConditionOperandArrayInput` via:
//
//	ZPAPolicyAccessTimeOutRuleConditionOperandArray{ ZPAPolicyAccessTimeOutRuleConditionOperandArgs{...} }
type ZPAPolicyAccessTimeOutRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput() ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput
	ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(context.Context) ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput
}

type ZPAPolicyAccessTimeOutRuleConditionOperandArray []ZPAPolicyAccessTimeOutRuleConditionOperandInput

func (ZPAPolicyAccessTimeOutRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (i ZPAPolicyAccessTimeOutRuleConditionOperandArray) ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput() ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return i.ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessTimeOutRuleConditionOperandArray) ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput)
}

type ZPAPolicyAccessTimeOutRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeOutRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) ToZPAPolicyAccessTimeOutRuleConditionOperandOutput() ZPAPolicyAccessTimeOutRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) ToZPAPolicyAccessTimeOutRuleConditionOperandOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionOperandOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) IdpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) *string { return v.IdpId }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandOutput) RhsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAPolicyAccessTimeOutRuleConditionOperand) []string { return v.RhsLists }).(pulumi.StringArrayOutput)
}

type ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAPolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput) ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput() ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput) ToZPAPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return o
}

func (o ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessTimeOutRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAPolicyAccessTimeOutRuleConditionOperand {
		return vs[0].([]ZPAPolicyAccessTimeOutRuleConditionOperand)[vs[1].(int)]
	}).(ZPAPolicyAccessTimeOutRuleConditionOperandOutput)
}

type ZPASegmentGroupApplication struct {
	Id *string `pulumi:"id"`
}

// ZPASegmentGroupApplicationInput is an input type that accepts ZPASegmentGroupApplicationArgs and ZPASegmentGroupApplicationOutput values.
// You can construct a concrete instance of `ZPASegmentGroupApplicationInput` via:
//
//	ZPASegmentGroupApplicationArgs{...}
type ZPASegmentGroupApplicationInput interface {
	pulumi.Input

	ToZPASegmentGroupApplicationOutput() ZPASegmentGroupApplicationOutput
	ToZPASegmentGroupApplicationOutputWithContext(context.Context) ZPASegmentGroupApplicationOutput
}

type ZPASegmentGroupApplicationArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ZPASegmentGroupApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPASegmentGroupApplication)(nil)).Elem()
}

func (i ZPASegmentGroupApplicationArgs) ToZPASegmentGroupApplicationOutput() ZPASegmentGroupApplicationOutput {
	return i.ToZPASegmentGroupApplicationOutputWithContext(context.Background())
}

func (i ZPASegmentGroupApplicationArgs) ToZPASegmentGroupApplicationOutputWithContext(ctx context.Context) ZPASegmentGroupApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPASegmentGroupApplicationOutput)
}

// ZPASegmentGroupApplicationArrayInput is an input type that accepts ZPASegmentGroupApplicationArray and ZPASegmentGroupApplicationArrayOutput values.
// You can construct a concrete instance of `ZPASegmentGroupApplicationArrayInput` via:
//
//	ZPASegmentGroupApplicationArray{ ZPASegmentGroupApplicationArgs{...} }
type ZPASegmentGroupApplicationArrayInput interface {
	pulumi.Input

	ToZPASegmentGroupApplicationArrayOutput() ZPASegmentGroupApplicationArrayOutput
	ToZPASegmentGroupApplicationArrayOutputWithContext(context.Context) ZPASegmentGroupApplicationArrayOutput
}

type ZPASegmentGroupApplicationArray []ZPASegmentGroupApplicationInput

func (ZPASegmentGroupApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPASegmentGroupApplication)(nil)).Elem()
}

func (i ZPASegmentGroupApplicationArray) ToZPASegmentGroupApplicationArrayOutput() ZPASegmentGroupApplicationArrayOutput {
	return i.ToZPASegmentGroupApplicationArrayOutputWithContext(context.Background())
}

func (i ZPASegmentGroupApplicationArray) ToZPASegmentGroupApplicationArrayOutputWithContext(ctx context.Context) ZPASegmentGroupApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPASegmentGroupApplicationArrayOutput)
}

type ZPASegmentGroupApplicationOutput struct{ *pulumi.OutputState }

func (ZPASegmentGroupApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPASegmentGroupApplication)(nil)).Elem()
}

func (o ZPASegmentGroupApplicationOutput) ToZPASegmentGroupApplicationOutput() ZPASegmentGroupApplicationOutput {
	return o
}

func (o ZPASegmentGroupApplicationOutput) ToZPASegmentGroupApplicationOutputWithContext(ctx context.Context) ZPASegmentGroupApplicationOutput {
	return o
}

func (o ZPASegmentGroupApplicationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZPASegmentGroupApplication) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ZPASegmentGroupApplicationArrayOutput struct{ *pulumi.OutputState }

func (ZPASegmentGroupApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPASegmentGroupApplication)(nil)).Elem()
}

func (o ZPASegmentGroupApplicationArrayOutput) ToZPASegmentGroupApplicationArrayOutput() ZPASegmentGroupApplicationArrayOutput {
	return o
}

func (o ZPASegmentGroupApplicationArrayOutput) ToZPASegmentGroupApplicationArrayOutputWithContext(ctx context.Context) ZPASegmentGroupApplicationArrayOutput {
	return o
}

func (o ZPASegmentGroupApplicationArrayOutput) Index(i pulumi.IntInput) ZPASegmentGroupApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPASegmentGroupApplication {
		return vs[0].([]ZPASegmentGroupApplication)[vs[1].(int)]
	}).(ZPASegmentGroupApplicationOutput)
}

type ZPAServerGroupAppConnectorGroup struct {
	Ids []string `pulumi:"ids"`
}

// ZPAServerGroupAppConnectorGroupInput is an input type that accepts ZPAServerGroupAppConnectorGroupArgs and ZPAServerGroupAppConnectorGroupOutput values.
// You can construct a concrete instance of `ZPAServerGroupAppConnectorGroupInput` via:
//
//	ZPAServerGroupAppConnectorGroupArgs{...}
type ZPAServerGroupAppConnectorGroupInput interface {
	pulumi.Input

	ToZPAServerGroupAppConnectorGroupOutput() ZPAServerGroupAppConnectorGroupOutput
	ToZPAServerGroupAppConnectorGroupOutputWithContext(context.Context) ZPAServerGroupAppConnectorGroupOutput
}

type ZPAServerGroupAppConnectorGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAServerGroupAppConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (i ZPAServerGroupAppConnectorGroupArgs) ToZPAServerGroupAppConnectorGroupOutput() ZPAServerGroupAppConnectorGroupOutput {
	return i.ToZPAServerGroupAppConnectorGroupOutputWithContext(context.Background())
}

func (i ZPAServerGroupAppConnectorGroupArgs) ToZPAServerGroupAppConnectorGroupOutputWithContext(ctx context.Context) ZPAServerGroupAppConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServerGroupAppConnectorGroupOutput)
}

// ZPAServerGroupAppConnectorGroupArrayInput is an input type that accepts ZPAServerGroupAppConnectorGroupArray and ZPAServerGroupAppConnectorGroupArrayOutput values.
// You can construct a concrete instance of `ZPAServerGroupAppConnectorGroupArrayInput` via:
//
//	ZPAServerGroupAppConnectorGroupArray{ ZPAServerGroupAppConnectorGroupArgs{...} }
type ZPAServerGroupAppConnectorGroupArrayInput interface {
	pulumi.Input

	ToZPAServerGroupAppConnectorGroupArrayOutput() ZPAServerGroupAppConnectorGroupArrayOutput
	ToZPAServerGroupAppConnectorGroupArrayOutputWithContext(context.Context) ZPAServerGroupAppConnectorGroupArrayOutput
}

type ZPAServerGroupAppConnectorGroupArray []ZPAServerGroupAppConnectorGroupInput

func (ZPAServerGroupAppConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (i ZPAServerGroupAppConnectorGroupArray) ToZPAServerGroupAppConnectorGroupArrayOutput() ZPAServerGroupAppConnectorGroupArrayOutput {
	return i.ToZPAServerGroupAppConnectorGroupArrayOutputWithContext(context.Background())
}

func (i ZPAServerGroupAppConnectorGroupArray) ToZPAServerGroupAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAServerGroupAppConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServerGroupAppConnectorGroupArrayOutput)
}

type ZPAServerGroupAppConnectorGroupOutput struct{ *pulumi.OutputState }

func (ZPAServerGroupAppConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (o ZPAServerGroupAppConnectorGroupOutput) ToZPAServerGroupAppConnectorGroupOutput() ZPAServerGroupAppConnectorGroupOutput {
	return o
}

func (o ZPAServerGroupAppConnectorGroupOutput) ToZPAServerGroupAppConnectorGroupOutputWithContext(ctx context.Context) ZPAServerGroupAppConnectorGroupOutput {
	return o
}

func (o ZPAServerGroupAppConnectorGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAServerGroupAppConnectorGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAServerGroupAppConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAServerGroupAppConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (o ZPAServerGroupAppConnectorGroupArrayOutput) ToZPAServerGroupAppConnectorGroupArrayOutput() ZPAServerGroupAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAServerGroupAppConnectorGroupArrayOutput) ToZPAServerGroupAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAServerGroupAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAServerGroupAppConnectorGroupArrayOutput) Index(i pulumi.IntInput) ZPAServerGroupAppConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAServerGroupAppConnectorGroup {
		return vs[0].([]ZPAServerGroupAppConnectorGroup)[vs[1].(int)]
	}).(ZPAServerGroupAppConnectorGroupOutput)
}

type ZPAServerGroupApplication struct {
	Ids []string `pulumi:"ids"`
}

// ZPAServerGroupApplicationInput is an input type that accepts ZPAServerGroupApplicationArgs and ZPAServerGroupApplicationOutput values.
// You can construct a concrete instance of `ZPAServerGroupApplicationInput` via:
//
//	ZPAServerGroupApplicationArgs{...}
type ZPAServerGroupApplicationInput interface {
	pulumi.Input

	ToZPAServerGroupApplicationOutput() ZPAServerGroupApplicationOutput
	ToZPAServerGroupApplicationOutputWithContext(context.Context) ZPAServerGroupApplicationOutput
}

type ZPAServerGroupApplicationArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAServerGroupApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServerGroupApplication)(nil)).Elem()
}

func (i ZPAServerGroupApplicationArgs) ToZPAServerGroupApplicationOutput() ZPAServerGroupApplicationOutput {
	return i.ToZPAServerGroupApplicationOutputWithContext(context.Background())
}

func (i ZPAServerGroupApplicationArgs) ToZPAServerGroupApplicationOutputWithContext(ctx context.Context) ZPAServerGroupApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServerGroupApplicationOutput)
}

// ZPAServerGroupApplicationArrayInput is an input type that accepts ZPAServerGroupApplicationArray and ZPAServerGroupApplicationArrayOutput values.
// You can construct a concrete instance of `ZPAServerGroupApplicationArrayInput` via:
//
//	ZPAServerGroupApplicationArray{ ZPAServerGroupApplicationArgs{...} }
type ZPAServerGroupApplicationArrayInput interface {
	pulumi.Input

	ToZPAServerGroupApplicationArrayOutput() ZPAServerGroupApplicationArrayOutput
	ToZPAServerGroupApplicationArrayOutputWithContext(context.Context) ZPAServerGroupApplicationArrayOutput
}

type ZPAServerGroupApplicationArray []ZPAServerGroupApplicationInput

func (ZPAServerGroupApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServerGroupApplication)(nil)).Elem()
}

func (i ZPAServerGroupApplicationArray) ToZPAServerGroupApplicationArrayOutput() ZPAServerGroupApplicationArrayOutput {
	return i.ToZPAServerGroupApplicationArrayOutputWithContext(context.Background())
}

func (i ZPAServerGroupApplicationArray) ToZPAServerGroupApplicationArrayOutputWithContext(ctx context.Context) ZPAServerGroupApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServerGroupApplicationArrayOutput)
}

type ZPAServerGroupApplicationOutput struct{ *pulumi.OutputState }

func (ZPAServerGroupApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServerGroupApplication)(nil)).Elem()
}

func (o ZPAServerGroupApplicationOutput) ToZPAServerGroupApplicationOutput() ZPAServerGroupApplicationOutput {
	return o
}

func (o ZPAServerGroupApplicationOutput) ToZPAServerGroupApplicationOutputWithContext(ctx context.Context) ZPAServerGroupApplicationOutput {
	return o
}

func (o ZPAServerGroupApplicationOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAServerGroupApplication) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAServerGroupApplicationArrayOutput struct{ *pulumi.OutputState }

func (ZPAServerGroupApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServerGroupApplication)(nil)).Elem()
}

func (o ZPAServerGroupApplicationArrayOutput) ToZPAServerGroupApplicationArrayOutput() ZPAServerGroupApplicationArrayOutput {
	return o
}

func (o ZPAServerGroupApplicationArrayOutput) ToZPAServerGroupApplicationArrayOutputWithContext(ctx context.Context) ZPAServerGroupApplicationArrayOutput {
	return o
}

func (o ZPAServerGroupApplicationArrayOutput) Index(i pulumi.IntInput) ZPAServerGroupApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAServerGroupApplication {
		return vs[0].([]ZPAServerGroupApplication)[vs[1].(int)]
	}).(ZPAServerGroupApplicationOutput)
}

type ZPAServerGroupServer struct {
	Ids []string `pulumi:"ids"`
}

// ZPAServerGroupServerInput is an input type that accepts ZPAServerGroupServerArgs and ZPAServerGroupServerOutput values.
// You can construct a concrete instance of `ZPAServerGroupServerInput` via:
//
//	ZPAServerGroupServerArgs{...}
type ZPAServerGroupServerInput interface {
	pulumi.Input

	ToZPAServerGroupServerOutput() ZPAServerGroupServerOutput
	ToZPAServerGroupServerOutputWithContext(context.Context) ZPAServerGroupServerOutput
}

type ZPAServerGroupServerArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServerGroupServer)(nil)).Elem()
}

func (i ZPAServerGroupServerArgs) ToZPAServerGroupServerOutput() ZPAServerGroupServerOutput {
	return i.ToZPAServerGroupServerOutputWithContext(context.Background())
}

func (i ZPAServerGroupServerArgs) ToZPAServerGroupServerOutputWithContext(ctx context.Context) ZPAServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServerGroupServerOutput)
}

// ZPAServerGroupServerArrayInput is an input type that accepts ZPAServerGroupServerArray and ZPAServerGroupServerArrayOutput values.
// You can construct a concrete instance of `ZPAServerGroupServerArrayInput` via:
//
//	ZPAServerGroupServerArray{ ZPAServerGroupServerArgs{...} }
type ZPAServerGroupServerArrayInput interface {
	pulumi.Input

	ToZPAServerGroupServerArrayOutput() ZPAServerGroupServerArrayOutput
	ToZPAServerGroupServerArrayOutputWithContext(context.Context) ZPAServerGroupServerArrayOutput
}

type ZPAServerGroupServerArray []ZPAServerGroupServerInput

func (ZPAServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServerGroupServer)(nil)).Elem()
}

func (i ZPAServerGroupServerArray) ToZPAServerGroupServerArrayOutput() ZPAServerGroupServerArrayOutput {
	return i.ToZPAServerGroupServerArrayOutputWithContext(context.Background())
}

func (i ZPAServerGroupServerArray) ToZPAServerGroupServerArrayOutputWithContext(ctx context.Context) ZPAServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServerGroupServerArrayOutput)
}

type ZPAServerGroupServerOutput struct{ *pulumi.OutputState }

func (ZPAServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServerGroupServer)(nil)).Elem()
}

func (o ZPAServerGroupServerOutput) ToZPAServerGroupServerOutput() ZPAServerGroupServerOutput {
	return o
}

func (o ZPAServerGroupServerOutput) ToZPAServerGroupServerOutputWithContext(ctx context.Context) ZPAServerGroupServerOutput {
	return o
}

func (o ZPAServerGroupServerOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAServerGroupServer) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (ZPAServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServerGroupServer)(nil)).Elem()
}

func (o ZPAServerGroupServerArrayOutput) ToZPAServerGroupServerArrayOutput() ZPAServerGroupServerArrayOutput {
	return o
}

func (o ZPAServerGroupServerArrayOutput) ToZPAServerGroupServerArrayOutputWithContext(ctx context.Context) ZPAServerGroupServerArrayOutput {
	return o
}

func (o ZPAServerGroupServerArrayOutput) Index(i pulumi.IntInput) ZPAServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAServerGroupServer {
		return vs[0].([]ZPAServerGroupServer)[vs[1].(int)]
	}).(ZPAServerGroupServerOutput)
}

type ZPAServiceEdgeGroupServiceEdge struct {
	Ids []string `pulumi:"ids"`
}

// ZPAServiceEdgeGroupServiceEdgeInput is an input type that accepts ZPAServiceEdgeGroupServiceEdgeArgs and ZPAServiceEdgeGroupServiceEdgeOutput values.
// You can construct a concrete instance of `ZPAServiceEdgeGroupServiceEdgeInput` via:
//
//	ZPAServiceEdgeGroupServiceEdgeArgs{...}
type ZPAServiceEdgeGroupServiceEdgeInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupServiceEdgeOutput() ZPAServiceEdgeGroupServiceEdgeOutput
	ToZPAServiceEdgeGroupServiceEdgeOutputWithContext(context.Context) ZPAServiceEdgeGroupServiceEdgeOutput
}

type ZPAServiceEdgeGroupServiceEdgeArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAServiceEdgeGroupServiceEdgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (i ZPAServiceEdgeGroupServiceEdgeArgs) ToZPAServiceEdgeGroupServiceEdgeOutput() ZPAServiceEdgeGroupServiceEdgeOutput {
	return i.ToZPAServiceEdgeGroupServiceEdgeOutputWithContext(context.Background())
}

func (i ZPAServiceEdgeGroupServiceEdgeArgs) ToZPAServiceEdgeGroupServiceEdgeOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupServiceEdgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupServiceEdgeOutput)
}

// ZPAServiceEdgeGroupServiceEdgeArrayInput is an input type that accepts ZPAServiceEdgeGroupServiceEdgeArray and ZPAServiceEdgeGroupServiceEdgeArrayOutput values.
// You can construct a concrete instance of `ZPAServiceEdgeGroupServiceEdgeArrayInput` via:
//
//	ZPAServiceEdgeGroupServiceEdgeArray{ ZPAServiceEdgeGroupServiceEdgeArgs{...} }
type ZPAServiceEdgeGroupServiceEdgeArrayInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupServiceEdgeArrayOutput() ZPAServiceEdgeGroupServiceEdgeArrayOutput
	ToZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(context.Context) ZPAServiceEdgeGroupServiceEdgeArrayOutput
}

type ZPAServiceEdgeGroupServiceEdgeArray []ZPAServiceEdgeGroupServiceEdgeInput

func (ZPAServiceEdgeGroupServiceEdgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (i ZPAServiceEdgeGroupServiceEdgeArray) ToZPAServiceEdgeGroupServiceEdgeArrayOutput() ZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return i.ToZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(context.Background())
}

func (i ZPAServiceEdgeGroupServiceEdgeArray) ToZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupServiceEdgeArrayOutput)
}

type ZPAServiceEdgeGroupServiceEdgeOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupServiceEdgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupServiceEdgeOutput) ToZPAServiceEdgeGroupServiceEdgeOutput() ZPAServiceEdgeGroupServiceEdgeOutput {
	return o
}

func (o ZPAServiceEdgeGroupServiceEdgeOutput) ToZPAServiceEdgeGroupServiceEdgeOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupServiceEdgeOutput {
	return o
}

func (o ZPAServiceEdgeGroupServiceEdgeOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAServiceEdgeGroupServiceEdge) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAServiceEdgeGroupServiceEdgeArrayOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupServiceEdgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupServiceEdgeArrayOutput) ToZPAServiceEdgeGroupServiceEdgeArrayOutput() ZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return o
}

func (o ZPAServiceEdgeGroupServiceEdgeArrayOutput) ToZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return o
}

func (o ZPAServiceEdgeGroupServiceEdgeArrayOutput) Index(i pulumi.IntInput) ZPAServiceEdgeGroupServiceEdgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAServiceEdgeGroupServiceEdge {
		return vs[0].([]ZPAServiceEdgeGroupServiceEdge)[vs[1].(int)]
	}).(ZPAServiceEdgeGroupServiceEdgeOutput)
}

type ZPAServiceEdgeGroupTrustedNetwork struct {
	Ids []string `pulumi:"ids"`
}

// ZPAServiceEdgeGroupTrustedNetworkInput is an input type that accepts ZPAServiceEdgeGroupTrustedNetworkArgs and ZPAServiceEdgeGroupTrustedNetworkOutput values.
// You can construct a concrete instance of `ZPAServiceEdgeGroupTrustedNetworkInput` via:
//
//	ZPAServiceEdgeGroupTrustedNetworkArgs{...}
type ZPAServiceEdgeGroupTrustedNetworkInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupTrustedNetworkOutput() ZPAServiceEdgeGroupTrustedNetworkOutput
	ToZPAServiceEdgeGroupTrustedNetworkOutputWithContext(context.Context) ZPAServiceEdgeGroupTrustedNetworkOutput
}

type ZPAServiceEdgeGroupTrustedNetworkArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (ZPAServiceEdgeGroupTrustedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (i ZPAServiceEdgeGroupTrustedNetworkArgs) ToZPAServiceEdgeGroupTrustedNetworkOutput() ZPAServiceEdgeGroupTrustedNetworkOutput {
	return i.ToZPAServiceEdgeGroupTrustedNetworkOutputWithContext(context.Background())
}

func (i ZPAServiceEdgeGroupTrustedNetworkArgs) ToZPAServiceEdgeGroupTrustedNetworkOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupTrustedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupTrustedNetworkOutput)
}

// ZPAServiceEdgeGroupTrustedNetworkArrayInput is an input type that accepts ZPAServiceEdgeGroupTrustedNetworkArray and ZPAServiceEdgeGroupTrustedNetworkArrayOutput values.
// You can construct a concrete instance of `ZPAServiceEdgeGroupTrustedNetworkArrayInput` via:
//
//	ZPAServiceEdgeGroupTrustedNetworkArray{ ZPAServiceEdgeGroupTrustedNetworkArgs{...} }
type ZPAServiceEdgeGroupTrustedNetworkArrayInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupTrustedNetworkArrayOutput() ZPAServiceEdgeGroupTrustedNetworkArrayOutput
	ToZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(context.Context) ZPAServiceEdgeGroupTrustedNetworkArrayOutput
}

type ZPAServiceEdgeGroupTrustedNetworkArray []ZPAServiceEdgeGroupTrustedNetworkInput

func (ZPAServiceEdgeGroupTrustedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (i ZPAServiceEdgeGroupTrustedNetworkArray) ToZPAServiceEdgeGroupTrustedNetworkArrayOutput() ZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return i.ToZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(context.Background())
}

func (i ZPAServiceEdgeGroupTrustedNetworkArray) ToZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupTrustedNetworkArrayOutput)
}

type ZPAServiceEdgeGroupTrustedNetworkOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupTrustedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupTrustedNetworkOutput) ToZPAServiceEdgeGroupTrustedNetworkOutput() ZPAServiceEdgeGroupTrustedNetworkOutput {
	return o
}

func (o ZPAServiceEdgeGroupTrustedNetworkOutput) ToZPAServiceEdgeGroupTrustedNetworkOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupTrustedNetworkOutput {
	return o
}

func (o ZPAServiceEdgeGroupTrustedNetworkOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZPAServiceEdgeGroupTrustedNetwork) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type ZPAServiceEdgeGroupTrustedNetworkArrayOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupTrustedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupTrustedNetworkArrayOutput) ToZPAServiceEdgeGroupTrustedNetworkArrayOutput() ZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return o
}

func (o ZPAServiceEdgeGroupTrustedNetworkArrayOutput) ToZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return o
}

func (o ZPAServiceEdgeGroupTrustedNetworkArrayOutput) Index(i pulumi.IntInput) ZPAServiceEdgeGroupTrustedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZPAServiceEdgeGroupTrustedNetwork {
		return vs[0].([]ZPAServiceEdgeGroupTrustedNetwork)[vs[1].(int)]
	}).(ZPAServiceEdgeGroupTrustedNetworkOutput)
}

type GetZPAAppConnectorGroupConnector struct {
	AppconnectorGroupId   string `pulumi:"appconnectorGroupId"`
	AppconnectorGroupName string `pulumi:"appconnectorGroupName"`
	ApplicationStartTime  string `pulumi:"applicationStartTime"`
	ControlChannelStatus  string `pulumi:"controlChannelStatus"`
	CreationTime          string `pulumi:"creationTime"`
	CtrlBrokerName        string `pulumi:"ctrlBrokerName"`
	CurrentVersion        string `pulumi:"currentVersion"`
	// (String) Description of the App Connector Group.
	Description string `pulumi:"description"`
	// (String) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled             bool                   `pulumi:"enabled"`
	EnrollmentCert      map[string]interface{} `pulumi:"enrollmentCert"`
	ExpectedUpgradeTime string                 `pulumi:"expectedUpgradeTime"`
	ExpectedVersion     string                 `pulumi:"expectedVersion"`
	Fingerprint         string                 `pulumi:"fingerprint"`
	// ID of the App Connector Group.
	Id                               string `pulumi:"id"`
	Ipacl                            string `pulumi:"ipacl"`
	IssuedCertId                     string `pulumi:"issuedCertId"`
	LastBrokerConnectTime            string `pulumi:"lastBrokerConnectTime"`
	LastBrokerConnectTimeDuration    string `pulumi:"lastBrokerConnectTimeDuration"`
	LastBrokerDisconnectTime         string `pulumi:"lastBrokerDisconnectTime"`
	LastBrokerDisconnectTimeDuration string `pulumi:"lastBrokerDisconnectTimeDuration"`
	LastUpgradeTime                  string `pulumi:"lastUpgradeTime"`
	// (String) Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude string `pulumi:"latitude"`
	// (String) Location of the App Connector Group.
	Location string `pulumi:"location"`
	// (String) Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude    string `pulumi:"longitude"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// Name of the App Connector Group.
	Name                string `pulumi:"name"`
	Platform            string `pulumi:"platform"`
	PreviousVersion     string `pulumi:"previousVersion"`
	PrivateIp           string `pulumi:"privateIp"`
	ProvisioningKeyId   string `pulumi:"provisioningKeyId"`
	ProvisioningKeyName string `pulumi:"provisioningKeyName"`
	PublicIp            string `pulumi:"publicIp"`
	SargeVersion        string `pulumi:"sargeVersion"`
	UpgradeAttempt      string `pulumi:"upgradeAttempt"`
	UpgradeStatus       string `pulumi:"upgradeStatus"`
}

// GetZPAAppConnectorGroupConnectorInput is an input type that accepts GetZPAAppConnectorGroupConnectorArgs and GetZPAAppConnectorGroupConnectorOutput values.
// You can construct a concrete instance of `GetZPAAppConnectorGroupConnectorInput` via:
//
//	GetZPAAppConnectorGroupConnectorArgs{...}
type GetZPAAppConnectorGroupConnectorInput interface {
	pulumi.Input

	ToGetZPAAppConnectorGroupConnectorOutput() GetZPAAppConnectorGroupConnectorOutput
	ToGetZPAAppConnectorGroupConnectorOutputWithContext(context.Context) GetZPAAppConnectorGroupConnectorOutput
}

type GetZPAAppConnectorGroupConnectorArgs struct {
	AppconnectorGroupId   pulumi.StringInput `pulumi:"appconnectorGroupId"`
	AppconnectorGroupName pulumi.StringInput `pulumi:"appconnectorGroupName"`
	ApplicationStartTime  pulumi.StringInput `pulumi:"applicationStartTime"`
	ControlChannelStatus  pulumi.StringInput `pulumi:"controlChannelStatus"`
	CreationTime          pulumi.StringInput `pulumi:"creationTime"`
	CtrlBrokerName        pulumi.StringInput `pulumi:"ctrlBrokerName"`
	CurrentVersion        pulumi.StringInput `pulumi:"currentVersion"`
	// (String) Description of the App Connector Group.
	Description pulumi.StringInput `pulumi:"description"`
	// (String) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled             pulumi.BoolInput   `pulumi:"enabled"`
	EnrollmentCert      pulumi.MapInput    `pulumi:"enrollmentCert"`
	ExpectedUpgradeTime pulumi.StringInput `pulumi:"expectedUpgradeTime"`
	ExpectedVersion     pulumi.StringInput `pulumi:"expectedVersion"`
	Fingerprint         pulumi.StringInput `pulumi:"fingerprint"`
	// ID of the App Connector Group.
	Id                               pulumi.StringInput `pulumi:"id"`
	Ipacl                            pulumi.StringInput `pulumi:"ipacl"`
	IssuedCertId                     pulumi.StringInput `pulumi:"issuedCertId"`
	LastBrokerConnectTime            pulumi.StringInput `pulumi:"lastBrokerConnectTime"`
	LastBrokerConnectTimeDuration    pulumi.StringInput `pulumi:"lastBrokerConnectTimeDuration"`
	LastBrokerDisconnectTime         pulumi.StringInput `pulumi:"lastBrokerDisconnectTime"`
	LastBrokerDisconnectTimeDuration pulumi.StringInput `pulumi:"lastBrokerDisconnectTimeDuration"`
	LastUpgradeTime                  pulumi.StringInput `pulumi:"lastUpgradeTime"`
	// (String) Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude pulumi.StringInput `pulumi:"latitude"`
	// (String) Location of the App Connector Group.
	Location pulumi.StringInput `pulumi:"location"`
	// (String) Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude    pulumi.StringInput `pulumi:"longitude"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// Name of the App Connector Group.
	Name                pulumi.StringInput `pulumi:"name"`
	Platform            pulumi.StringInput `pulumi:"platform"`
	PreviousVersion     pulumi.StringInput `pulumi:"previousVersion"`
	PrivateIp           pulumi.StringInput `pulumi:"privateIp"`
	ProvisioningKeyId   pulumi.StringInput `pulumi:"provisioningKeyId"`
	ProvisioningKeyName pulumi.StringInput `pulumi:"provisioningKeyName"`
	PublicIp            pulumi.StringInput `pulumi:"publicIp"`
	SargeVersion        pulumi.StringInput `pulumi:"sargeVersion"`
	UpgradeAttempt      pulumi.StringInput `pulumi:"upgradeAttempt"`
	UpgradeStatus       pulumi.StringInput `pulumi:"upgradeStatus"`
}

func (GetZPAAppConnectorGroupConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAAppConnectorGroupConnector)(nil)).Elem()
}

func (i GetZPAAppConnectorGroupConnectorArgs) ToGetZPAAppConnectorGroupConnectorOutput() GetZPAAppConnectorGroupConnectorOutput {
	return i.ToGetZPAAppConnectorGroupConnectorOutputWithContext(context.Background())
}

func (i GetZPAAppConnectorGroupConnectorArgs) ToGetZPAAppConnectorGroupConnectorOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAAppConnectorGroupConnectorOutput)
}

// GetZPAAppConnectorGroupConnectorArrayInput is an input type that accepts GetZPAAppConnectorGroupConnectorArray and GetZPAAppConnectorGroupConnectorArrayOutput values.
// You can construct a concrete instance of `GetZPAAppConnectorGroupConnectorArrayInput` via:
//
//	GetZPAAppConnectorGroupConnectorArray{ GetZPAAppConnectorGroupConnectorArgs{...} }
type GetZPAAppConnectorGroupConnectorArrayInput interface {
	pulumi.Input

	ToGetZPAAppConnectorGroupConnectorArrayOutput() GetZPAAppConnectorGroupConnectorArrayOutput
	ToGetZPAAppConnectorGroupConnectorArrayOutputWithContext(context.Context) GetZPAAppConnectorGroupConnectorArrayOutput
}

type GetZPAAppConnectorGroupConnectorArray []GetZPAAppConnectorGroupConnectorInput

func (GetZPAAppConnectorGroupConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAAppConnectorGroupConnector)(nil)).Elem()
}

func (i GetZPAAppConnectorGroupConnectorArray) ToGetZPAAppConnectorGroupConnectorArrayOutput() GetZPAAppConnectorGroupConnectorArrayOutput {
	return i.ToGetZPAAppConnectorGroupConnectorArrayOutputWithContext(context.Background())
}

func (i GetZPAAppConnectorGroupConnectorArray) ToGetZPAAppConnectorGroupConnectorArrayOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAAppConnectorGroupConnectorArrayOutput)
}

type GetZPAAppConnectorGroupConnectorOutput struct{ *pulumi.OutputState }

func (GetZPAAppConnectorGroupConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAAppConnectorGroupConnector)(nil)).Elem()
}

func (o GetZPAAppConnectorGroupConnectorOutput) ToGetZPAAppConnectorGroupConnectorOutput() GetZPAAppConnectorGroupConnectorOutput {
	return o
}

func (o GetZPAAppConnectorGroupConnectorOutput) ToGetZPAAppConnectorGroupConnectorOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupConnectorOutput {
	return o
}

func (o GetZPAAppConnectorGroupConnectorOutput) AppconnectorGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.AppconnectorGroupId }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) AppconnectorGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.AppconnectorGroupName }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ApplicationStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ApplicationStartTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ControlChannelStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ControlChannelStatus }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) CtrlBrokerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.CtrlBrokerName }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// (String) Description of the App Connector Group.
func (o GetZPAAppConnectorGroupConnectorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Description }).(pulumi.StringOutput)
}

// (String) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
func (o GetZPAAppConnectorGroupConnectorOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) EnrollmentCert() pulumi.MapOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) map[string]interface{} { return v.EnrollmentCert }).(pulumi.MapOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ExpectedUpgradeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ExpectedUpgradeTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ExpectedVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ExpectedVersion }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// ID of the App Connector Group.
func (o GetZPAAppConnectorGroupConnectorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) Ipacl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Ipacl }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) IssuedCertId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.IssuedCertId }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) LastBrokerConnectTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.LastBrokerConnectTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) LastBrokerConnectTimeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.LastBrokerConnectTimeDuration }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) LastBrokerDisconnectTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.LastBrokerDisconnectTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) LastBrokerDisconnectTimeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.LastBrokerDisconnectTimeDuration }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) LastUpgradeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.LastUpgradeTime }).(pulumi.StringOutput)
}

// (String) Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
func (o GetZPAAppConnectorGroupConnectorOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Latitude }).(pulumi.StringOutput)
}

// (String) Location of the App Connector Group.
func (o GetZPAAppConnectorGroupConnectorOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Location }).(pulumi.StringOutput)
}

// (String) Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
func (o GetZPAAppConnectorGroupConnectorOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Longitude }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// Name of the App Connector Group.
func (o GetZPAAppConnectorGroupConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.Platform }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) PreviousVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.PreviousVersion }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ProvisioningKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ProvisioningKeyId }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) ProvisioningKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.ProvisioningKeyName }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) SargeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.SargeVersion }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) UpgradeAttempt() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.UpgradeAttempt }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupConnectorOutput) UpgradeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupConnector) string { return v.UpgradeStatus }).(pulumi.StringOutput)
}

type GetZPAAppConnectorGroupConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetZPAAppConnectorGroupConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAAppConnectorGroupConnector)(nil)).Elem()
}

func (o GetZPAAppConnectorGroupConnectorArrayOutput) ToGetZPAAppConnectorGroupConnectorArrayOutput() GetZPAAppConnectorGroupConnectorArrayOutput {
	return o
}

func (o GetZPAAppConnectorGroupConnectorArrayOutput) ToGetZPAAppConnectorGroupConnectorArrayOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupConnectorArrayOutput {
	return o
}

func (o GetZPAAppConnectorGroupConnectorArrayOutput) Index(i pulumi.IntInput) GetZPAAppConnectorGroupConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAAppConnectorGroupConnector {
		return vs[0].([]GetZPAAppConnectorGroupConnector)[vs[1].(int)]
	}).(GetZPAAppConnectorGroupConnectorOutput)
}

type GetZPAAppConnectorGroupServerGroup struct {
	ConfigSpace  string `pulumi:"configSpace"`
	CreationTime string `pulumi:"creationTime"`
	// (String) Description of the App Connector Group.
	Description      string `pulumi:"description"`
	DynamicDiscovery bool   `pulumi:"dynamicDiscovery"`
	// (String) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled bool `pulumi:"enabled"`
	// ID of the App Connector Group.
	Id           string `pulumi:"id"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// Name of the App Connector Group.
	Name string `pulumi:"name"`
}

// GetZPAAppConnectorGroupServerGroupInput is an input type that accepts GetZPAAppConnectorGroupServerGroupArgs and GetZPAAppConnectorGroupServerGroupOutput values.
// You can construct a concrete instance of `GetZPAAppConnectorGroupServerGroupInput` via:
//
//	GetZPAAppConnectorGroupServerGroupArgs{...}
type GetZPAAppConnectorGroupServerGroupInput interface {
	pulumi.Input

	ToGetZPAAppConnectorGroupServerGroupOutput() GetZPAAppConnectorGroupServerGroupOutput
	ToGetZPAAppConnectorGroupServerGroupOutputWithContext(context.Context) GetZPAAppConnectorGroupServerGroupOutput
}

type GetZPAAppConnectorGroupServerGroupArgs struct {
	ConfigSpace  pulumi.StringInput `pulumi:"configSpace"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (String) Description of the App Connector Group.
	Description      pulumi.StringInput `pulumi:"description"`
	DynamicDiscovery pulumi.BoolInput   `pulumi:"dynamicDiscovery"`
	// (String) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// ID of the App Connector Group.
	Id           pulumi.StringInput `pulumi:"id"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// Name of the App Connector Group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAAppConnectorGroupServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAAppConnectorGroupServerGroup)(nil)).Elem()
}

func (i GetZPAAppConnectorGroupServerGroupArgs) ToGetZPAAppConnectorGroupServerGroupOutput() GetZPAAppConnectorGroupServerGroupOutput {
	return i.ToGetZPAAppConnectorGroupServerGroupOutputWithContext(context.Background())
}

func (i GetZPAAppConnectorGroupServerGroupArgs) ToGetZPAAppConnectorGroupServerGroupOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAAppConnectorGroupServerGroupOutput)
}

// GetZPAAppConnectorGroupServerGroupArrayInput is an input type that accepts GetZPAAppConnectorGroupServerGroupArray and GetZPAAppConnectorGroupServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAAppConnectorGroupServerGroupArrayInput` via:
//
//	GetZPAAppConnectorGroupServerGroupArray{ GetZPAAppConnectorGroupServerGroupArgs{...} }
type GetZPAAppConnectorGroupServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPAAppConnectorGroupServerGroupArrayOutput() GetZPAAppConnectorGroupServerGroupArrayOutput
	ToGetZPAAppConnectorGroupServerGroupArrayOutputWithContext(context.Context) GetZPAAppConnectorGroupServerGroupArrayOutput
}

type GetZPAAppConnectorGroupServerGroupArray []GetZPAAppConnectorGroupServerGroupInput

func (GetZPAAppConnectorGroupServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAAppConnectorGroupServerGroup)(nil)).Elem()
}

func (i GetZPAAppConnectorGroupServerGroupArray) ToGetZPAAppConnectorGroupServerGroupArrayOutput() GetZPAAppConnectorGroupServerGroupArrayOutput {
	return i.ToGetZPAAppConnectorGroupServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAAppConnectorGroupServerGroupArray) ToGetZPAAppConnectorGroupServerGroupArrayOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAAppConnectorGroupServerGroupArrayOutput)
}

type GetZPAAppConnectorGroupServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPAAppConnectorGroupServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAAppConnectorGroupServerGroup)(nil)).Elem()
}

func (o GetZPAAppConnectorGroupServerGroupOutput) ToGetZPAAppConnectorGroupServerGroupOutput() GetZPAAppConnectorGroupServerGroupOutput {
	return o
}

func (o GetZPAAppConnectorGroupServerGroupOutput) ToGetZPAAppConnectorGroupServerGroupOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupServerGroupOutput {
	return o
}

func (o GetZPAAppConnectorGroupServerGroupOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupServerGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (String) Description of the App Connector Group.
func (o GetZPAAppConnectorGroupServerGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupServerGroupOutput) DynamicDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) bool { return v.DynamicDiscovery }).(pulumi.BoolOutput)
}

// (String) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
func (o GetZPAAppConnectorGroupServerGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// ID of the App Connector Group.
func (o GetZPAAppConnectorGroupServerGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupServerGroupOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAAppConnectorGroupServerGroupOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// Name of the App Connector Group.
func (o GetZPAAppConnectorGroupServerGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAAppConnectorGroupServerGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAAppConnectorGroupServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAAppConnectorGroupServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAAppConnectorGroupServerGroup)(nil)).Elem()
}

func (o GetZPAAppConnectorGroupServerGroupArrayOutput) ToGetZPAAppConnectorGroupServerGroupArrayOutput() GetZPAAppConnectorGroupServerGroupArrayOutput {
	return o
}

func (o GetZPAAppConnectorGroupServerGroupArrayOutput) ToGetZPAAppConnectorGroupServerGroupArrayOutputWithContext(ctx context.Context) GetZPAAppConnectorGroupServerGroupArrayOutput {
	return o
}

func (o GetZPAAppConnectorGroupServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPAAppConnectorGroupServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAAppConnectorGroupServerGroup {
		return vs[0].([]GetZPAAppConnectorGroupServerGroup)[vs[1].(int)]
	}).(GetZPAAppConnectorGroupServerGroupOutput)
}

type GetZPAApplicationSegmentBrowserAccessClientlessApp struct {
	// (bool)
	AllowOptions bool   `pulumi:"allowOptions"`
	AppId        string `pulumi:"appId"`
	// (string)
	ApplicationPort string `pulumi:"applicationPort"`
	// (string)
	ApplicationProtocol string `pulumi:"applicationProtocol"`
	// (string)
	CertificateId string `pulumi:"certificateId"`
	// (string)
	CertificateName string `pulumi:"certificateName"`
	// (string)
	Cname string `pulumi:"cname"`
	// (string)
	Description string `pulumi:"description"`
	// (string)
	Domain string `pulumi:"domain"`
	// (bool)
	Enabled bool `pulumi:"enabled"`
	// (bool)
	Hidden bool `pulumi:"hidden"`
	// This field defines the id of the application server.
	Id string `pulumi:"id"`
	// (string)
	LocalDomain string `pulumi:"localDomain"`
	// This field defines the name of the server.
	Name string `pulumi:"name"`
	// (string)
	Path string `pulumi:"path"`
	// (bool)
	TrustUntrustedCert bool `pulumi:"trustUntrustedCert"`
}

// GetZPAApplicationSegmentBrowserAccessClientlessAppInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessClientlessAppArgs and GetZPAApplicationSegmentBrowserAccessClientlessAppOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessClientlessAppInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessClientlessAppArgs{...}
type GetZPAApplicationSegmentBrowserAccessClientlessAppInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutput() GetZPAApplicationSegmentBrowserAccessClientlessAppOutput
	ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessClientlessAppOutput
}

type GetZPAApplicationSegmentBrowserAccessClientlessAppArgs struct {
	// (bool)
	AllowOptions pulumi.BoolInput   `pulumi:"allowOptions"`
	AppId        pulumi.StringInput `pulumi:"appId"`
	// (string)
	ApplicationPort pulumi.StringInput `pulumi:"applicationPort"`
	// (string)
	ApplicationProtocol pulumi.StringInput `pulumi:"applicationProtocol"`
	// (string)
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// (string)
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// (string)
	Cname pulumi.StringInput `pulumi:"cname"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (string)
	Domain pulumi.StringInput `pulumi:"domain"`
	// (bool)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// (bool)
	Hidden pulumi.BoolInput `pulumi:"hidden"`
	// This field defines the id of the application server.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	LocalDomain pulumi.StringInput `pulumi:"localDomain"`
	// This field defines the name of the server.
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	Path pulumi.StringInput `pulumi:"path"`
	// (bool)
	TrustUntrustedCert pulumi.BoolInput `pulumi:"trustUntrustedCert"`
}

func (GetZPAApplicationSegmentBrowserAccessClientlessAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessClientlessAppArgs) ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutput() GetZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessClientlessAppArgs) ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessClientlessAppOutput)
}

// GetZPAApplicationSegmentBrowserAccessClientlessAppArrayInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessClientlessAppArray and GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessClientlessAppArrayInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessClientlessAppArray{ GetZPAApplicationSegmentBrowserAccessClientlessAppArgs{...} }
type GetZPAApplicationSegmentBrowserAccessClientlessAppArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput() GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput
	ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput
}

type GetZPAApplicationSegmentBrowserAccessClientlessAppArray []GetZPAApplicationSegmentBrowserAccessClientlessAppInput

func (GetZPAApplicationSegmentBrowserAccessClientlessAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessClientlessAppArray) ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput() GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessClientlessAppArray) ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput)
}

type GetZPAApplicationSegmentBrowserAccessClientlessAppOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutput() GetZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) ToGetZPAApplicationSegmentBrowserAccessClientlessAppOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return o
}

// (bool)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) AllowOptions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) bool { return v.AllowOptions }).(pulumi.BoolOutput)
}

func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.AppId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) ApplicationPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.ApplicationPort }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) ApplicationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.ApplicationProtocol }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.CertificateId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.CertificateName }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Cname }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Description }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Domain }).(pulumi.StringOutput)
}

// (bool)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (bool)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) bool { return v.Hidden }).(pulumi.BoolOutput)
}

// This field defines the id of the application server.
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) LocalDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.LocalDomain }).(pulumi.StringOutput)
}

// This field defines the name of the server.
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) string { return v.Path }).(pulumi.StringOutput)
}

// (bool)
func (o GetZPAApplicationSegmentBrowserAccessClientlessAppOutput) TrustUntrustedCert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessClientlessApp) bool { return v.TrustUntrustedCert }).(pulumi.BoolOutput)
}

type GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessClientlessApp)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput() GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) ToGetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentBrowserAccessClientlessAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentBrowserAccessClientlessApp {
		return vs[0].([]GetZPAApplicationSegmentBrowserAccessClientlessApp)[vs[1].(int)]
	}).(GetZPAApplicationSegmentBrowserAccessClientlessAppOutput)
}

type GetZPAApplicationSegmentBrowserAccessServerGroup struct {
	// This field defines the id of the application server.
	Ids []string `pulumi:"ids"`
}

// GetZPAApplicationSegmentBrowserAccessServerGroupInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessServerGroupArgs and GetZPAApplicationSegmentBrowserAccessServerGroupOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessServerGroupInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessServerGroupArgs{...}
type GetZPAApplicationSegmentBrowserAccessServerGroupInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessServerGroupOutput() GetZPAApplicationSegmentBrowserAccessServerGroupOutput
	ToGetZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessServerGroupOutput
}

type GetZPAApplicationSegmentBrowserAccessServerGroupArgs struct {
	// This field defines the id of the application server.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (GetZPAApplicationSegmentBrowserAccessServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessServerGroupArgs) ToGetZPAApplicationSegmentBrowserAccessServerGroupOutput() GetZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessServerGroupArgs) ToGetZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessServerGroupOutput)
}

// GetZPAApplicationSegmentBrowserAccessServerGroupArrayInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessServerGroupArray and GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessServerGroupArrayInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessServerGroupArray{ GetZPAApplicationSegmentBrowserAccessServerGroupArgs{...} }
type GetZPAApplicationSegmentBrowserAccessServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput() GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput
	ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput
}

type GetZPAApplicationSegmentBrowserAccessServerGroupArray []GetZPAApplicationSegmentBrowserAccessServerGroupInput

func (GetZPAApplicationSegmentBrowserAccessServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessServerGroupArray) ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput() GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessServerGroupArray) ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput)
}

type GetZPAApplicationSegmentBrowserAccessServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessServerGroupOutput) ToGetZPAApplicationSegmentBrowserAccessServerGroupOutput() GetZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessServerGroupOutput) ToGetZPAApplicationSegmentBrowserAccessServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return o
}

// This field defines the id of the application server.
func (o GetZPAApplicationSegmentBrowserAccessServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput() GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) ToGetZPAApplicationSegmentBrowserAccessServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentBrowserAccessServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentBrowserAccessServerGroup {
		return vs[0].([]GetZPAApplicationSegmentBrowserAccessServerGroup)[vs[1].(int)]
	}).(GetZPAApplicationSegmentBrowserAccessServerGroupOutput)
}

type GetZPAApplicationSegmentBrowserAccessTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentBrowserAccessTcpPortRangeInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs and GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessTcpPortRangeInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs{...}
type GetZPAApplicationSegmentBrowserAccessTcpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput() GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput
	ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput
}

type GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessTcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput() GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput)
}

// GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray and GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray{ GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs{...} }
type GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput() GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput
	ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput
}

type GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray []GetZPAApplicationSegmentBrowserAccessTcpPortRangeInput

func (GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessTcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput() GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessTcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput() GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessTcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput() GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput) ToGetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentBrowserAccessTcpPortRange {
		return vs[0].([]GetZPAApplicationSegmentBrowserAccessTcpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput)
}

type GetZPAApplicationSegmentBrowserAccessUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentBrowserAccessUdpPortRangeInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs and GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessUdpPortRangeInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs{...}
type GetZPAApplicationSegmentBrowserAccessUdpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput() GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput
	ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput
}

type GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput() GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput)
}

// GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray and GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray{ GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs{...} }
type GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput() GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput
	ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput
}

type GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray []GetZPAApplicationSegmentBrowserAccessUdpPortRangeInput

func (GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput() GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput() GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentBrowserAccessUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentBrowserAccessUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput() GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentBrowserAccessUdpPortRange {
		return vs[0].([]GetZPAApplicationSegmentBrowserAccessUdpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput)
}

type GetZPAApplicationSegmentInspectionInspectionApp struct {
	AppId string `pulumi:"appId"`
	// (string) TCP/UDP Port for ZPA Inspection.
	ApplicationPort string `pulumi:"applicationPort"`
	// (string) Protocol for the Inspection Application. Supported values: `HTTP` and `HTTPS`
	ApplicationProtocol string `pulumi:"applicationProtocol"`
	// (string) - ID of the signing certificate. This field is required if the applicationProtocol is set to `HTTPS`. The certificateId is not supported if the applicationProtocol is set to `HTTP`.
	CertificateId string `pulumi:"certificateId"`
	// (string) - Parameter required when `applicationProtocol` is of type `HTTPS`
	CertificateName string `pulumi:"certificateName"`
	// (string) Description of the application.
	Description string `pulumi:"description"`
	Domain      string `pulumi:"domain"`
	// (bool) Whether this application is enabled or not
	Enabled bool `pulumi:"enabled"`
	// The ID of the Inspection Application Segment to be exported.
	Id string `pulumi:"id"`
	// The name of the Inspection Application Segment to be exported.
	Name string `pulumi:"name"`
}

// GetZPAApplicationSegmentInspectionInspectionAppInput is an input type that accepts GetZPAApplicationSegmentInspectionInspectionAppArgs and GetZPAApplicationSegmentInspectionInspectionAppOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionInspectionAppInput` via:
//
//	GetZPAApplicationSegmentInspectionInspectionAppArgs{...}
type GetZPAApplicationSegmentInspectionInspectionAppInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionInspectionAppOutput() GetZPAApplicationSegmentInspectionInspectionAppOutput
	ToGetZPAApplicationSegmentInspectionInspectionAppOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionInspectionAppOutput
}

type GetZPAApplicationSegmentInspectionInspectionAppArgs struct {
	AppId pulumi.StringInput `pulumi:"appId"`
	// (string) TCP/UDP Port for ZPA Inspection.
	ApplicationPort pulumi.StringInput `pulumi:"applicationPort"`
	// (string) Protocol for the Inspection Application. Supported values: `HTTP` and `HTTPS`
	ApplicationProtocol pulumi.StringInput `pulumi:"applicationProtocol"`
	// (string) - ID of the signing certificate. This field is required if the applicationProtocol is set to `HTTPS`. The certificateId is not supported if the applicationProtocol is set to `HTTP`.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// (string) - Parameter required when `applicationProtocol` is of type `HTTPS`
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// (string) Description of the application.
	Description pulumi.StringInput `pulumi:"description"`
	Domain      pulumi.StringInput `pulumi:"domain"`
	// (bool) Whether this application is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the Inspection Application Segment to be exported.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Inspection Application Segment to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAApplicationSegmentInspectionInspectionAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionInspectionApp)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionInspectionAppArgs) ToGetZPAApplicationSegmentInspectionInspectionAppOutput() GetZPAApplicationSegmentInspectionInspectionAppOutput {
	return i.ToGetZPAApplicationSegmentInspectionInspectionAppOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionInspectionAppArgs) ToGetZPAApplicationSegmentInspectionInspectionAppOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionInspectionAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionInspectionAppOutput)
}

// GetZPAApplicationSegmentInspectionInspectionAppArrayInput is an input type that accepts GetZPAApplicationSegmentInspectionInspectionAppArray and GetZPAApplicationSegmentInspectionInspectionAppArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionInspectionAppArrayInput` via:
//
//	GetZPAApplicationSegmentInspectionInspectionAppArray{ GetZPAApplicationSegmentInspectionInspectionAppArgs{...} }
type GetZPAApplicationSegmentInspectionInspectionAppArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutput() GetZPAApplicationSegmentInspectionInspectionAppArrayOutput
	ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionInspectionAppArrayOutput
}

type GetZPAApplicationSegmentInspectionInspectionAppArray []GetZPAApplicationSegmentInspectionInspectionAppInput

func (GetZPAApplicationSegmentInspectionInspectionAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionInspectionApp)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionInspectionAppArray) ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutput() GetZPAApplicationSegmentInspectionInspectionAppArrayOutput {
	return i.ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionInspectionAppArray) ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionInspectionAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionInspectionAppArrayOutput)
}

type GetZPAApplicationSegmentInspectionInspectionAppOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionInspectionAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionInspectionApp)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) ToGetZPAApplicationSegmentInspectionInspectionAppOutput() GetZPAApplicationSegmentInspectionInspectionAppOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) ToGetZPAApplicationSegmentInspectionInspectionAppOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionInspectionAppOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.AppId }).(pulumi.StringOutput)
}

// (string) TCP/UDP Port for ZPA Inspection.
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) ApplicationPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.ApplicationPort }).(pulumi.StringOutput)
}

// (string) Protocol for the Inspection Application. Supported values: `HTTP` and `HTTPS`
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) ApplicationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.ApplicationProtocol }).(pulumi.StringOutput)
}

// (string) - ID of the signing certificate. This field is required if the applicationProtocol is set to `HTTPS`. The certificateId is not supported if the applicationProtocol is set to `HTTP`.
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.CertificateId }).(pulumi.StringOutput)
}

// (string) - Parameter required when `applicationProtocol` is of type `HTTPS`
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.CertificateName }).(pulumi.StringOutput)
}

// (string) Description of the application.
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.Domain }).(pulumi.StringOutput)
}

// (bool) Whether this application is enabled or not
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the Inspection Application Segment to be exported.
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Inspection Application Segment to be exported.
func (o GetZPAApplicationSegmentInspectionInspectionAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionInspectionApp) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAApplicationSegmentInspectionInspectionAppArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionInspectionAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionInspectionApp)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionInspectionAppArrayOutput) ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutput() GetZPAApplicationSegmentInspectionInspectionAppArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionInspectionAppArrayOutput) ToGetZPAApplicationSegmentInspectionInspectionAppArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionInspectionAppArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionInspectionAppArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentInspectionInspectionAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentInspectionInspectionApp {
		return vs[0].([]GetZPAApplicationSegmentInspectionInspectionApp)[vs[1].(int)]
	}).(GetZPAApplicationSegmentInspectionInspectionAppOutput)
}

type GetZPAApplicationSegmentInspectionServerGroup struct {
	// The ID of the Inspection Application Segment to be exported.
	Ids []string `pulumi:"ids"`
}

// GetZPAApplicationSegmentInspectionServerGroupInput is an input type that accepts GetZPAApplicationSegmentInspectionServerGroupArgs and GetZPAApplicationSegmentInspectionServerGroupOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionServerGroupInput` via:
//
//	GetZPAApplicationSegmentInspectionServerGroupArgs{...}
type GetZPAApplicationSegmentInspectionServerGroupInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionServerGroupOutput() GetZPAApplicationSegmentInspectionServerGroupOutput
	ToGetZPAApplicationSegmentInspectionServerGroupOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionServerGroupOutput
}

type GetZPAApplicationSegmentInspectionServerGroupArgs struct {
	// The ID of the Inspection Application Segment to be exported.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (GetZPAApplicationSegmentInspectionServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionServerGroupArgs) ToGetZPAApplicationSegmentInspectionServerGroupOutput() GetZPAApplicationSegmentInspectionServerGroupOutput {
	return i.ToGetZPAApplicationSegmentInspectionServerGroupOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionServerGroupArgs) ToGetZPAApplicationSegmentInspectionServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionServerGroupOutput)
}

// GetZPAApplicationSegmentInspectionServerGroupArrayInput is an input type that accepts GetZPAApplicationSegmentInspectionServerGroupArray and GetZPAApplicationSegmentInspectionServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionServerGroupArrayInput` via:
//
//	GetZPAApplicationSegmentInspectionServerGroupArray{ GetZPAApplicationSegmentInspectionServerGroupArgs{...} }
type GetZPAApplicationSegmentInspectionServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionServerGroupArrayOutput() GetZPAApplicationSegmentInspectionServerGroupArrayOutput
	ToGetZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionServerGroupArrayOutput
}

type GetZPAApplicationSegmentInspectionServerGroupArray []GetZPAApplicationSegmentInspectionServerGroupInput

func (GetZPAApplicationSegmentInspectionServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionServerGroupArray) ToGetZPAApplicationSegmentInspectionServerGroupArrayOutput() GetZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return i.ToGetZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionServerGroupArray) ToGetZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionServerGroupArrayOutput)
}

type GetZPAApplicationSegmentInspectionServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionServerGroupOutput) ToGetZPAApplicationSegmentInspectionServerGroupOutput() GetZPAApplicationSegmentInspectionServerGroupOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionServerGroupOutput) ToGetZPAApplicationSegmentInspectionServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionServerGroupOutput {
	return o
}

// The ID of the Inspection Application Segment to be exported.
func (o GetZPAApplicationSegmentInspectionServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type GetZPAApplicationSegmentInspectionServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionServerGroupArrayOutput) ToGetZPAApplicationSegmentInspectionServerGroupArrayOutput() GetZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionServerGroupArrayOutput) ToGetZPAApplicationSegmentInspectionServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentInspectionServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentInspectionServerGroup {
		return vs[0].([]GetZPAApplicationSegmentInspectionServerGroup)[vs[1].(int)]
	}).(GetZPAApplicationSegmentInspectionServerGroupOutput)
}

type GetZPAApplicationSegmentInspectionTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentInspectionTcpPortRangeInput is an input type that accepts GetZPAApplicationSegmentInspectionTcpPortRangeArgs and GetZPAApplicationSegmentInspectionTcpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionTcpPortRangeInput` via:
//
//	GetZPAApplicationSegmentInspectionTcpPortRangeArgs{...}
type GetZPAApplicationSegmentInspectionTcpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionTcpPortRangeOutput() GetZPAApplicationSegmentInspectionTcpPortRangeOutput
	ToGetZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionTcpPortRangeOutput
}

type GetZPAApplicationSegmentInspectionTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentInspectionTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionTcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionTcpPortRangeArgs) ToGetZPAApplicationSegmentInspectionTcpPortRangeOutput() GetZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionTcpPortRangeArgs) ToGetZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionTcpPortRangeOutput)
}

// GetZPAApplicationSegmentInspectionTcpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentInspectionTcpPortRangeArray and GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionTcpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentInspectionTcpPortRangeArray{ GetZPAApplicationSegmentInspectionTcpPortRangeArgs{...} }
type GetZPAApplicationSegmentInspectionTcpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput() GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput
	ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput
}

type GetZPAApplicationSegmentInspectionTcpPortRangeArray []GetZPAApplicationSegmentInspectionTcpPortRangeInput

func (GetZPAApplicationSegmentInspectionTcpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionTcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionTcpPortRangeArray) ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput() GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionTcpPortRangeArray) ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentInspectionTcpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionTcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeOutput) ToGetZPAApplicationSegmentInspectionTcpPortRangeOutput() GetZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeOutput) ToGetZPAApplicationSegmentInspectionTcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionTcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput) ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput() GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput) ToGetZPAApplicationSegmentInspectionTcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentInspectionTcpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentInspectionTcpPortRange {
		return vs[0].([]GetZPAApplicationSegmentInspectionTcpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentInspectionTcpPortRangeOutput)
}

type GetZPAApplicationSegmentInspectionUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentInspectionUdpPortRangeInput is an input type that accepts GetZPAApplicationSegmentInspectionUdpPortRangeArgs and GetZPAApplicationSegmentInspectionUdpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionUdpPortRangeInput` via:
//
//	GetZPAApplicationSegmentInspectionUdpPortRangeArgs{...}
type GetZPAApplicationSegmentInspectionUdpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionUdpPortRangeOutput() GetZPAApplicationSegmentInspectionUdpPortRangeOutput
	ToGetZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionUdpPortRangeOutput
}

type GetZPAApplicationSegmentInspectionUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentInspectionUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionUdpPortRangeArgs) ToGetZPAApplicationSegmentInspectionUdpPortRangeOutput() GetZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionUdpPortRangeArgs) ToGetZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionUdpPortRangeOutput)
}

// GetZPAApplicationSegmentInspectionUdpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentInspectionUdpPortRangeArray and GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentInspectionUdpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentInspectionUdpPortRangeArray{ GetZPAApplicationSegmentInspectionUdpPortRangeArgs{...} }
type GetZPAApplicationSegmentInspectionUdpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput() GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput
	ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput
}

type GetZPAApplicationSegmentInspectionUdpPortRangeArray []GetZPAApplicationSegmentInspectionUdpPortRangeInput

func (GetZPAApplicationSegmentInspectionUdpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentInspectionUdpPortRangeArray) ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput() GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentInspectionUdpPortRangeArray) ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentInspectionUdpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentInspectionUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeOutput) ToGetZPAApplicationSegmentInspectionUdpPortRangeOutput() GetZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeOutput) ToGetZPAApplicationSegmentInspectionUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentInspectionUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentInspectionUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput() GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentInspectionUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentInspectionUdpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentInspectionUdpPortRange {
		return vs[0].([]GetZPAApplicationSegmentInspectionUdpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentInspectionUdpPortRangeOutput)
}

type GetZPAApplicationSegmentPRAServerGroup struct {
	Ids []string `pulumi:"ids"`
}

// GetZPAApplicationSegmentPRAServerGroupInput is an input type that accepts GetZPAApplicationSegmentPRAServerGroupArgs and GetZPAApplicationSegmentPRAServerGroupOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRAServerGroupInput` via:
//
//	GetZPAApplicationSegmentPRAServerGroupArgs{...}
type GetZPAApplicationSegmentPRAServerGroupInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRAServerGroupOutput() GetZPAApplicationSegmentPRAServerGroupOutput
	ToGetZPAApplicationSegmentPRAServerGroupOutputWithContext(context.Context) GetZPAApplicationSegmentPRAServerGroupOutput
}

type GetZPAApplicationSegmentPRAServerGroupArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (GetZPAApplicationSegmentPRAServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRAServerGroupArgs) ToGetZPAApplicationSegmentPRAServerGroupOutput() GetZPAApplicationSegmentPRAServerGroupOutput {
	return i.ToGetZPAApplicationSegmentPRAServerGroupOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRAServerGroupArgs) ToGetZPAApplicationSegmentPRAServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRAServerGroupOutput)
}

// GetZPAApplicationSegmentPRAServerGroupArrayInput is an input type that accepts GetZPAApplicationSegmentPRAServerGroupArray and GetZPAApplicationSegmentPRAServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRAServerGroupArrayInput` via:
//
//	GetZPAApplicationSegmentPRAServerGroupArray{ GetZPAApplicationSegmentPRAServerGroupArgs{...} }
type GetZPAApplicationSegmentPRAServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRAServerGroupArrayOutput() GetZPAApplicationSegmentPRAServerGroupArrayOutput
	ToGetZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(context.Context) GetZPAApplicationSegmentPRAServerGroupArrayOutput
}

type GetZPAApplicationSegmentPRAServerGroupArray []GetZPAApplicationSegmentPRAServerGroupInput

func (GetZPAApplicationSegmentPRAServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRAServerGroupArray) ToGetZPAApplicationSegmentPRAServerGroupArrayOutput() GetZPAApplicationSegmentPRAServerGroupArrayOutput {
	return i.ToGetZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRAServerGroupArray) ToGetZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRAServerGroupArrayOutput)
}

type GetZPAApplicationSegmentPRAServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRAServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRAServerGroupOutput) ToGetZPAApplicationSegmentPRAServerGroupOutput() GetZPAApplicationSegmentPRAServerGroupOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAServerGroupOutput) ToGetZPAApplicationSegmentPRAServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAServerGroupOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAServerGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRAServerGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type GetZPAApplicationSegmentPRAServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRAServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRAServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRAServerGroupArrayOutput) ToGetZPAApplicationSegmentPRAServerGroupArrayOutput() GetZPAApplicationSegmentPRAServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAServerGroupArrayOutput) ToGetZPAApplicationSegmentPRAServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentPRAServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentPRAServerGroup {
		return vs[0].([]GetZPAApplicationSegmentPRAServerGroup)[vs[1].(int)]
	}).(GetZPAApplicationSegmentPRAServerGroupOutput)
}

type GetZPAApplicationSegmentPRASraApp struct {
	AppId string `pulumi:"appId"`
	// (string) Port for the Privileged Remote Accessvalues: `RDP` and `SSH`
	ApplicationPort string `pulumi:"applicationPort"`
	// (string) Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
	ApplicationProtocol string `pulumi:"applicationProtocol"`
	CertificateId       string `pulumi:"certificateId"`
	CertificateName     string `pulumi:"certificateName"`
	// (string) - Parameter required when `applicationProtocol` is of type `RDP`
	ConnectionSecurity string `pulumi:"connectionSecurity"`
	// (string) Description of the application.
	Description string `pulumi:"description"`
	Domain      string `pulumi:"domain"`
	// (bool) Whether this application is enabled or not
	Enabled bool   `pulumi:"enabled"`
	Hidden  bool   `pulumi:"hidden"`
	Id      string `pulumi:"id"`
	// The name of the PRA Application Segment to be exported.
	Name   string `pulumi:"name"`
	Portal bool   `pulumi:"portal"`
}

// GetZPAApplicationSegmentPRASraAppInput is an input type that accepts GetZPAApplicationSegmentPRASraAppArgs and GetZPAApplicationSegmentPRASraAppOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRASraAppInput` via:
//
//	GetZPAApplicationSegmentPRASraAppArgs{...}
type GetZPAApplicationSegmentPRASraAppInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRASraAppOutput() GetZPAApplicationSegmentPRASraAppOutput
	ToGetZPAApplicationSegmentPRASraAppOutputWithContext(context.Context) GetZPAApplicationSegmentPRASraAppOutput
}

type GetZPAApplicationSegmentPRASraAppArgs struct {
	AppId pulumi.StringInput `pulumi:"appId"`
	// (string) Port for the Privileged Remote Accessvalues: `RDP` and `SSH`
	ApplicationPort pulumi.StringInput `pulumi:"applicationPort"`
	// (string) Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
	ApplicationProtocol pulumi.StringInput `pulumi:"applicationProtocol"`
	CertificateId       pulumi.StringInput `pulumi:"certificateId"`
	CertificateName     pulumi.StringInput `pulumi:"certificateName"`
	// (string) - Parameter required when `applicationProtocol` is of type `RDP`
	ConnectionSecurity pulumi.StringInput `pulumi:"connectionSecurity"`
	// (string) Description of the application.
	Description pulumi.StringInput `pulumi:"description"`
	Domain      pulumi.StringInput `pulumi:"domain"`
	// (bool) Whether this application is enabled or not
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Hidden  pulumi.BoolInput   `pulumi:"hidden"`
	Id      pulumi.StringInput `pulumi:"id"`
	// The name of the PRA Application Segment to be exported.
	Name   pulumi.StringInput `pulumi:"name"`
	Portal pulumi.BoolInput   `pulumi:"portal"`
}

func (GetZPAApplicationSegmentPRASraAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRASraApp)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRASraAppArgs) ToGetZPAApplicationSegmentPRASraAppOutput() GetZPAApplicationSegmentPRASraAppOutput {
	return i.ToGetZPAApplicationSegmentPRASraAppOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRASraAppArgs) ToGetZPAApplicationSegmentPRASraAppOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRASraAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRASraAppOutput)
}

// GetZPAApplicationSegmentPRASraAppArrayInput is an input type that accepts GetZPAApplicationSegmentPRASraAppArray and GetZPAApplicationSegmentPRASraAppArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRASraAppArrayInput` via:
//
//	GetZPAApplicationSegmentPRASraAppArray{ GetZPAApplicationSegmentPRASraAppArgs{...} }
type GetZPAApplicationSegmentPRASraAppArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRASraAppArrayOutput() GetZPAApplicationSegmentPRASraAppArrayOutput
	ToGetZPAApplicationSegmentPRASraAppArrayOutputWithContext(context.Context) GetZPAApplicationSegmentPRASraAppArrayOutput
}

type GetZPAApplicationSegmentPRASraAppArray []GetZPAApplicationSegmentPRASraAppInput

func (GetZPAApplicationSegmentPRASraAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRASraApp)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRASraAppArray) ToGetZPAApplicationSegmentPRASraAppArrayOutput() GetZPAApplicationSegmentPRASraAppArrayOutput {
	return i.ToGetZPAApplicationSegmentPRASraAppArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRASraAppArray) ToGetZPAApplicationSegmentPRASraAppArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRASraAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRASraAppArrayOutput)
}

type GetZPAApplicationSegmentPRASraAppOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRASraAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRASraApp)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRASraAppOutput) ToGetZPAApplicationSegmentPRASraAppOutput() GetZPAApplicationSegmentPRASraAppOutput {
	return o
}

func (o GetZPAApplicationSegmentPRASraAppOutput) ToGetZPAApplicationSegmentPRASraAppOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRASraAppOutput {
	return o
}

func (o GetZPAApplicationSegmentPRASraAppOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.AppId }).(pulumi.StringOutput)
}

// (string) Port for the Privileged Remote Accessvalues: `RDP` and `SSH`
func (o GetZPAApplicationSegmentPRASraAppOutput) ApplicationPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.ApplicationPort }).(pulumi.StringOutput)
}

// (string) Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
func (o GetZPAApplicationSegmentPRASraAppOutput) ApplicationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.ApplicationProtocol }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentPRASraAppOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentPRASraAppOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.CertificateName }).(pulumi.StringOutput)
}

// (string) - Parameter required when `applicationProtocol` is of type `RDP`
func (o GetZPAApplicationSegmentPRASraAppOutput) ConnectionSecurity() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.ConnectionSecurity }).(pulumi.StringOutput)
}

// (string) Description of the application.
func (o GetZPAApplicationSegmentPRASraAppOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentPRASraAppOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.Domain }).(pulumi.StringOutput)
}

// (bool) Whether this application is enabled or not
func (o GetZPAApplicationSegmentPRASraAppOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetZPAApplicationSegmentPRASraAppOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) bool { return v.Hidden }).(pulumi.BoolOutput)
}

func (o GetZPAApplicationSegmentPRASraAppOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the PRA Application Segment to be exported.
func (o GetZPAApplicationSegmentPRASraAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentPRASraAppOutput) Portal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRASraApp) bool { return v.Portal }).(pulumi.BoolOutput)
}

type GetZPAApplicationSegmentPRASraAppArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRASraAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRASraApp)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRASraAppArrayOutput) ToGetZPAApplicationSegmentPRASraAppArrayOutput() GetZPAApplicationSegmentPRASraAppArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRASraAppArrayOutput) ToGetZPAApplicationSegmentPRASraAppArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRASraAppArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRASraAppArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentPRASraAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentPRASraApp {
		return vs[0].([]GetZPAApplicationSegmentPRASraApp)[vs[1].(int)]
	}).(GetZPAApplicationSegmentPRASraAppOutput)
}

type GetZPAApplicationSegmentPRATcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentPRATcpPortRangeInput is an input type that accepts GetZPAApplicationSegmentPRATcpPortRangeArgs and GetZPAApplicationSegmentPRATcpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRATcpPortRangeInput` via:
//
//	GetZPAApplicationSegmentPRATcpPortRangeArgs{...}
type GetZPAApplicationSegmentPRATcpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRATcpPortRangeOutput() GetZPAApplicationSegmentPRATcpPortRangeOutput
	ToGetZPAApplicationSegmentPRATcpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentPRATcpPortRangeOutput
}

type GetZPAApplicationSegmentPRATcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentPRATcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRATcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRATcpPortRangeArgs) ToGetZPAApplicationSegmentPRATcpPortRangeOutput() GetZPAApplicationSegmentPRATcpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentPRATcpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRATcpPortRangeArgs) ToGetZPAApplicationSegmentPRATcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRATcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRATcpPortRangeOutput)
}

// GetZPAApplicationSegmentPRATcpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentPRATcpPortRangeArray and GetZPAApplicationSegmentPRATcpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRATcpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentPRATcpPortRangeArray{ GetZPAApplicationSegmentPRATcpPortRangeArgs{...} }
type GetZPAApplicationSegmentPRATcpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutput() GetZPAApplicationSegmentPRATcpPortRangeArrayOutput
	ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentPRATcpPortRangeArrayOutput
}

type GetZPAApplicationSegmentPRATcpPortRangeArray []GetZPAApplicationSegmentPRATcpPortRangeInput

func (GetZPAApplicationSegmentPRATcpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRATcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRATcpPortRangeArray) ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutput() GetZPAApplicationSegmentPRATcpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRATcpPortRangeArray) ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRATcpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRATcpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentPRATcpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRATcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRATcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRATcpPortRangeOutput) ToGetZPAApplicationSegmentPRATcpPortRangeOutput() GetZPAApplicationSegmentPRATcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentPRATcpPortRangeOutput) ToGetZPAApplicationSegmentPRATcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRATcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentPRATcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRATcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentPRATcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRATcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentPRATcpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRATcpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRATcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRATcpPortRangeArrayOutput) ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutput() GetZPAApplicationSegmentPRATcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRATcpPortRangeArrayOutput) ToGetZPAApplicationSegmentPRATcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRATcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRATcpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentPRATcpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentPRATcpPortRange {
		return vs[0].([]GetZPAApplicationSegmentPRATcpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentPRATcpPortRangeOutput)
}

type GetZPAApplicationSegmentPRAUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentPRAUdpPortRangeInput is an input type that accepts GetZPAApplicationSegmentPRAUdpPortRangeArgs and GetZPAApplicationSegmentPRAUdpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRAUdpPortRangeInput` via:
//
//	GetZPAApplicationSegmentPRAUdpPortRangeArgs{...}
type GetZPAApplicationSegmentPRAUdpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRAUdpPortRangeOutput() GetZPAApplicationSegmentPRAUdpPortRangeOutput
	ToGetZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentPRAUdpPortRangeOutput
}

type GetZPAApplicationSegmentPRAUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentPRAUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRAUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRAUdpPortRangeArgs) ToGetZPAApplicationSegmentPRAUdpPortRangeOutput() GetZPAApplicationSegmentPRAUdpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRAUdpPortRangeArgs) ToGetZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRAUdpPortRangeOutput)
}

// GetZPAApplicationSegmentPRAUdpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentPRAUdpPortRangeArray and GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentPRAUdpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentPRAUdpPortRangeArray{ GetZPAApplicationSegmentPRAUdpPortRangeArgs{...} }
type GetZPAApplicationSegmentPRAUdpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutput() GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput
	ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput
}

type GetZPAApplicationSegmentPRAUdpPortRangeArray []GetZPAApplicationSegmentPRAUdpPortRangeInput

func (GetZPAApplicationSegmentPRAUdpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRAUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentPRAUdpPortRangeArray) ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutput() GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentPRAUdpPortRangeArray) ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentPRAUdpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRAUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentPRAUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeOutput) ToGetZPAApplicationSegmentPRAUdpPortRangeOutput() GetZPAApplicationSegmentPRAUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeOutput) ToGetZPAApplicationSegmentPRAUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRAUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentPRAUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentPRAUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutput() GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentPRAUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentPRAUdpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentPRAUdpPortRange {
		return vs[0].([]GetZPAApplicationSegmentPRAUdpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentPRAUdpPortRangeOutput)
}

type GetZPAApplicationSegmentServerGroup struct {
	ConfigSpace  string `pulumi:"configSpace"`
	CreationTime string `pulumi:"creationTime"`
	// Description of the application.
	Description      string `pulumi:"description"`
	DynamicDiscovery bool   `pulumi:"dynamicDiscovery"`
	// Whether this application is enabled or not. Default: false. Supported values: `true`, `false`.
	Enabled      bool   `pulumi:"enabled"`
	Id           string `pulumi:"id"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// Name of the application.
	Name string `pulumi:"name"`
}

// GetZPAApplicationSegmentServerGroupInput is an input type that accepts GetZPAApplicationSegmentServerGroupArgs and GetZPAApplicationSegmentServerGroupOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentServerGroupInput` via:
//
//	GetZPAApplicationSegmentServerGroupArgs{...}
type GetZPAApplicationSegmentServerGroupInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentServerGroupOutput() GetZPAApplicationSegmentServerGroupOutput
	ToGetZPAApplicationSegmentServerGroupOutputWithContext(context.Context) GetZPAApplicationSegmentServerGroupOutput
}

type GetZPAApplicationSegmentServerGroupArgs struct {
	ConfigSpace  pulumi.StringInput `pulumi:"configSpace"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the application.
	Description      pulumi.StringInput `pulumi:"description"`
	DynamicDiscovery pulumi.BoolInput   `pulumi:"dynamicDiscovery"`
	// Whether this application is enabled or not. Default: false. Supported values: `true`, `false`.
	Enabled      pulumi.BoolInput   `pulumi:"enabled"`
	Id           pulumi.StringInput `pulumi:"id"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// Name of the application.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAApplicationSegmentServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentServerGroupArgs) ToGetZPAApplicationSegmentServerGroupOutput() GetZPAApplicationSegmentServerGroupOutput {
	return i.ToGetZPAApplicationSegmentServerGroupOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentServerGroupArgs) ToGetZPAApplicationSegmentServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentServerGroupOutput)
}

// GetZPAApplicationSegmentServerGroupArrayInput is an input type that accepts GetZPAApplicationSegmentServerGroupArray and GetZPAApplicationSegmentServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentServerGroupArrayInput` via:
//
//	GetZPAApplicationSegmentServerGroupArray{ GetZPAApplicationSegmentServerGroupArgs{...} }
type GetZPAApplicationSegmentServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentServerGroupArrayOutput() GetZPAApplicationSegmentServerGroupArrayOutput
	ToGetZPAApplicationSegmentServerGroupArrayOutputWithContext(context.Context) GetZPAApplicationSegmentServerGroupArrayOutput
}

type GetZPAApplicationSegmentServerGroupArray []GetZPAApplicationSegmentServerGroupInput

func (GetZPAApplicationSegmentServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (i GetZPAApplicationSegmentServerGroupArray) ToGetZPAApplicationSegmentServerGroupArrayOutput() GetZPAApplicationSegmentServerGroupArrayOutput {
	return i.ToGetZPAApplicationSegmentServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentServerGroupArray) ToGetZPAApplicationSegmentServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentServerGroupArrayOutput)
}

type GetZPAApplicationSegmentServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentServerGroupOutput) ToGetZPAApplicationSegmentServerGroupOutput() GetZPAApplicationSegmentServerGroupOutput {
	return o
}

func (o GetZPAApplicationSegmentServerGroupOutput) ToGetZPAApplicationSegmentServerGroupOutputWithContext(ctx context.Context) GetZPAApplicationSegmentServerGroupOutput {
	return o
}

func (o GetZPAApplicationSegmentServerGroupOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentServerGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the application.
func (o GetZPAApplicationSegmentServerGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentServerGroupOutput) DynamicDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) bool { return v.DynamicDiscovery }).(pulumi.BoolOutput)
}

// Whether this application is enabled or not. Default: false. Supported values: `true`, `false`.
func (o GetZPAApplicationSegmentServerGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetZPAApplicationSegmentServerGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentServerGroupOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAApplicationSegmentServerGroupOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// Name of the application.
func (o GetZPAApplicationSegmentServerGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentServerGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAApplicationSegmentServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentServerGroup)(nil)).Elem()
}

func (o GetZPAApplicationSegmentServerGroupArrayOutput) ToGetZPAApplicationSegmentServerGroupArrayOutput() GetZPAApplicationSegmentServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentServerGroupArrayOutput) ToGetZPAApplicationSegmentServerGroupArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentServerGroupArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentServerGroup {
		return vs[0].([]GetZPAApplicationSegmentServerGroup)[vs[1].(int)]
	}).(GetZPAApplicationSegmentServerGroupOutput)
}

type GetZPAApplicationSegmentTcpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentTcpPortRangeInput is an input type that accepts GetZPAApplicationSegmentTcpPortRangeArgs and GetZPAApplicationSegmentTcpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentTcpPortRangeInput` via:
//
//	GetZPAApplicationSegmentTcpPortRangeArgs{...}
type GetZPAApplicationSegmentTcpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentTcpPortRangeOutput() GetZPAApplicationSegmentTcpPortRangeOutput
	ToGetZPAApplicationSegmentTcpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentTcpPortRangeOutput
}

type GetZPAApplicationSegmentTcpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentTcpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentTcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentTcpPortRangeArgs) ToGetZPAApplicationSegmentTcpPortRangeOutput() GetZPAApplicationSegmentTcpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentTcpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentTcpPortRangeArgs) ToGetZPAApplicationSegmentTcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentTcpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentTcpPortRangeOutput)
}

// GetZPAApplicationSegmentTcpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentTcpPortRangeArray and GetZPAApplicationSegmentTcpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentTcpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentTcpPortRangeArray{ GetZPAApplicationSegmentTcpPortRangeArgs{...} }
type GetZPAApplicationSegmentTcpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentTcpPortRangeArrayOutput() GetZPAApplicationSegmentTcpPortRangeArrayOutput
	ToGetZPAApplicationSegmentTcpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentTcpPortRangeArrayOutput
}

type GetZPAApplicationSegmentTcpPortRangeArray []GetZPAApplicationSegmentTcpPortRangeInput

func (GetZPAApplicationSegmentTcpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentTcpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentTcpPortRangeArray) ToGetZPAApplicationSegmentTcpPortRangeArrayOutput() GetZPAApplicationSegmentTcpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentTcpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentTcpPortRangeArray) ToGetZPAApplicationSegmentTcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentTcpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentTcpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentTcpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentTcpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentTcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentTcpPortRangeOutput) ToGetZPAApplicationSegmentTcpPortRangeOutput() GetZPAApplicationSegmentTcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentTcpPortRangeOutput) ToGetZPAApplicationSegmentTcpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentTcpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentTcpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentTcpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentTcpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentTcpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentTcpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentTcpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentTcpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentTcpPortRangeArrayOutput) ToGetZPAApplicationSegmentTcpPortRangeArrayOutput() GetZPAApplicationSegmentTcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentTcpPortRangeArrayOutput) ToGetZPAApplicationSegmentTcpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentTcpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentTcpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentTcpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentTcpPortRange {
		return vs[0].([]GetZPAApplicationSegmentTcpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentTcpPortRangeOutput)
}

type GetZPAApplicationSegmentUdpPortRange struct {
	From *string `pulumi:"from"`
	To   *string `pulumi:"to"`
}

// GetZPAApplicationSegmentUdpPortRangeInput is an input type that accepts GetZPAApplicationSegmentUdpPortRangeArgs and GetZPAApplicationSegmentUdpPortRangeOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentUdpPortRangeInput` via:
//
//	GetZPAApplicationSegmentUdpPortRangeArgs{...}
type GetZPAApplicationSegmentUdpPortRangeInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentUdpPortRangeOutput() GetZPAApplicationSegmentUdpPortRangeOutput
	ToGetZPAApplicationSegmentUdpPortRangeOutputWithContext(context.Context) GetZPAApplicationSegmentUdpPortRangeOutput
}

type GetZPAApplicationSegmentUdpPortRangeArgs struct {
	From pulumi.StringPtrInput `pulumi:"from"`
	To   pulumi.StringPtrInput `pulumi:"to"`
}

func (GetZPAApplicationSegmentUdpPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentUdpPortRangeArgs) ToGetZPAApplicationSegmentUdpPortRangeOutput() GetZPAApplicationSegmentUdpPortRangeOutput {
	return i.ToGetZPAApplicationSegmentUdpPortRangeOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentUdpPortRangeArgs) ToGetZPAApplicationSegmentUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentUdpPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentUdpPortRangeOutput)
}

// GetZPAApplicationSegmentUdpPortRangeArrayInput is an input type that accepts GetZPAApplicationSegmentUdpPortRangeArray and GetZPAApplicationSegmentUdpPortRangeArrayOutput values.
// You can construct a concrete instance of `GetZPAApplicationSegmentUdpPortRangeArrayInput` via:
//
//	GetZPAApplicationSegmentUdpPortRangeArray{ GetZPAApplicationSegmentUdpPortRangeArgs{...} }
type GetZPAApplicationSegmentUdpPortRangeArrayInput interface {
	pulumi.Input

	ToGetZPAApplicationSegmentUdpPortRangeArrayOutput() GetZPAApplicationSegmentUdpPortRangeArrayOutput
	ToGetZPAApplicationSegmentUdpPortRangeArrayOutputWithContext(context.Context) GetZPAApplicationSegmentUdpPortRangeArrayOutput
}

type GetZPAApplicationSegmentUdpPortRangeArray []GetZPAApplicationSegmentUdpPortRangeInput

func (GetZPAApplicationSegmentUdpPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentUdpPortRange)(nil)).Elem()
}

func (i GetZPAApplicationSegmentUdpPortRangeArray) ToGetZPAApplicationSegmentUdpPortRangeArrayOutput() GetZPAApplicationSegmentUdpPortRangeArrayOutput {
	return i.ToGetZPAApplicationSegmentUdpPortRangeArrayOutputWithContext(context.Background())
}

func (i GetZPAApplicationSegmentUdpPortRangeArray) ToGetZPAApplicationSegmentUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentUdpPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAApplicationSegmentUdpPortRangeArrayOutput)
}

type GetZPAApplicationSegmentUdpPortRangeOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentUdpPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAApplicationSegmentUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentUdpPortRangeOutput) ToGetZPAApplicationSegmentUdpPortRangeOutput() GetZPAApplicationSegmentUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentUdpPortRangeOutput) ToGetZPAApplicationSegmentUdpPortRangeOutputWithContext(ctx context.Context) GetZPAApplicationSegmentUdpPortRangeOutput {
	return o
}

func (o GetZPAApplicationSegmentUdpPortRangeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentUdpPortRange) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GetZPAApplicationSegmentUdpPortRangeOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAApplicationSegmentUdpPortRange) *string { return v.To }).(pulumi.StringPtrOutput)
}

type GetZPAApplicationSegmentUdpPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAApplicationSegmentUdpPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAApplicationSegmentUdpPortRange)(nil)).Elem()
}

func (o GetZPAApplicationSegmentUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentUdpPortRangeArrayOutput() GetZPAApplicationSegmentUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentUdpPortRangeArrayOutput) ToGetZPAApplicationSegmentUdpPortRangeArrayOutputWithContext(ctx context.Context) GetZPAApplicationSegmentUdpPortRangeArrayOutput {
	return o
}

func (o GetZPAApplicationSegmentUdpPortRangeArrayOutput) Index(i pulumi.IntInput) GetZPAApplicationSegmentUdpPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAApplicationSegmentUdpPortRange {
		return vs[0].([]GetZPAApplicationSegmentUdpPortRange)[vs[1].(int)]
	}).(GetZPAApplicationSegmentUdpPortRangeOutput)
}

type GetZPACloudConnectorGroupCloudConnector struct {
	// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	CreationTime string `pulumi:"creationTime"`
	// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	Description string `pulumi:"description"`
	// (bool) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	Enabled     bool   `pulumi:"enabled"`
	Fingerprint string `pulumi:"fingerprint"`
	// This field defines the id of the cloud connector group.
	Id     string        `pulumi:"id"`
	Ipacls []interface{} `pulumi:"ipacls"`
	// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	IssuedCertId string `pulumi:"issuedCertId"`
	// (string)- Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// This field defines the name of the cloud connector group.
	Name        string                 `pulumi:"name"`
	SigningCert map[string]interface{} `pulumi:"signingCert"`
}

// GetZPACloudConnectorGroupCloudConnectorInput is an input type that accepts GetZPACloudConnectorGroupCloudConnectorArgs and GetZPACloudConnectorGroupCloudConnectorOutput values.
// You can construct a concrete instance of `GetZPACloudConnectorGroupCloudConnectorInput` via:
//
//	GetZPACloudConnectorGroupCloudConnectorArgs{...}
type GetZPACloudConnectorGroupCloudConnectorInput interface {
	pulumi.Input

	ToGetZPACloudConnectorGroupCloudConnectorOutput() GetZPACloudConnectorGroupCloudConnectorOutput
	ToGetZPACloudConnectorGroupCloudConnectorOutputWithContext(context.Context) GetZPACloudConnectorGroupCloudConnectorOutput
}

type GetZPACloudConnectorGroupCloudConnectorArgs struct {
	// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	Description pulumi.StringInput `pulumi:"description"`
	// (bool) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	// This field defines the id of the cloud connector group.
	Id     pulumi.StringInput `pulumi:"id"`
	Ipacls pulumi.ArrayInput  `pulumi:"ipacls"`
	// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	IssuedCertId pulumi.StringInput `pulumi:"issuedCertId"`
	// (string)- Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// This field defines the name of the cloud connector group.
	Name        pulumi.StringInput `pulumi:"name"`
	SigningCert pulumi.MapInput    `pulumi:"signingCert"`
}

func (GetZPACloudConnectorGroupCloudConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPACloudConnectorGroupCloudConnector)(nil)).Elem()
}

func (i GetZPACloudConnectorGroupCloudConnectorArgs) ToGetZPACloudConnectorGroupCloudConnectorOutput() GetZPACloudConnectorGroupCloudConnectorOutput {
	return i.ToGetZPACloudConnectorGroupCloudConnectorOutputWithContext(context.Background())
}

func (i GetZPACloudConnectorGroupCloudConnectorArgs) ToGetZPACloudConnectorGroupCloudConnectorOutputWithContext(ctx context.Context) GetZPACloudConnectorGroupCloudConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPACloudConnectorGroupCloudConnectorOutput)
}

// GetZPACloudConnectorGroupCloudConnectorArrayInput is an input type that accepts GetZPACloudConnectorGroupCloudConnectorArray and GetZPACloudConnectorGroupCloudConnectorArrayOutput values.
// You can construct a concrete instance of `GetZPACloudConnectorGroupCloudConnectorArrayInput` via:
//
//	GetZPACloudConnectorGroupCloudConnectorArray{ GetZPACloudConnectorGroupCloudConnectorArgs{...} }
type GetZPACloudConnectorGroupCloudConnectorArrayInput interface {
	pulumi.Input

	ToGetZPACloudConnectorGroupCloudConnectorArrayOutput() GetZPACloudConnectorGroupCloudConnectorArrayOutput
	ToGetZPACloudConnectorGroupCloudConnectorArrayOutputWithContext(context.Context) GetZPACloudConnectorGroupCloudConnectorArrayOutput
}

type GetZPACloudConnectorGroupCloudConnectorArray []GetZPACloudConnectorGroupCloudConnectorInput

func (GetZPACloudConnectorGroupCloudConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPACloudConnectorGroupCloudConnector)(nil)).Elem()
}

func (i GetZPACloudConnectorGroupCloudConnectorArray) ToGetZPACloudConnectorGroupCloudConnectorArrayOutput() GetZPACloudConnectorGroupCloudConnectorArrayOutput {
	return i.ToGetZPACloudConnectorGroupCloudConnectorArrayOutputWithContext(context.Background())
}

func (i GetZPACloudConnectorGroupCloudConnectorArray) ToGetZPACloudConnectorGroupCloudConnectorArrayOutputWithContext(ctx context.Context) GetZPACloudConnectorGroupCloudConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPACloudConnectorGroupCloudConnectorArrayOutput)
}

type GetZPACloudConnectorGroupCloudConnectorOutput struct{ *pulumi.OutputState }

func (GetZPACloudConnectorGroupCloudConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPACloudConnectorGroupCloudConnector)(nil)).Elem()
}

func (o GetZPACloudConnectorGroupCloudConnectorOutput) ToGetZPACloudConnectorGroupCloudConnectorOutput() GetZPACloudConnectorGroupCloudConnectorOutput {
	return o
}

func (o GetZPACloudConnectorGroupCloudConnectorOutput) ToGetZPACloudConnectorGroupCloudConnectorOutputWithContext(ctx context.Context) GetZPACloudConnectorGroupCloudConnectorOutput {
	return o
}

// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.Description }).(pulumi.StringOutput)
}

// (bool) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetZPACloudConnectorGroupCloudConnectorOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// This field defines the id of the cloud connector group.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPACloudConnectorGroupCloudConnectorOutput) Ipacls() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) []interface{} { return v.Ipacls }).(pulumi.ArrayOutput)
}

// (string) - Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) IssuedCertId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.IssuedCertId }).(pulumi.StringOutput)
}

// (string)- Only applicable for a GET request. Ignored in PUT/POST/DELETE requests.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPACloudConnectorGroupCloudConnectorOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// This field defines the name of the cloud connector group.
func (o GetZPACloudConnectorGroupCloudConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPACloudConnectorGroupCloudConnectorOutput) SigningCert() pulumi.MapOutput {
	return o.ApplyT(func(v GetZPACloudConnectorGroupCloudConnector) map[string]interface{} { return v.SigningCert }).(pulumi.MapOutput)
}

type GetZPACloudConnectorGroupCloudConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetZPACloudConnectorGroupCloudConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPACloudConnectorGroupCloudConnector)(nil)).Elem()
}

func (o GetZPACloudConnectorGroupCloudConnectorArrayOutput) ToGetZPACloudConnectorGroupCloudConnectorArrayOutput() GetZPACloudConnectorGroupCloudConnectorArrayOutput {
	return o
}

func (o GetZPACloudConnectorGroupCloudConnectorArrayOutput) ToGetZPACloudConnectorGroupCloudConnectorArrayOutputWithContext(ctx context.Context) GetZPACloudConnectorGroupCloudConnectorArrayOutput {
	return o
}

func (o GetZPACloudConnectorGroupCloudConnectorArrayOutput) Index(i pulumi.IntInput) GetZPACloudConnectorGroupCloudConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPACloudConnectorGroupCloudConnector {
		return vs[0].([]GetZPACloudConnectorGroupCloudConnector)[vs[1].(int)]
	}).(GetZPACloudConnectorGroupCloudConnectorOutput)
}

type GetZPAIdPControllerAdminMetadata struct {
	// (string)
	CertificateUrl string `pulumi:"certificateUrl"`
	SpBaseUrl      string `pulumi:"spBaseUrl"`
	// (string)
	SpEntityId string `pulumi:"spEntityId"`
	// (string)
	SpMetadataUrl string `pulumi:"spMetadataUrl"`
	// (string)
	SpPostUrl string `pulumi:"spPostUrl"`
}

// GetZPAIdPControllerAdminMetadataInput is an input type that accepts GetZPAIdPControllerAdminMetadataArgs and GetZPAIdPControllerAdminMetadataOutput values.
// You can construct a concrete instance of `GetZPAIdPControllerAdminMetadataInput` via:
//
//	GetZPAIdPControllerAdminMetadataArgs{...}
type GetZPAIdPControllerAdminMetadataInput interface {
	pulumi.Input

	ToGetZPAIdPControllerAdminMetadataOutput() GetZPAIdPControllerAdminMetadataOutput
	ToGetZPAIdPControllerAdminMetadataOutputWithContext(context.Context) GetZPAIdPControllerAdminMetadataOutput
}

type GetZPAIdPControllerAdminMetadataArgs struct {
	// (string)
	CertificateUrl pulumi.StringInput `pulumi:"certificateUrl"`
	SpBaseUrl      pulumi.StringInput `pulumi:"spBaseUrl"`
	// (string)
	SpEntityId pulumi.StringInput `pulumi:"spEntityId"`
	// (string)
	SpMetadataUrl pulumi.StringInput `pulumi:"spMetadataUrl"`
	// (string)
	SpPostUrl pulumi.StringInput `pulumi:"spPostUrl"`
}

func (GetZPAIdPControllerAdminMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAIdPControllerAdminMetadata)(nil)).Elem()
}

func (i GetZPAIdPControllerAdminMetadataArgs) ToGetZPAIdPControllerAdminMetadataOutput() GetZPAIdPControllerAdminMetadataOutput {
	return i.ToGetZPAIdPControllerAdminMetadataOutputWithContext(context.Background())
}

func (i GetZPAIdPControllerAdminMetadataArgs) ToGetZPAIdPControllerAdminMetadataOutputWithContext(ctx context.Context) GetZPAIdPControllerAdminMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAIdPControllerAdminMetadataOutput)
}

// GetZPAIdPControllerAdminMetadataArrayInput is an input type that accepts GetZPAIdPControllerAdminMetadataArray and GetZPAIdPControllerAdminMetadataArrayOutput values.
// You can construct a concrete instance of `GetZPAIdPControllerAdminMetadataArrayInput` via:
//
//	GetZPAIdPControllerAdminMetadataArray{ GetZPAIdPControllerAdminMetadataArgs{...} }
type GetZPAIdPControllerAdminMetadataArrayInput interface {
	pulumi.Input

	ToGetZPAIdPControllerAdminMetadataArrayOutput() GetZPAIdPControllerAdminMetadataArrayOutput
	ToGetZPAIdPControllerAdminMetadataArrayOutputWithContext(context.Context) GetZPAIdPControllerAdminMetadataArrayOutput
}

type GetZPAIdPControllerAdminMetadataArray []GetZPAIdPControllerAdminMetadataInput

func (GetZPAIdPControllerAdminMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAIdPControllerAdminMetadata)(nil)).Elem()
}

func (i GetZPAIdPControllerAdminMetadataArray) ToGetZPAIdPControllerAdminMetadataArrayOutput() GetZPAIdPControllerAdminMetadataArrayOutput {
	return i.ToGetZPAIdPControllerAdminMetadataArrayOutputWithContext(context.Background())
}

func (i GetZPAIdPControllerAdminMetadataArray) ToGetZPAIdPControllerAdminMetadataArrayOutputWithContext(ctx context.Context) GetZPAIdPControllerAdminMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAIdPControllerAdminMetadataArrayOutput)
}

type GetZPAIdPControllerAdminMetadataOutput struct{ *pulumi.OutputState }

func (GetZPAIdPControllerAdminMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAIdPControllerAdminMetadata)(nil)).Elem()
}

func (o GetZPAIdPControllerAdminMetadataOutput) ToGetZPAIdPControllerAdminMetadataOutput() GetZPAIdPControllerAdminMetadataOutput {
	return o
}

func (o GetZPAIdPControllerAdminMetadataOutput) ToGetZPAIdPControllerAdminMetadataOutputWithContext(ctx context.Context) GetZPAIdPControllerAdminMetadataOutput {
	return o
}

// (string)
func (o GetZPAIdPControllerAdminMetadataOutput) CertificateUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerAdminMetadata) string { return v.CertificateUrl }).(pulumi.StringOutput)
}

func (o GetZPAIdPControllerAdminMetadataOutput) SpBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerAdminMetadata) string { return v.SpBaseUrl }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAIdPControllerAdminMetadataOutput) SpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerAdminMetadata) string { return v.SpEntityId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAIdPControllerAdminMetadataOutput) SpMetadataUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerAdminMetadata) string { return v.SpMetadataUrl }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAIdPControllerAdminMetadataOutput) SpPostUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerAdminMetadata) string { return v.SpPostUrl }).(pulumi.StringOutput)
}

type GetZPAIdPControllerAdminMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetZPAIdPControllerAdminMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAIdPControllerAdminMetadata)(nil)).Elem()
}

func (o GetZPAIdPControllerAdminMetadataArrayOutput) ToGetZPAIdPControllerAdminMetadataArrayOutput() GetZPAIdPControllerAdminMetadataArrayOutput {
	return o
}

func (o GetZPAIdPControllerAdminMetadataArrayOutput) ToGetZPAIdPControllerAdminMetadataArrayOutputWithContext(ctx context.Context) GetZPAIdPControllerAdminMetadataArrayOutput {
	return o
}

func (o GetZPAIdPControllerAdminMetadataArrayOutput) Index(i pulumi.IntInput) GetZPAIdPControllerAdminMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAIdPControllerAdminMetadata {
		return vs[0].([]GetZPAIdPControllerAdminMetadata)[vs[1].(int)]
	}).(GetZPAIdPControllerAdminMetadataOutput)
}

type GetZPAIdPControllerUserMetadata struct {
	// (string)
	CertificateUrl string `pulumi:"certificateUrl"`
	SpBaseUrl      string `pulumi:"spBaseUrl"`
	// (string)
	SpEntityId string `pulumi:"spEntityId"`
	// (string)
	SpMetadataUrl string `pulumi:"spMetadataUrl"`
	// (string)
	SpPostUrl string `pulumi:"spPostUrl"`
}

// GetZPAIdPControllerUserMetadataInput is an input type that accepts GetZPAIdPControllerUserMetadataArgs and GetZPAIdPControllerUserMetadataOutput values.
// You can construct a concrete instance of `GetZPAIdPControllerUserMetadataInput` via:
//
//	GetZPAIdPControllerUserMetadataArgs{...}
type GetZPAIdPControllerUserMetadataInput interface {
	pulumi.Input

	ToGetZPAIdPControllerUserMetadataOutput() GetZPAIdPControllerUserMetadataOutput
	ToGetZPAIdPControllerUserMetadataOutputWithContext(context.Context) GetZPAIdPControllerUserMetadataOutput
}

type GetZPAIdPControllerUserMetadataArgs struct {
	// (string)
	CertificateUrl pulumi.StringInput `pulumi:"certificateUrl"`
	SpBaseUrl      pulumi.StringInput `pulumi:"spBaseUrl"`
	// (string)
	SpEntityId pulumi.StringInput `pulumi:"spEntityId"`
	// (string)
	SpMetadataUrl pulumi.StringInput `pulumi:"spMetadataUrl"`
	// (string)
	SpPostUrl pulumi.StringInput `pulumi:"spPostUrl"`
}

func (GetZPAIdPControllerUserMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAIdPControllerUserMetadata)(nil)).Elem()
}

func (i GetZPAIdPControllerUserMetadataArgs) ToGetZPAIdPControllerUserMetadataOutput() GetZPAIdPControllerUserMetadataOutput {
	return i.ToGetZPAIdPControllerUserMetadataOutputWithContext(context.Background())
}

func (i GetZPAIdPControllerUserMetadataArgs) ToGetZPAIdPControllerUserMetadataOutputWithContext(ctx context.Context) GetZPAIdPControllerUserMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAIdPControllerUserMetadataOutput)
}

// GetZPAIdPControllerUserMetadataArrayInput is an input type that accepts GetZPAIdPControllerUserMetadataArray and GetZPAIdPControllerUserMetadataArrayOutput values.
// You can construct a concrete instance of `GetZPAIdPControllerUserMetadataArrayInput` via:
//
//	GetZPAIdPControllerUserMetadataArray{ GetZPAIdPControllerUserMetadataArgs{...} }
type GetZPAIdPControllerUserMetadataArrayInput interface {
	pulumi.Input

	ToGetZPAIdPControllerUserMetadataArrayOutput() GetZPAIdPControllerUserMetadataArrayOutput
	ToGetZPAIdPControllerUserMetadataArrayOutputWithContext(context.Context) GetZPAIdPControllerUserMetadataArrayOutput
}

type GetZPAIdPControllerUserMetadataArray []GetZPAIdPControllerUserMetadataInput

func (GetZPAIdPControllerUserMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAIdPControllerUserMetadata)(nil)).Elem()
}

func (i GetZPAIdPControllerUserMetadataArray) ToGetZPAIdPControllerUserMetadataArrayOutput() GetZPAIdPControllerUserMetadataArrayOutput {
	return i.ToGetZPAIdPControllerUserMetadataArrayOutputWithContext(context.Background())
}

func (i GetZPAIdPControllerUserMetadataArray) ToGetZPAIdPControllerUserMetadataArrayOutputWithContext(ctx context.Context) GetZPAIdPControllerUserMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAIdPControllerUserMetadataArrayOutput)
}

type GetZPAIdPControllerUserMetadataOutput struct{ *pulumi.OutputState }

func (GetZPAIdPControllerUserMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAIdPControllerUserMetadata)(nil)).Elem()
}

func (o GetZPAIdPControllerUserMetadataOutput) ToGetZPAIdPControllerUserMetadataOutput() GetZPAIdPControllerUserMetadataOutput {
	return o
}

func (o GetZPAIdPControllerUserMetadataOutput) ToGetZPAIdPControllerUserMetadataOutputWithContext(ctx context.Context) GetZPAIdPControllerUserMetadataOutput {
	return o
}

// (string)
func (o GetZPAIdPControllerUserMetadataOutput) CertificateUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerUserMetadata) string { return v.CertificateUrl }).(pulumi.StringOutput)
}

func (o GetZPAIdPControllerUserMetadataOutput) SpBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerUserMetadata) string { return v.SpBaseUrl }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAIdPControllerUserMetadataOutput) SpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerUserMetadata) string { return v.SpEntityId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAIdPControllerUserMetadataOutput) SpMetadataUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerUserMetadata) string { return v.SpMetadataUrl }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAIdPControllerUserMetadataOutput) SpPostUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAIdPControllerUserMetadata) string { return v.SpPostUrl }).(pulumi.StringOutput)
}

type GetZPAIdPControllerUserMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetZPAIdPControllerUserMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAIdPControllerUserMetadata)(nil)).Elem()
}

func (o GetZPAIdPControllerUserMetadataArrayOutput) ToGetZPAIdPControllerUserMetadataArrayOutput() GetZPAIdPControllerUserMetadataArrayOutput {
	return o
}

func (o GetZPAIdPControllerUserMetadataArrayOutput) ToGetZPAIdPControllerUserMetadataArrayOutputWithContext(ctx context.Context) GetZPAIdPControllerUserMetadataArrayOutput {
	return o
}

func (o GetZPAIdPControllerUserMetadataArrayOutput) Index(i pulumi.IntInput) GetZPAIdPControllerUserMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAIdPControllerUserMetadata {
		return vs[0].([]GetZPAIdPControllerUserMetadata)[vs[1].(int)]
	}).(GetZPAIdPControllerUserMetadataOutput)
}

type GetZPAInspectionAllPredefinedControlsList struct {
	// (string)
	Action string `pulumi:"action"`
	// (string)
	ActionValue string `pulumi:"actionValue"`
	// (string)
	AssociatedInspectionProfileNames []GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName `pulumi:"associatedInspectionProfileNames"`
	// (string)
	Attachment string `pulumi:"attachment"`
	// (string)
	ControlGroup string `pulumi:"controlGroup"`
	// (string)
	ControlNumber string `pulumi:"controlNumber"`
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	DefaultAction string `pulumi:"defaultAction"`
	// (string)
	DefaultActionValue string `pulumi:"defaultActionValue"`
	// (string)
	Description string `pulumi:"description"`
	// (string)
	Id string `pulumi:"id"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// (string)
	Name string `pulumi:"name"`
	// (string)
	ParanoiaLevel string `pulumi:"paranoiaLevel"`
	// (string)
	Severity string `pulumi:"severity"`
	// The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
	Version string `pulumi:"version"`
}

// GetZPAInspectionAllPredefinedControlsListInput is an input type that accepts GetZPAInspectionAllPredefinedControlsListArgs and GetZPAInspectionAllPredefinedControlsListOutput values.
// You can construct a concrete instance of `GetZPAInspectionAllPredefinedControlsListInput` via:
//
//	GetZPAInspectionAllPredefinedControlsListArgs{...}
type GetZPAInspectionAllPredefinedControlsListInput interface {
	pulumi.Input

	ToGetZPAInspectionAllPredefinedControlsListOutput() GetZPAInspectionAllPredefinedControlsListOutput
	ToGetZPAInspectionAllPredefinedControlsListOutputWithContext(context.Context) GetZPAInspectionAllPredefinedControlsListOutput
}

type GetZPAInspectionAllPredefinedControlsListArgs struct {
	// (string)
	Action pulumi.StringInput `pulumi:"action"`
	// (string)
	ActionValue pulumi.StringInput `pulumi:"actionValue"`
	// (string)
	AssociatedInspectionProfileNames GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayInput `pulumi:"associatedInspectionProfileNames"`
	// (string)
	Attachment pulumi.StringInput `pulumi:"attachment"`
	// (string)
	ControlGroup pulumi.StringInput `pulumi:"controlGroup"`
	// (string)
	ControlNumber pulumi.StringInput `pulumi:"controlNumber"`
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string)
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// (string)
	DefaultActionValue pulumi.StringInput `pulumi:"defaultActionValue"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (string)
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// (string)
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	ParanoiaLevel pulumi.StringInput `pulumi:"paranoiaLevel"`
	// (string)
	Severity pulumi.StringInput `pulumi:"severity"`
	// The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetZPAInspectionAllPredefinedControlsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsList)(nil)).Elem()
}

func (i GetZPAInspectionAllPredefinedControlsListArgs) ToGetZPAInspectionAllPredefinedControlsListOutput() GetZPAInspectionAllPredefinedControlsListOutput {
	return i.ToGetZPAInspectionAllPredefinedControlsListOutputWithContext(context.Background())
}

func (i GetZPAInspectionAllPredefinedControlsListArgs) ToGetZPAInspectionAllPredefinedControlsListOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionAllPredefinedControlsListOutput)
}

// GetZPAInspectionAllPredefinedControlsListArrayInput is an input type that accepts GetZPAInspectionAllPredefinedControlsListArray and GetZPAInspectionAllPredefinedControlsListArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionAllPredefinedControlsListArrayInput` via:
//
//	GetZPAInspectionAllPredefinedControlsListArray{ GetZPAInspectionAllPredefinedControlsListArgs{...} }
type GetZPAInspectionAllPredefinedControlsListArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionAllPredefinedControlsListArrayOutput() GetZPAInspectionAllPredefinedControlsListArrayOutput
	ToGetZPAInspectionAllPredefinedControlsListArrayOutputWithContext(context.Context) GetZPAInspectionAllPredefinedControlsListArrayOutput
}

type GetZPAInspectionAllPredefinedControlsListArray []GetZPAInspectionAllPredefinedControlsListInput

func (GetZPAInspectionAllPredefinedControlsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionAllPredefinedControlsList)(nil)).Elem()
}

func (i GetZPAInspectionAllPredefinedControlsListArray) ToGetZPAInspectionAllPredefinedControlsListArrayOutput() GetZPAInspectionAllPredefinedControlsListArrayOutput {
	return i.ToGetZPAInspectionAllPredefinedControlsListArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionAllPredefinedControlsListArray) ToGetZPAInspectionAllPredefinedControlsListArrayOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionAllPredefinedControlsListArrayOutput)
}

type GetZPAInspectionAllPredefinedControlsListOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionAllPredefinedControlsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsList)(nil)).Elem()
}

func (o GetZPAInspectionAllPredefinedControlsListOutput) ToGetZPAInspectionAllPredefinedControlsListOutput() GetZPAInspectionAllPredefinedControlsListOutput {
	return o
}

func (o GetZPAInspectionAllPredefinedControlsListOutput) ToGetZPAInspectionAllPredefinedControlsListOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListOutput {
	return o
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Action }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) ActionValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.ActionValue }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) AssociatedInspectionProfileNames() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) []GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName {
		return v.AssociatedInspectionProfileNames
	}).(GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) Attachment() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Attachment }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) ControlGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.ControlGroup }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) ControlNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.ControlNumber }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) DefaultActionValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.DefaultActionValue }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Description }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAInspectionAllPredefinedControlsListOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) ParanoiaLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.ParanoiaLevel }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Severity }).(pulumi.StringOutput)
}

// The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
func (o GetZPAInspectionAllPredefinedControlsListOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsList) string { return v.Version }).(pulumi.StringOutput)
}

type GetZPAInspectionAllPredefinedControlsListArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionAllPredefinedControlsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionAllPredefinedControlsList)(nil)).Elem()
}

func (o GetZPAInspectionAllPredefinedControlsListArrayOutput) ToGetZPAInspectionAllPredefinedControlsListArrayOutput() GetZPAInspectionAllPredefinedControlsListArrayOutput {
	return o
}

func (o GetZPAInspectionAllPredefinedControlsListArrayOutput) ToGetZPAInspectionAllPredefinedControlsListArrayOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListArrayOutput {
	return o
}

func (o GetZPAInspectionAllPredefinedControlsListArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionAllPredefinedControlsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionAllPredefinedControlsList {
		return vs[0].([]GetZPAInspectionAllPredefinedControlsList)[vs[1].(int)]
	}).(GetZPAInspectionAllPredefinedControlsListOutput)
}

type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName struct {
	// (string)
	Id string `pulumi:"id"`
	// (string)
	Name string `pulumi:"name"`
}

// GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameInput is an input type that accepts GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs and GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput values.
// You can construct a concrete instance of `GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameInput` via:
//
//	GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs{...}
type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameInput interface {
	pulumi.Input

	ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput
	ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutputWithContext(context.Context) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput
}

type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs struct {
	// (string)
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput {
	return i.ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutputWithContext(context.Background())
}

func (i GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput)
}

// GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayInput is an input type that accepts GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray and GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayInput` via:
//
//	GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray{ GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs{...} }
type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput
	ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutputWithContext(context.Context) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput
}

type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray []GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameInput

func (GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput {
	return i.ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput)
}

type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput {
	return o
}

func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput {
	return o
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName {
		return vs[0].([]GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileName)[vs[1].(int)]
	}).(GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput)
}

type GetZPAInspectionCustomControlsRule struct {
	Conditions []GetZPAInspectionCustomControlsRuleCondition `pulumi:"conditions"`
	Names      []string                                      `pulumi:"names"`
	Type       string                                        `pulumi:"type"`
}

// GetZPAInspectionCustomControlsRuleInput is an input type that accepts GetZPAInspectionCustomControlsRuleArgs and GetZPAInspectionCustomControlsRuleOutput values.
// You can construct a concrete instance of `GetZPAInspectionCustomControlsRuleInput` via:
//
//	GetZPAInspectionCustomControlsRuleArgs{...}
type GetZPAInspectionCustomControlsRuleInput interface {
	pulumi.Input

	ToGetZPAInspectionCustomControlsRuleOutput() GetZPAInspectionCustomControlsRuleOutput
	ToGetZPAInspectionCustomControlsRuleOutputWithContext(context.Context) GetZPAInspectionCustomControlsRuleOutput
}

type GetZPAInspectionCustomControlsRuleArgs struct {
	Conditions GetZPAInspectionCustomControlsRuleConditionArrayInput `pulumi:"conditions"`
	Names      pulumi.StringArrayInput                               `pulumi:"names"`
	Type       pulumi.StringInput                                    `pulumi:"type"`
}

func (GetZPAInspectionCustomControlsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (i GetZPAInspectionCustomControlsRuleArgs) ToGetZPAInspectionCustomControlsRuleOutput() GetZPAInspectionCustomControlsRuleOutput {
	return i.ToGetZPAInspectionCustomControlsRuleOutputWithContext(context.Background())
}

func (i GetZPAInspectionCustomControlsRuleArgs) ToGetZPAInspectionCustomControlsRuleOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionCustomControlsRuleOutput)
}

// GetZPAInspectionCustomControlsRuleArrayInput is an input type that accepts GetZPAInspectionCustomControlsRuleArray and GetZPAInspectionCustomControlsRuleArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionCustomControlsRuleArrayInput` via:
//
//	GetZPAInspectionCustomControlsRuleArray{ GetZPAInspectionCustomControlsRuleArgs{...} }
type GetZPAInspectionCustomControlsRuleArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionCustomControlsRuleArrayOutput() GetZPAInspectionCustomControlsRuleArrayOutput
	ToGetZPAInspectionCustomControlsRuleArrayOutputWithContext(context.Context) GetZPAInspectionCustomControlsRuleArrayOutput
}

type GetZPAInspectionCustomControlsRuleArray []GetZPAInspectionCustomControlsRuleInput

func (GetZPAInspectionCustomControlsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (i GetZPAInspectionCustomControlsRuleArray) ToGetZPAInspectionCustomControlsRuleArrayOutput() GetZPAInspectionCustomControlsRuleArrayOutput {
	return i.ToGetZPAInspectionCustomControlsRuleArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionCustomControlsRuleArray) ToGetZPAInspectionCustomControlsRuleArrayOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionCustomControlsRuleArrayOutput)
}

type GetZPAInspectionCustomControlsRuleOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionCustomControlsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (o GetZPAInspectionCustomControlsRuleOutput) ToGetZPAInspectionCustomControlsRuleOutput() GetZPAInspectionCustomControlsRuleOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleOutput) ToGetZPAInspectionCustomControlsRuleOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleOutput) Conditions() GetZPAInspectionCustomControlsRuleConditionArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionCustomControlsRule) []GetZPAInspectionCustomControlsRuleCondition {
		return v.Conditions
	}).(GetZPAInspectionCustomControlsRuleConditionArrayOutput)
}

func (o GetZPAInspectionCustomControlsRuleOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionCustomControlsRule) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetZPAInspectionCustomControlsRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionCustomControlsRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetZPAInspectionCustomControlsRuleArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionCustomControlsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionCustomControlsRule)(nil)).Elem()
}

func (o GetZPAInspectionCustomControlsRuleArrayOutput) ToGetZPAInspectionCustomControlsRuleArrayOutput() GetZPAInspectionCustomControlsRuleArrayOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleArrayOutput) ToGetZPAInspectionCustomControlsRuleArrayOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleArrayOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionCustomControlsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionCustomControlsRule {
		return vs[0].([]GetZPAInspectionCustomControlsRule)[vs[1].(int)]
	}).(GetZPAInspectionCustomControlsRuleOutput)
}

type GetZPAInspectionCustomControlsRuleCondition struct {
	Lhs string `pulumi:"lhs"`
	Op  string `pulumi:"op"`
	Rhs string `pulumi:"rhs"`
}

// GetZPAInspectionCustomControlsRuleConditionInput is an input type that accepts GetZPAInspectionCustomControlsRuleConditionArgs and GetZPAInspectionCustomControlsRuleConditionOutput values.
// You can construct a concrete instance of `GetZPAInspectionCustomControlsRuleConditionInput` via:
//
//	GetZPAInspectionCustomControlsRuleConditionArgs{...}
type GetZPAInspectionCustomControlsRuleConditionInput interface {
	pulumi.Input

	ToGetZPAInspectionCustomControlsRuleConditionOutput() GetZPAInspectionCustomControlsRuleConditionOutput
	ToGetZPAInspectionCustomControlsRuleConditionOutputWithContext(context.Context) GetZPAInspectionCustomControlsRuleConditionOutput
}

type GetZPAInspectionCustomControlsRuleConditionArgs struct {
	Lhs pulumi.StringInput `pulumi:"lhs"`
	Op  pulumi.StringInput `pulumi:"op"`
	Rhs pulumi.StringInput `pulumi:"rhs"`
}

func (GetZPAInspectionCustomControlsRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionCustomControlsRuleCondition)(nil)).Elem()
}

func (i GetZPAInspectionCustomControlsRuleConditionArgs) ToGetZPAInspectionCustomControlsRuleConditionOutput() GetZPAInspectionCustomControlsRuleConditionOutput {
	return i.ToGetZPAInspectionCustomControlsRuleConditionOutputWithContext(context.Background())
}

func (i GetZPAInspectionCustomControlsRuleConditionArgs) ToGetZPAInspectionCustomControlsRuleConditionOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionCustomControlsRuleConditionOutput)
}

// GetZPAInspectionCustomControlsRuleConditionArrayInput is an input type that accepts GetZPAInspectionCustomControlsRuleConditionArray and GetZPAInspectionCustomControlsRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionCustomControlsRuleConditionArrayInput` via:
//
//	GetZPAInspectionCustomControlsRuleConditionArray{ GetZPAInspectionCustomControlsRuleConditionArgs{...} }
type GetZPAInspectionCustomControlsRuleConditionArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionCustomControlsRuleConditionArrayOutput() GetZPAInspectionCustomControlsRuleConditionArrayOutput
	ToGetZPAInspectionCustomControlsRuleConditionArrayOutputWithContext(context.Context) GetZPAInspectionCustomControlsRuleConditionArrayOutput
}

type GetZPAInspectionCustomControlsRuleConditionArray []GetZPAInspectionCustomControlsRuleConditionInput

func (GetZPAInspectionCustomControlsRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionCustomControlsRuleCondition)(nil)).Elem()
}

func (i GetZPAInspectionCustomControlsRuleConditionArray) ToGetZPAInspectionCustomControlsRuleConditionArrayOutput() GetZPAInspectionCustomControlsRuleConditionArrayOutput {
	return i.ToGetZPAInspectionCustomControlsRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionCustomControlsRuleConditionArray) ToGetZPAInspectionCustomControlsRuleConditionArrayOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionCustomControlsRuleConditionArrayOutput)
}

type GetZPAInspectionCustomControlsRuleConditionOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionCustomControlsRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionCustomControlsRuleCondition)(nil)).Elem()
}

func (o GetZPAInspectionCustomControlsRuleConditionOutput) ToGetZPAInspectionCustomControlsRuleConditionOutput() GetZPAInspectionCustomControlsRuleConditionOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleConditionOutput) ToGetZPAInspectionCustomControlsRuleConditionOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleConditionOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleConditionOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionCustomControlsRuleCondition) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o GetZPAInspectionCustomControlsRuleConditionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionCustomControlsRuleCondition) string { return v.Op }).(pulumi.StringOutput)
}

func (o GetZPAInspectionCustomControlsRuleConditionOutput) Rhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionCustomControlsRuleCondition) string { return v.Rhs }).(pulumi.StringOutput)
}

type GetZPAInspectionCustomControlsRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionCustomControlsRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionCustomControlsRuleCondition)(nil)).Elem()
}

func (o GetZPAInspectionCustomControlsRuleConditionArrayOutput) ToGetZPAInspectionCustomControlsRuleConditionArrayOutput() GetZPAInspectionCustomControlsRuleConditionArrayOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleConditionArrayOutput) ToGetZPAInspectionCustomControlsRuleConditionArrayOutputWithContext(ctx context.Context) GetZPAInspectionCustomControlsRuleConditionArrayOutput {
	return o
}

func (o GetZPAInspectionCustomControlsRuleConditionArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionCustomControlsRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionCustomControlsRuleCondition {
		return vs[0].([]GetZPAInspectionCustomControlsRuleCondition)[vs[1].(int)]
	}).(GetZPAInspectionCustomControlsRuleConditionOutput)
}

type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName struct {
	// (Computed)
	Id string `pulumi:"id"`
	// The name of the predefined control.
	Name string `pulumi:"name"`
}

// GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameInput is an input type that accepts GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs and GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput values.
// You can construct a concrete instance of `GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameInput` via:
//
//	GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs{...}
type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameInput interface {
	pulumi.Input

	ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput() GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput
	ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutputWithContext(context.Context) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput
}

type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs struct {
	// (Computed)
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the predefined control.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput() GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput {
	return i.ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutputWithContext(context.Background())
}

func (i GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput)
}

// GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayInput is an input type that accepts GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray and GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayInput` via:
//
//	GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray{ GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs{...} }
type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput
	ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutputWithContext(context.Context) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput
}

type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray []GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameInput

func (GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput {
	return i.ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput)
}

type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput() GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput {
	return o
}

func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput {
	return o
}

// (Computed)
func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the predefined control.
func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName {
		return vs[0].([]GetZPAInspectionPredefinedControlsAssociatedInspectionProfileName)[vs[1].(int)]
	}).(GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput)
}

type GetZPAInspectionProfileControlsInfo struct {
	// (string) Control types. Supported Values: `CUSTOM`, `PREDEFINED`, `ZSCALER`
	ControlType string `pulumi:"controlType"`
	// (string) Control information counts `Long`
	Count string `pulumi:"count"`
}

// GetZPAInspectionProfileControlsInfoInput is an input type that accepts GetZPAInspectionProfileControlsInfoArgs and GetZPAInspectionProfileControlsInfoOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileControlsInfoInput` via:
//
//	GetZPAInspectionProfileControlsInfoArgs{...}
type GetZPAInspectionProfileControlsInfoInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileControlsInfoOutput() GetZPAInspectionProfileControlsInfoOutput
	ToGetZPAInspectionProfileControlsInfoOutputWithContext(context.Context) GetZPAInspectionProfileControlsInfoOutput
}

type GetZPAInspectionProfileControlsInfoArgs struct {
	// (string) Control types. Supported Values: `CUSTOM`, `PREDEFINED`, `ZSCALER`
	ControlType pulumi.StringInput `pulumi:"controlType"`
	// (string) Control information counts `Long`
	Count pulumi.StringInput `pulumi:"count"`
}

func (GetZPAInspectionProfileControlsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (i GetZPAInspectionProfileControlsInfoArgs) ToGetZPAInspectionProfileControlsInfoOutput() GetZPAInspectionProfileControlsInfoOutput {
	return i.ToGetZPAInspectionProfileControlsInfoOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileControlsInfoArgs) ToGetZPAInspectionProfileControlsInfoOutputWithContext(ctx context.Context) GetZPAInspectionProfileControlsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileControlsInfoOutput)
}

// GetZPAInspectionProfileControlsInfoArrayInput is an input type that accepts GetZPAInspectionProfileControlsInfoArray and GetZPAInspectionProfileControlsInfoArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileControlsInfoArrayInput` via:
//
//	GetZPAInspectionProfileControlsInfoArray{ GetZPAInspectionProfileControlsInfoArgs{...} }
type GetZPAInspectionProfileControlsInfoArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileControlsInfoArrayOutput() GetZPAInspectionProfileControlsInfoArrayOutput
	ToGetZPAInspectionProfileControlsInfoArrayOutputWithContext(context.Context) GetZPAInspectionProfileControlsInfoArrayOutput
}

type GetZPAInspectionProfileControlsInfoArray []GetZPAInspectionProfileControlsInfoInput

func (GetZPAInspectionProfileControlsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (i GetZPAInspectionProfileControlsInfoArray) ToGetZPAInspectionProfileControlsInfoArrayOutput() GetZPAInspectionProfileControlsInfoArrayOutput {
	return i.ToGetZPAInspectionProfileControlsInfoArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileControlsInfoArray) ToGetZPAInspectionProfileControlsInfoArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileControlsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileControlsInfoArrayOutput)
}

type GetZPAInspectionProfileControlsInfoOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileControlsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (o GetZPAInspectionProfileControlsInfoOutput) ToGetZPAInspectionProfileControlsInfoOutput() GetZPAInspectionProfileControlsInfoOutput {
	return o
}

func (o GetZPAInspectionProfileControlsInfoOutput) ToGetZPAInspectionProfileControlsInfoOutputWithContext(ctx context.Context) GetZPAInspectionProfileControlsInfoOutput {
	return o
}

// (string) Control types. Supported Values: `CUSTOM`, `PREDEFINED`, `ZSCALER`
func (o GetZPAInspectionProfileControlsInfoOutput) ControlType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileControlsInfo) string { return v.ControlType }).(pulumi.StringOutput)
}

// (string) Control information counts `Long`
func (o GetZPAInspectionProfileControlsInfoOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileControlsInfo) string { return v.Count }).(pulumi.StringOutput)
}

type GetZPAInspectionProfileControlsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileControlsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileControlsInfo)(nil)).Elem()
}

func (o GetZPAInspectionProfileControlsInfoArrayOutput) ToGetZPAInspectionProfileControlsInfoArrayOutput() GetZPAInspectionProfileControlsInfoArrayOutput {
	return o
}

func (o GetZPAInspectionProfileControlsInfoArrayOutput) ToGetZPAInspectionProfileControlsInfoArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileControlsInfoArrayOutput {
	return o
}

func (o GetZPAInspectionProfileControlsInfoArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfileControlsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfileControlsInfo {
		return vs[0].([]GetZPAInspectionProfileControlsInfo)[vs[1].(int)]
	}).(GetZPAInspectionProfileControlsInfoOutput)
}

type GetZPAInspectionProfileCustomControl struct {
	// (string) The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action string `pulumi:"action"`
	// (string) Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue string `pulumi:"actionValue"`
	// (string) Name of the inspection profile
	AssociatedInspectionProfileNames []GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName `pulumi:"associatedInspectionProfileNames"`
	ControlNumber                    string                                                                `pulumi:"controlNumber"`
	// (string) Custom controls string in JSON format
	ControlRuleJson    string `pulumi:"controlRuleJson"`
	CreationTime       string `pulumi:"creationTime"`
	DefaultAction      string `pulumi:"defaultAction"`
	DefaultActionValue string `pulumi:"defaultActionValue"`
	// (string) Description of the inspection profile.
	Description string `pulumi:"description"`
	// This field defines the id of the application server.
	Id           string `pulumi:"id"`
	ModifiedBy   string `pulumi:"modifiedBy"`
	ModifiedTime string `pulumi:"modifiedTime"`
	// This field defines the name of the server.
	Name string `pulumi:"name"`
	// (string) OWASP Predefined Paranoia Level. Range: [1-4], inclusive
	ParanoiaLevel string `pulumi:"paranoiaLevel"`
	// (string) Rules of the custom controls applied as conditions `JSON`
	Rules    []GetZPAInspectionProfileCustomControlRule `pulumi:"rules"`
	Severity string                                     `pulumi:"severity"`
	// (string) Type value for the rules
	Type string `pulumi:"type"`
	// (string) The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
	Version string `pulumi:"version"`
}

// GetZPAInspectionProfileCustomControlInput is an input type that accepts GetZPAInspectionProfileCustomControlArgs and GetZPAInspectionProfileCustomControlOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlInput` via:
//
//	GetZPAInspectionProfileCustomControlArgs{...}
type GetZPAInspectionProfileCustomControlInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlOutput() GetZPAInspectionProfileCustomControlOutput
	ToGetZPAInspectionProfileCustomControlOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlOutput
}

type GetZPAInspectionProfileCustomControlArgs struct {
	// (string) The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action pulumi.StringInput `pulumi:"action"`
	// (string) Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue pulumi.StringInput `pulumi:"actionValue"`
	// (string) Name of the inspection profile
	AssociatedInspectionProfileNames GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayInput `pulumi:"associatedInspectionProfileNames"`
	ControlNumber                    pulumi.StringInput                                                            `pulumi:"controlNumber"`
	// (string) Custom controls string in JSON format
	ControlRuleJson    pulumi.StringInput `pulumi:"controlRuleJson"`
	CreationTime       pulumi.StringInput `pulumi:"creationTime"`
	DefaultAction      pulumi.StringInput `pulumi:"defaultAction"`
	DefaultActionValue pulumi.StringInput `pulumi:"defaultActionValue"`
	// (string) Description of the inspection profile.
	Description pulumi.StringInput `pulumi:"description"`
	// This field defines the id of the application server.
	Id           pulumi.StringInput `pulumi:"id"`
	ModifiedBy   pulumi.StringInput `pulumi:"modifiedBy"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// This field defines the name of the server.
	Name pulumi.StringInput `pulumi:"name"`
	// (string) OWASP Predefined Paranoia Level. Range: [1-4], inclusive
	ParanoiaLevel pulumi.StringInput `pulumi:"paranoiaLevel"`
	// (string) Rules of the custom controls applied as conditions `JSON`
	Rules    GetZPAInspectionProfileCustomControlRuleArrayInput `pulumi:"rules"`
	Severity pulumi.StringInput                                 `pulumi:"severity"`
	// (string) Type value for the rules
	Type pulumi.StringInput `pulumi:"type"`
	// (string) The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetZPAInspectionProfileCustomControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlArgs) ToGetZPAInspectionProfileCustomControlOutput() GetZPAInspectionProfileCustomControlOutput {
	return i.ToGetZPAInspectionProfileCustomControlOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlArgs) ToGetZPAInspectionProfileCustomControlOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlOutput)
}

// GetZPAInspectionProfileCustomControlArrayInput is an input type that accepts GetZPAInspectionProfileCustomControlArray and GetZPAInspectionProfileCustomControlArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlArrayInput` via:
//
//	GetZPAInspectionProfileCustomControlArray{ GetZPAInspectionProfileCustomControlArgs{...} }
type GetZPAInspectionProfileCustomControlArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlArrayOutput() GetZPAInspectionProfileCustomControlArrayOutput
	ToGetZPAInspectionProfileCustomControlArrayOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlArrayOutput
}

type GetZPAInspectionProfileCustomControlArray []GetZPAInspectionProfileCustomControlInput

func (GetZPAInspectionProfileCustomControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlArray) ToGetZPAInspectionProfileCustomControlArrayOutput() GetZPAInspectionProfileCustomControlArrayOutput {
	return i.ToGetZPAInspectionProfileCustomControlArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlArray) ToGetZPAInspectionProfileCustomControlArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlArrayOutput)
}

type GetZPAInspectionProfileCustomControlOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlOutput) ToGetZPAInspectionProfileCustomControlOutput() GetZPAInspectionProfileCustomControlOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlOutput) ToGetZPAInspectionProfileCustomControlOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlOutput {
	return o
}

// (string) The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
func (o GetZPAInspectionProfileCustomControlOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Action }).(pulumi.StringOutput)
}

// (string) Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
func (o GetZPAInspectionProfileCustomControlOutput) ActionValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.ActionValue }).(pulumi.StringOutput)
}

// (string) Name of the inspection profile
func (o GetZPAInspectionProfileCustomControlOutput) AssociatedInspectionProfileNames() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) []GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName {
		return v.AssociatedInspectionProfileNames
	}).(GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) ControlNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.ControlNumber }).(pulumi.StringOutput)
}

// (string) Custom controls string in JSON format
func (o GetZPAInspectionProfileCustomControlOutput) ControlRuleJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.ControlRuleJson }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.DefaultAction }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) DefaultActionValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.DefaultActionValue }).(pulumi.StringOutput)
}

// (string) Description of the inspection profile.
func (o GetZPAInspectionProfileCustomControlOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Description }).(pulumi.StringOutput)
}

// This field defines the id of the application server.
func (o GetZPAInspectionProfileCustomControlOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// This field defines the name of the server.
func (o GetZPAInspectionProfileCustomControlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Name }).(pulumi.StringOutput)
}

// (string) OWASP Predefined Paranoia Level. Range: [1-4], inclusive
func (o GetZPAInspectionProfileCustomControlOutput) ParanoiaLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.ParanoiaLevel }).(pulumi.StringOutput)
}

// (string) Rules of the custom controls applied as conditions `JSON`
func (o GetZPAInspectionProfileCustomControlOutput) Rules() GetZPAInspectionProfileCustomControlRuleArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) []GetZPAInspectionProfileCustomControlRule {
		return v.Rules
	}).(GetZPAInspectionProfileCustomControlRuleArrayOutput)
}

func (o GetZPAInspectionProfileCustomControlOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Severity }).(pulumi.StringOutput)
}

// (string) Type value for the rules
func (o GetZPAInspectionProfileCustomControlOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Type }).(pulumi.StringOutput)
}

// (string) The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
func (o GetZPAInspectionProfileCustomControlOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControl) string { return v.Version }).(pulumi.StringOutput)
}

type GetZPAInspectionProfileCustomControlArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControl)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlArrayOutput) ToGetZPAInspectionProfileCustomControlArrayOutput() GetZPAInspectionProfileCustomControlArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlArrayOutput) ToGetZPAInspectionProfileCustomControlArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfileCustomControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfileCustomControl {
		return vs[0].([]GetZPAInspectionProfileCustomControl)[vs[1].(int)]
	}).(GetZPAInspectionProfileCustomControlOutput)
}

type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName struct {
	// This field defines the id of the application server.
	Id string `pulumi:"id"`
	// This field defines the name of the server.
	Name string `pulumi:"name"`
}

// GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameInput is an input type that accepts GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs and GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameInput` via:
//
//	GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs{...}
type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput
	ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput
}

type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs struct {
	// This field defines the id of the application server.
	Id pulumi.StringInput `pulumi:"id"`
	// This field defines the name of the server.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput {
	return i.ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput)
}

// GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayInput is an input type that accepts GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray and GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayInput` via:
//
//	GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray{ GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs{...} }
type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput
	ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput
}

type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray []GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameInput

func (GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput {
	return i.ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput)
}

type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput {
	return o
}

// This field defines the id of the application server.
func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName) string { return v.Id }).(pulumi.StringOutput)
}

// This field defines the name of the server.
func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName {
		return vs[0].([]GetZPAInspectionProfileCustomControlAssociatedInspectionProfileName)[vs[1].(int)]
	}).(GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput)
}

type GetZPAInspectionProfileCustomControlRule struct {
	// (string)
	Conditions []GetZPAInspectionProfileCustomControlRuleCondition `pulumi:"conditions"`
	// (string) Name of the rules. If rules.type is set to `REQUEST_HEADERS`, `REQUEST_COOKIES`, or `RESPONSE_HEADERS`, the rules.name field is required.
	Names string `pulumi:"names"`
	// (string) Type value for the rules
	Type string `pulumi:"type"`
}

// GetZPAInspectionProfileCustomControlRuleInput is an input type that accepts GetZPAInspectionProfileCustomControlRuleArgs and GetZPAInspectionProfileCustomControlRuleOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlRuleInput` via:
//
//	GetZPAInspectionProfileCustomControlRuleArgs{...}
type GetZPAInspectionProfileCustomControlRuleInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlRuleOutput() GetZPAInspectionProfileCustomControlRuleOutput
	ToGetZPAInspectionProfileCustomControlRuleOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlRuleOutput
}

type GetZPAInspectionProfileCustomControlRuleArgs struct {
	// (string)
	Conditions GetZPAInspectionProfileCustomControlRuleConditionArrayInput `pulumi:"conditions"`
	// (string) Name of the rules. If rules.type is set to `REQUEST_HEADERS`, `REQUEST_COOKIES`, or `RESPONSE_HEADERS`, the rules.name field is required.
	Names pulumi.StringInput `pulumi:"names"`
	// (string) Type value for the rules
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetZPAInspectionProfileCustomControlRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControlRule)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlRuleArgs) ToGetZPAInspectionProfileCustomControlRuleOutput() GetZPAInspectionProfileCustomControlRuleOutput {
	return i.ToGetZPAInspectionProfileCustomControlRuleOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlRuleArgs) ToGetZPAInspectionProfileCustomControlRuleOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlRuleOutput)
}

// GetZPAInspectionProfileCustomControlRuleArrayInput is an input type that accepts GetZPAInspectionProfileCustomControlRuleArray and GetZPAInspectionProfileCustomControlRuleArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlRuleArrayInput` via:
//
//	GetZPAInspectionProfileCustomControlRuleArray{ GetZPAInspectionProfileCustomControlRuleArgs{...} }
type GetZPAInspectionProfileCustomControlRuleArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlRuleArrayOutput() GetZPAInspectionProfileCustomControlRuleArrayOutput
	ToGetZPAInspectionProfileCustomControlRuleArrayOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlRuleArrayOutput
}

type GetZPAInspectionProfileCustomControlRuleArray []GetZPAInspectionProfileCustomControlRuleInput

func (GetZPAInspectionProfileCustomControlRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControlRule)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlRuleArray) ToGetZPAInspectionProfileCustomControlRuleArrayOutput() GetZPAInspectionProfileCustomControlRuleArrayOutput {
	return i.ToGetZPAInspectionProfileCustomControlRuleArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlRuleArray) ToGetZPAInspectionProfileCustomControlRuleArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlRuleArrayOutput)
}

type GetZPAInspectionProfileCustomControlRuleOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControlRule)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlRuleOutput) ToGetZPAInspectionProfileCustomControlRuleOutput() GetZPAInspectionProfileCustomControlRuleOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlRuleOutput) ToGetZPAInspectionProfileCustomControlRuleOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleOutput {
	return o
}

// (string)
func (o GetZPAInspectionProfileCustomControlRuleOutput) Conditions() GetZPAInspectionProfileCustomControlRuleConditionArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlRule) []GetZPAInspectionProfileCustomControlRuleCondition {
		return v.Conditions
	}).(GetZPAInspectionProfileCustomControlRuleConditionArrayOutput)
}

// (string) Name of the rules. If rules.type is set to `REQUEST_HEADERS`, `REQUEST_COOKIES`, or `RESPONSE_HEADERS`, the rules.name field is required.
func (o GetZPAInspectionProfileCustomControlRuleOutput) Names() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlRule) string { return v.Names }).(pulumi.StringOutput)
}

// (string) Type value for the rules
func (o GetZPAInspectionProfileCustomControlRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetZPAInspectionProfileCustomControlRuleArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControlRule)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlRuleArrayOutput) ToGetZPAInspectionProfileCustomControlRuleArrayOutput() GetZPAInspectionProfileCustomControlRuleArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlRuleArrayOutput) ToGetZPAInspectionProfileCustomControlRuleArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlRuleArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfileCustomControlRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfileCustomControlRule {
		return vs[0].([]GetZPAInspectionProfileCustomControlRule)[vs[1].(int)]
	}).(GetZPAInspectionProfileCustomControlRuleOutput)
}

type GetZPAInspectionProfileCustomControlRuleCondition struct {
	// (string) Signifies the key for the object type Supported values: `SIZE`, `VALUE`
	Lhs string `pulumi:"lhs"`
	// (string) If lhs is set to SIZE, then the user may pass one of the following: `EQ: Equals`, `LE: Less than or equal to`, `GE: Greater than or equal to`. If the lhs is set to `VALUE`, then the user may pass one of the following: `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `RX`.
	Op string `pulumi:"op"`
	// (string) Denotes the value for the given object type. Its value depends on the key. If rules.type is set to REQUEST_METHOD, the conditions.rhs field must have one of the following values: `GET`,`HEAD`, `POST`, `OPTIONS`, `PUT`, `DELETE`, `TRACE`
	Rhs string `pulumi:"rhs"`
}

// GetZPAInspectionProfileCustomControlRuleConditionInput is an input type that accepts GetZPAInspectionProfileCustomControlRuleConditionArgs and GetZPAInspectionProfileCustomControlRuleConditionOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlRuleConditionInput` via:
//
//	GetZPAInspectionProfileCustomControlRuleConditionArgs{...}
type GetZPAInspectionProfileCustomControlRuleConditionInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlRuleConditionOutput() GetZPAInspectionProfileCustomControlRuleConditionOutput
	ToGetZPAInspectionProfileCustomControlRuleConditionOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlRuleConditionOutput
}

type GetZPAInspectionProfileCustomControlRuleConditionArgs struct {
	// (string) Signifies the key for the object type Supported values: `SIZE`, `VALUE`
	Lhs pulumi.StringInput `pulumi:"lhs"`
	// (string) If lhs is set to SIZE, then the user may pass one of the following: `EQ: Equals`, `LE: Less than or equal to`, `GE: Greater than or equal to`. If the lhs is set to `VALUE`, then the user may pass one of the following: `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `RX`.
	Op pulumi.StringInput `pulumi:"op"`
	// (string) Denotes the value for the given object type. Its value depends on the key. If rules.type is set to REQUEST_METHOD, the conditions.rhs field must have one of the following values: `GET`,`HEAD`, `POST`, `OPTIONS`, `PUT`, `DELETE`, `TRACE`
	Rhs pulumi.StringInput `pulumi:"rhs"`
}

func (GetZPAInspectionProfileCustomControlRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControlRuleCondition)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlRuleConditionArgs) ToGetZPAInspectionProfileCustomControlRuleConditionOutput() GetZPAInspectionProfileCustomControlRuleConditionOutput {
	return i.ToGetZPAInspectionProfileCustomControlRuleConditionOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlRuleConditionArgs) ToGetZPAInspectionProfileCustomControlRuleConditionOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlRuleConditionOutput)
}

// GetZPAInspectionProfileCustomControlRuleConditionArrayInput is an input type that accepts GetZPAInspectionProfileCustomControlRuleConditionArray and GetZPAInspectionProfileCustomControlRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfileCustomControlRuleConditionArrayInput` via:
//
//	GetZPAInspectionProfileCustomControlRuleConditionArray{ GetZPAInspectionProfileCustomControlRuleConditionArgs{...} }
type GetZPAInspectionProfileCustomControlRuleConditionArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutput() GetZPAInspectionProfileCustomControlRuleConditionArrayOutput
	ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutputWithContext(context.Context) GetZPAInspectionProfileCustomControlRuleConditionArrayOutput
}

type GetZPAInspectionProfileCustomControlRuleConditionArray []GetZPAInspectionProfileCustomControlRuleConditionInput

func (GetZPAInspectionProfileCustomControlRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControlRuleCondition)(nil)).Elem()
}

func (i GetZPAInspectionProfileCustomControlRuleConditionArray) ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutput() GetZPAInspectionProfileCustomControlRuleConditionArrayOutput {
	return i.ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfileCustomControlRuleConditionArray) ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfileCustomControlRuleConditionArrayOutput)
}

type GetZPAInspectionProfileCustomControlRuleConditionOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfileCustomControlRuleCondition)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlRuleConditionOutput) ToGetZPAInspectionProfileCustomControlRuleConditionOutput() GetZPAInspectionProfileCustomControlRuleConditionOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlRuleConditionOutput) ToGetZPAInspectionProfileCustomControlRuleConditionOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleConditionOutput {
	return o
}

// (string) Signifies the key for the object type Supported values: `SIZE`, `VALUE`
func (o GetZPAInspectionProfileCustomControlRuleConditionOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlRuleCondition) string { return v.Lhs }).(pulumi.StringOutput)
}

// (string) If lhs is set to SIZE, then the user may pass one of the following: `EQ: Equals`, `LE: Less than or equal to`, `GE: Greater than or equal to`. If the lhs is set to `VALUE`, then the user may pass one of the following: `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `RX`.
func (o GetZPAInspectionProfileCustomControlRuleConditionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlRuleCondition) string { return v.Op }).(pulumi.StringOutput)
}

// (string) Denotes the value for the given object type. Its value depends on the key. If rules.type is set to REQUEST_METHOD, the conditions.rhs field must have one of the following values: `GET`,`HEAD`, `POST`, `OPTIONS`, `PUT`, `DELETE`, `TRACE`
func (o GetZPAInspectionProfileCustomControlRuleConditionOutput) Rhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfileCustomControlRuleCondition) string { return v.Rhs }).(pulumi.StringOutput)
}

type GetZPAInspectionProfileCustomControlRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfileCustomControlRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfileCustomControlRuleCondition)(nil)).Elem()
}

func (o GetZPAInspectionProfileCustomControlRuleConditionArrayOutput) ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutput() GetZPAInspectionProfileCustomControlRuleConditionArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlRuleConditionArrayOutput) ToGetZPAInspectionProfileCustomControlRuleConditionArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfileCustomControlRuleConditionArrayOutput {
	return o
}

func (o GetZPAInspectionProfileCustomControlRuleConditionArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfileCustomControlRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfileCustomControlRuleCondition {
		return vs[0].([]GetZPAInspectionProfileCustomControlRuleCondition)[vs[1].(int)]
	}).(GetZPAInspectionProfileCustomControlRuleConditionOutput)
}

type GetZPAInspectionProfilePredefinedControl struct {
	// (string) The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action string `pulumi:"action"`
	// (string) Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue string `pulumi:"actionValue"`
	// (string) Name of the inspection profile
	AssociatedInspectionProfileNames []GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName `pulumi:"associatedInspectionProfileNames"`
	// (string) Control attachment
	Attachment string `pulumi:"attachment"`
	// (string) Control group
	ControlGroup       string `pulumi:"controlGroup"`
	ControlNumber      string `pulumi:"controlNumber"`
	CreationTime       string `pulumi:"creationTime"`
	DefaultAction      string `pulumi:"defaultAction"`
	DefaultActionValue string `pulumi:"defaultActionValue"`
	// (string) Description of the inspection profile.
	Description string `pulumi:"description"`
	// This field defines the id of the application server.
	Id           string `pulumi:"id"`
	ModifiedBy   string `pulumi:"modifiedBy"`
	ModifiedTime string `pulumi:"modifiedTime"`
	// This field defines the name of the server.
	Name string `pulumi:"name"`
	// (string) OWASP Predefined Paranoia Level. Range: [1-4], inclusive
	ParanoiaLevel string `pulumi:"paranoiaLevel"`
	Severity      string `pulumi:"severity"`
	// (string) The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
	Version string `pulumi:"version"`
}

// GetZPAInspectionProfilePredefinedControlInput is an input type that accepts GetZPAInspectionProfilePredefinedControlArgs and GetZPAInspectionProfilePredefinedControlOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfilePredefinedControlInput` via:
//
//	GetZPAInspectionProfilePredefinedControlArgs{...}
type GetZPAInspectionProfilePredefinedControlInput interface {
	pulumi.Input

	ToGetZPAInspectionProfilePredefinedControlOutput() GetZPAInspectionProfilePredefinedControlOutput
	ToGetZPAInspectionProfilePredefinedControlOutputWithContext(context.Context) GetZPAInspectionProfilePredefinedControlOutput
}

type GetZPAInspectionProfilePredefinedControlArgs struct {
	// (string) The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
	Action pulumi.StringInput `pulumi:"action"`
	// (string) Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
	ActionValue pulumi.StringInput `pulumi:"actionValue"`
	// (string) Name of the inspection profile
	AssociatedInspectionProfileNames GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayInput `pulumi:"associatedInspectionProfileNames"`
	// (string) Control attachment
	Attachment pulumi.StringInput `pulumi:"attachment"`
	// (string) Control group
	ControlGroup       pulumi.StringInput `pulumi:"controlGroup"`
	ControlNumber      pulumi.StringInput `pulumi:"controlNumber"`
	CreationTime       pulumi.StringInput `pulumi:"creationTime"`
	DefaultAction      pulumi.StringInput `pulumi:"defaultAction"`
	DefaultActionValue pulumi.StringInput `pulumi:"defaultActionValue"`
	// (string) Description of the inspection profile.
	Description pulumi.StringInput `pulumi:"description"`
	// This field defines the id of the application server.
	Id           pulumi.StringInput `pulumi:"id"`
	ModifiedBy   pulumi.StringInput `pulumi:"modifiedBy"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// This field defines the name of the server.
	Name pulumi.StringInput `pulumi:"name"`
	// (string) OWASP Predefined Paranoia Level. Range: [1-4], inclusive
	ParanoiaLevel pulumi.StringInput `pulumi:"paranoiaLevel"`
	Severity      pulumi.StringInput `pulumi:"severity"`
	// (string) The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetZPAInspectionProfilePredefinedControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (i GetZPAInspectionProfilePredefinedControlArgs) ToGetZPAInspectionProfilePredefinedControlOutput() GetZPAInspectionProfilePredefinedControlOutput {
	return i.ToGetZPAInspectionProfilePredefinedControlOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfilePredefinedControlArgs) ToGetZPAInspectionProfilePredefinedControlOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfilePredefinedControlOutput)
}

// GetZPAInspectionProfilePredefinedControlArrayInput is an input type that accepts GetZPAInspectionProfilePredefinedControlArray and GetZPAInspectionProfilePredefinedControlArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfilePredefinedControlArrayInput` via:
//
//	GetZPAInspectionProfilePredefinedControlArray{ GetZPAInspectionProfilePredefinedControlArgs{...} }
type GetZPAInspectionProfilePredefinedControlArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfilePredefinedControlArrayOutput() GetZPAInspectionProfilePredefinedControlArrayOutput
	ToGetZPAInspectionProfilePredefinedControlArrayOutputWithContext(context.Context) GetZPAInspectionProfilePredefinedControlArrayOutput
}

type GetZPAInspectionProfilePredefinedControlArray []GetZPAInspectionProfilePredefinedControlInput

func (GetZPAInspectionProfilePredefinedControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (i GetZPAInspectionProfilePredefinedControlArray) ToGetZPAInspectionProfilePredefinedControlArrayOutput() GetZPAInspectionProfilePredefinedControlArrayOutput {
	return i.ToGetZPAInspectionProfilePredefinedControlArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfilePredefinedControlArray) ToGetZPAInspectionProfilePredefinedControlArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfilePredefinedControlArrayOutput)
}

type GetZPAInspectionProfilePredefinedControlOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfilePredefinedControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (o GetZPAInspectionProfilePredefinedControlOutput) ToGetZPAInspectionProfilePredefinedControlOutput() GetZPAInspectionProfilePredefinedControlOutput {
	return o
}

func (o GetZPAInspectionProfilePredefinedControlOutput) ToGetZPAInspectionProfilePredefinedControlOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlOutput {
	return o
}

// (string) The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
func (o GetZPAInspectionProfilePredefinedControlOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Action }).(pulumi.StringOutput)
}

// (string) Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
func (o GetZPAInspectionProfilePredefinedControlOutput) ActionValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.ActionValue }).(pulumi.StringOutput)
}

// (string) Name of the inspection profile
func (o GetZPAInspectionProfilePredefinedControlOutput) AssociatedInspectionProfileNames() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) []GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName {
		return v.AssociatedInspectionProfileNames
	}).(GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput)
}

// (string) Control attachment
func (o GetZPAInspectionProfilePredefinedControlOutput) Attachment() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Attachment }).(pulumi.StringOutput)
}

// (string) Control group
func (o GetZPAInspectionProfilePredefinedControlOutput) ControlGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.ControlGroup }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) ControlNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.ControlNumber }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.DefaultAction }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) DefaultActionValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.DefaultActionValue }).(pulumi.StringOutput)
}

// (string) Description of the inspection profile.
func (o GetZPAInspectionProfilePredefinedControlOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Description }).(pulumi.StringOutput)
}

// This field defines the id of the application server.
func (o GetZPAInspectionProfilePredefinedControlOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// This field defines the name of the server.
func (o GetZPAInspectionProfilePredefinedControlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Name }).(pulumi.StringOutput)
}

// (string) OWASP Predefined Paranoia Level. Range: [1-4], inclusive
func (o GetZPAInspectionProfilePredefinedControlOutput) ParanoiaLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.ParanoiaLevel }).(pulumi.StringOutput)
}

func (o GetZPAInspectionProfilePredefinedControlOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Severity }).(pulumi.StringOutput)
}

// (string) The version of the predefined control, the default is: `OWASP_CRS/3.3.0`
func (o GetZPAInspectionProfilePredefinedControlOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControl) string { return v.Version }).(pulumi.StringOutput)
}

type GetZPAInspectionProfilePredefinedControlArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfilePredefinedControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfilePredefinedControl)(nil)).Elem()
}

func (o GetZPAInspectionProfilePredefinedControlArrayOutput) ToGetZPAInspectionProfilePredefinedControlArrayOutput() GetZPAInspectionProfilePredefinedControlArrayOutput {
	return o
}

func (o GetZPAInspectionProfilePredefinedControlArrayOutput) ToGetZPAInspectionProfilePredefinedControlArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlArrayOutput {
	return o
}

func (o GetZPAInspectionProfilePredefinedControlArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfilePredefinedControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfilePredefinedControl {
		return vs[0].([]GetZPAInspectionProfilePredefinedControl)[vs[1].(int)]
	}).(GetZPAInspectionProfilePredefinedControlOutput)
}

type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName struct {
	// This field defines the id of the application server.
	Id string `pulumi:"id"`
	// This field defines the name of the server.
	Name string `pulumi:"name"`
}

// GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameInput is an input type that accepts GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs and GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameInput` via:
//
//	GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs{...}
type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameInput interface {
	pulumi.Input

	ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput
	ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutputWithContext(context.Context) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput
}

type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs struct {
	// This field defines the id of the application server.
	Id pulumi.StringInput `pulumi:"id"`
	// This field defines the name of the server.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput {
	return i.ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput)
}

// GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayInput is an input type that accepts GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray and GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput values.
// You can construct a concrete instance of `GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayInput` via:
//
//	GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray{ GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs{...} }
type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayInput interface {
	pulumi.Input

	ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput
	ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutputWithContext(context.Context) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput
}

type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray []GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameInput

func (GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (i GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput {
	return i.ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutputWithContext(context.Background())
}

func (i GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput)
}

type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput {
	return o
}

func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput {
	return o
}

// This field defines the id of the application server.
func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName) string { return v.Id }).(pulumi.StringOutput)
}

// This field defines the name of the server.
func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput struct{ *pulumi.OutputState }

func (GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName)(nil)).Elem()
}

func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput() GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput) ToGetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutputWithContext(ctx context.Context) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput {
	return o
}

func (o GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput) Index(i pulumi.IntInput) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName {
		return vs[0].([]GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileName)[vs[1].(int)]
	}).(GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput)
}

type GetZPALSSConfigControllerConfig struct {
	// (string)
	AuditMessage string `pulumi:"auditMessage"`
	// (string)
	Description string `pulumi:"description"`
	// (bool)
	Enabled bool `pulumi:"enabled"`
	// (string)
	Filters []string `pulumi:"filters"`
	// (string)
	Format string `pulumi:"format"`
	// This field defines the name of the log streaming resource.
	Id string `pulumi:"id"`
	// (string)
	LssHost string `pulumi:"lssHost"`
	// (string)
	LssPort string `pulumi:"lssPort"`
	// This field defines the name of the log streaming resource.
	Name string `pulumi:"name"`
	// (string)
	SourceLogType string `pulumi:"sourceLogType"`
	UseTls        bool   `pulumi:"useTls"`
}

// GetZPALSSConfigControllerConfigInput is an input type that accepts GetZPALSSConfigControllerConfigArgs and GetZPALSSConfigControllerConfigOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerConfigInput` via:
//
//	GetZPALSSConfigControllerConfigArgs{...}
type GetZPALSSConfigControllerConfigInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerConfigOutput() GetZPALSSConfigControllerConfigOutput
	ToGetZPALSSConfigControllerConfigOutputWithContext(context.Context) GetZPALSSConfigControllerConfigOutput
}

type GetZPALSSConfigControllerConfigArgs struct {
	// (string)
	AuditMessage pulumi.StringInput `pulumi:"auditMessage"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (bool)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// (string)
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// (string)
	Format pulumi.StringInput `pulumi:"format"`
	// This field defines the name of the log streaming resource.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	LssHost pulumi.StringInput `pulumi:"lssHost"`
	// (string)
	LssPort pulumi.StringInput `pulumi:"lssPort"`
	// This field defines the name of the log streaming resource.
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	SourceLogType pulumi.StringInput `pulumi:"sourceLogType"`
	UseTls        pulumi.BoolInput   `pulumi:"useTls"`
}

func (GetZPALSSConfigControllerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerConfig)(nil)).Elem()
}

func (i GetZPALSSConfigControllerConfigArgs) ToGetZPALSSConfigControllerConfigOutput() GetZPALSSConfigControllerConfigOutput {
	return i.ToGetZPALSSConfigControllerConfigOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerConfigArgs) ToGetZPALSSConfigControllerConfigOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerConfigOutput)
}

// GetZPALSSConfigControllerConfigArrayInput is an input type that accepts GetZPALSSConfigControllerConfigArray and GetZPALSSConfigControllerConfigArrayOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerConfigArrayInput` via:
//
//	GetZPALSSConfigControllerConfigArray{ GetZPALSSConfigControllerConfigArgs{...} }
type GetZPALSSConfigControllerConfigArrayInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerConfigArrayOutput() GetZPALSSConfigControllerConfigArrayOutput
	ToGetZPALSSConfigControllerConfigArrayOutputWithContext(context.Context) GetZPALSSConfigControllerConfigArrayOutput
}

type GetZPALSSConfigControllerConfigArray []GetZPALSSConfigControllerConfigInput

func (GetZPALSSConfigControllerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerConfig)(nil)).Elem()
}

func (i GetZPALSSConfigControllerConfigArray) ToGetZPALSSConfigControllerConfigArrayOutput() GetZPALSSConfigControllerConfigArrayOutput {
	return i.ToGetZPALSSConfigControllerConfigArrayOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerConfigArray) ToGetZPALSSConfigControllerConfigArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerConfigArrayOutput)
}

type GetZPALSSConfigControllerConfigOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerConfig)(nil)).Elem()
}

func (o GetZPALSSConfigControllerConfigOutput) ToGetZPALSSConfigControllerConfigOutput() GetZPALSSConfigControllerConfigOutput {
	return o
}

func (o GetZPALSSConfigControllerConfigOutput) ToGetZPALSSConfigControllerConfigOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConfigOutput {
	return o
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) AuditMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.AuditMessage }).(pulumi.StringOutput)
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.Description }).(pulumi.StringOutput)
}

// (bool)
func (o GetZPALSSConfigControllerConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.Format }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerConfigOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) LssHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.LssHost }).(pulumi.StringOutput)
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) LssPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.LssPort }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetZPALSSConfigControllerConfigOutput) SourceLogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) string { return v.SourceLogType }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerConfigOutput) UseTls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConfig) bool { return v.UseTls }).(pulumi.BoolOutput)
}

type GetZPALSSConfigControllerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerConfig)(nil)).Elem()
}

func (o GetZPALSSConfigControllerConfigArrayOutput) ToGetZPALSSConfigControllerConfigArrayOutput() GetZPALSSConfigControllerConfigArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerConfigArrayOutput) ToGetZPALSSConfigControllerConfigArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConfigArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerConfigArrayOutput) Index(i pulumi.IntInput) GetZPALSSConfigControllerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPALSSConfigControllerConfig {
		return vs[0].([]GetZPALSSConfigControllerConfig)[vs[1].(int)]
	}).(GetZPALSSConfigControllerConfigOutput)
}

type GetZPALSSConfigControllerConnectorGroup struct {
	// This field defines the name of the log streaming resource.
	Id string `pulumi:"id"`
}

// GetZPALSSConfigControllerConnectorGroupInput is an input type that accepts GetZPALSSConfigControllerConnectorGroupArgs and GetZPALSSConfigControllerConnectorGroupOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerConnectorGroupInput` via:
//
//	GetZPALSSConfigControllerConnectorGroupArgs{...}
type GetZPALSSConfigControllerConnectorGroupInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerConnectorGroupOutput() GetZPALSSConfigControllerConnectorGroupOutput
	ToGetZPALSSConfigControllerConnectorGroupOutputWithContext(context.Context) GetZPALSSConfigControllerConnectorGroupOutput
}

type GetZPALSSConfigControllerConnectorGroupArgs struct {
	// This field defines the name of the log streaming resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetZPALSSConfigControllerConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i GetZPALSSConfigControllerConnectorGroupArgs) ToGetZPALSSConfigControllerConnectorGroupOutput() GetZPALSSConfigControllerConnectorGroupOutput {
	return i.ToGetZPALSSConfigControllerConnectorGroupOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerConnectorGroupArgs) ToGetZPALSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerConnectorGroupOutput)
}

// GetZPALSSConfigControllerConnectorGroupArrayInput is an input type that accepts GetZPALSSConfigControllerConnectorGroupArray and GetZPALSSConfigControllerConnectorGroupArrayOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerConnectorGroupArrayInput` via:
//
//	GetZPALSSConfigControllerConnectorGroupArray{ GetZPALSSConfigControllerConnectorGroupArgs{...} }
type GetZPALSSConfigControllerConnectorGroupArrayInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerConnectorGroupArrayOutput() GetZPALSSConfigControllerConnectorGroupArrayOutput
	ToGetZPALSSConfigControllerConnectorGroupArrayOutputWithContext(context.Context) GetZPALSSConfigControllerConnectorGroupArrayOutput
}

type GetZPALSSConfigControllerConnectorGroupArray []GetZPALSSConfigControllerConnectorGroupInput

func (GetZPALSSConfigControllerConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i GetZPALSSConfigControllerConnectorGroupArray) ToGetZPALSSConfigControllerConnectorGroupArrayOutput() GetZPALSSConfigControllerConnectorGroupArrayOutput {
	return i.ToGetZPALSSConfigControllerConnectorGroupArrayOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerConnectorGroupArray) ToGetZPALSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerConnectorGroupArrayOutput)
}

type GetZPALSSConfigControllerConnectorGroupOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o GetZPALSSConfigControllerConnectorGroupOutput) ToGetZPALSSConfigControllerConnectorGroupOutput() GetZPALSSConfigControllerConnectorGroupOutput {
	return o
}

func (o GetZPALSSConfigControllerConnectorGroupOutput) ToGetZPALSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConnectorGroupOutput {
	return o
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerConnectorGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerConnectorGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetZPALSSConfigControllerConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o GetZPALSSConfigControllerConnectorGroupArrayOutput) ToGetZPALSSConfigControllerConnectorGroupArrayOutput() GetZPALSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerConnectorGroupArrayOutput) ToGetZPALSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerConnectorGroupArrayOutput) Index(i pulumi.IntInput) GetZPALSSConfigControllerConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPALSSConfigControllerConnectorGroup {
		return vs[0].([]GetZPALSSConfigControllerConnectorGroup)[vs[1].(int)]
	}).(GetZPALSSConfigControllerConnectorGroupOutput)
}

type GetZPALSSConfigControllerPolicyRule struct {
	Action            string                                         `pulumi:"action"`
	ActionId          string                                         `pulumi:"actionId"`
	BypassDefaultRule bool                                           `pulumi:"bypassDefaultRule"`
	Conditions        []GetZPALSSConfigControllerPolicyRuleCondition `pulumi:"conditions"`
	// (string)
	CreationTime string `pulumi:"creationTime"`
	CustomMsg    string `pulumi:"customMsg"`
	DefaultRule  bool   `pulumi:"defaultRule"`
	// (string)
	Description string `pulumi:"description"`
	// This field defines the name of the log streaming resource.
	Id                   string `pulumi:"id"`
	IsolationDefaultRule bool   `pulumi:"isolationDefaultRule"`
	LssDefaultRule       bool   `pulumi:"lssDefaultRule"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name                     string `pulumi:"name"`
	Operator                 string `pulumi:"operator"`
	PolicySetId              string `pulumi:"policySetId"`
	PolicyType               string `pulumi:"policyType"`
	Priority                 string `pulumi:"priority"`
	ReauthDefaultRule        bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout        string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout            string `pulumi:"reauthTimeout"`
	RuleOrder                string `pulumi:"ruleOrder"`
	ZpnCbiProfileId          string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId   string `pulumi:"zpnInspectionProfileId"`
	ZpnInspectionProfileName string `pulumi:"zpnInspectionProfileName"`
}

// GetZPALSSConfigControllerPolicyRuleInput is an input type that accepts GetZPALSSConfigControllerPolicyRuleArgs and GetZPALSSConfigControllerPolicyRuleOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerPolicyRuleInput` via:
//
//	GetZPALSSConfigControllerPolicyRuleArgs{...}
type GetZPALSSConfigControllerPolicyRuleInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerPolicyRuleOutput() GetZPALSSConfigControllerPolicyRuleOutput
	ToGetZPALSSConfigControllerPolicyRuleOutputWithContext(context.Context) GetZPALSSConfigControllerPolicyRuleOutput
}

type GetZPALSSConfigControllerPolicyRuleArgs struct {
	Action            pulumi.StringInput                                     `pulumi:"action"`
	ActionId          pulumi.StringInput                                     `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolInput                                       `pulumi:"bypassDefaultRule"`
	Conditions        GetZPALSSConfigControllerPolicyRuleConditionArrayInput `pulumi:"conditions"`
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	CustomMsg    pulumi.StringInput `pulumi:"customMsg"`
	DefaultRule  pulumi.BoolInput   `pulumi:"defaultRule"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// This field defines the name of the log streaming resource.
	Id                   pulumi.StringInput `pulumi:"id"`
	IsolationDefaultRule pulumi.BoolInput   `pulumi:"isolationDefaultRule"`
	LssDefaultRule       pulumi.BoolInput   `pulumi:"lssDefaultRule"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name                     pulumi.StringInput `pulumi:"name"`
	Operator                 pulumi.StringInput `pulumi:"operator"`
	PolicySetId              pulumi.StringInput `pulumi:"policySetId"`
	PolicyType               pulumi.StringInput `pulumi:"policyType"`
	Priority                 pulumi.StringInput `pulumi:"priority"`
	ReauthDefaultRule        pulumi.BoolInput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout        pulumi.StringInput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout            pulumi.StringInput `pulumi:"reauthTimeout"`
	RuleOrder                pulumi.StringInput `pulumi:"ruleOrder"`
	ZpnCbiProfileId          pulumi.StringInput `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId   pulumi.StringInput `pulumi:"zpnInspectionProfileId"`
	ZpnInspectionProfileName pulumi.StringInput `pulumi:"zpnInspectionProfileName"`
}

func (GetZPALSSConfigControllerPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerPolicyRule)(nil)).Elem()
}

func (i GetZPALSSConfigControllerPolicyRuleArgs) ToGetZPALSSConfigControllerPolicyRuleOutput() GetZPALSSConfigControllerPolicyRuleOutput {
	return i.ToGetZPALSSConfigControllerPolicyRuleOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerPolicyRuleArgs) ToGetZPALSSConfigControllerPolicyRuleOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerPolicyRuleOutput)
}

// GetZPALSSConfigControllerPolicyRuleArrayInput is an input type that accepts GetZPALSSConfigControllerPolicyRuleArray and GetZPALSSConfigControllerPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerPolicyRuleArrayInput` via:
//
//	GetZPALSSConfigControllerPolicyRuleArray{ GetZPALSSConfigControllerPolicyRuleArgs{...} }
type GetZPALSSConfigControllerPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerPolicyRuleArrayOutput() GetZPALSSConfigControllerPolicyRuleArrayOutput
	ToGetZPALSSConfigControllerPolicyRuleArrayOutputWithContext(context.Context) GetZPALSSConfigControllerPolicyRuleArrayOutput
}

type GetZPALSSConfigControllerPolicyRuleArray []GetZPALSSConfigControllerPolicyRuleInput

func (GetZPALSSConfigControllerPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerPolicyRule)(nil)).Elem()
}

func (i GetZPALSSConfigControllerPolicyRuleArray) ToGetZPALSSConfigControllerPolicyRuleArrayOutput() GetZPALSSConfigControllerPolicyRuleArrayOutput {
	return i.ToGetZPALSSConfigControllerPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerPolicyRuleArray) ToGetZPALSSConfigControllerPolicyRuleArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerPolicyRuleArrayOutput)
}

type GetZPALSSConfigControllerPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerPolicyRule)(nil)).Elem()
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ToGetZPALSSConfigControllerPolicyRuleOutput() GetZPALSSConfigControllerPolicyRuleOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ToGetZPALSSConfigControllerPolicyRuleOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ActionId }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) BypassDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) bool { return v.BypassDefaultRule }).(pulumi.BoolOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) Conditions() GetZPALSSConfigControllerPolicyRuleConditionArrayOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) []GetZPALSSConfigControllerPolicyRuleCondition {
		return v.Conditions
	}).(GetZPALSSConfigControllerPolicyRuleConditionArrayOutput)
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) CustomMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.CustomMsg }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) DefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) bool { return v.DefaultRule }).(pulumi.BoolOutput)
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerPolicyRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) IsolationDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) bool { return v.IsolationDefaultRule }).(pulumi.BoolOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) LssDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) bool { return v.LssDefaultRule }).(pulumi.BoolOutput)
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerPolicyRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.PolicyType }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.Priority }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ReauthDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) bool { return v.ReauthDefaultRule }).(pulumi.BoolOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ReauthIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ReauthIdleTimeout }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ReauthTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ReauthTimeout }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ZpnCbiProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ZpnCbiProfileId }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleOutput) ZpnInspectionProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRule) string { return v.ZpnInspectionProfileName }).(pulumi.StringOutput)
}

type GetZPALSSConfigControllerPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerPolicyRule)(nil)).Elem()
}

func (o GetZPALSSConfigControllerPolicyRuleArrayOutput) ToGetZPALSSConfigControllerPolicyRuleArrayOutput() GetZPALSSConfigControllerPolicyRuleArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleArrayOutput) ToGetZPALSSConfigControllerPolicyRuleArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetZPALSSConfigControllerPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPALSSConfigControllerPolicyRule {
		return vs[0].([]GetZPALSSConfigControllerPolicyRule)[vs[1].(int)]
	}).(GetZPALSSConfigControllerPolicyRuleOutput)
}

type GetZPALSSConfigControllerPolicyRuleCondition struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id string `pulumi:"id"`
	// (string)
	ModifiedTime string                                                `pulumi:"modifiedTime"`
	Modifiedby   string                                                `pulumi:"modifiedby"`
	Negated      bool                                                  `pulumi:"negated"`
	Operands     []GetZPALSSConfigControllerPolicyRuleConditionOperand `pulumi:"operands"`
	Operator     string                                                `pulumi:"operator"`
}

// GetZPALSSConfigControllerPolicyRuleConditionInput is an input type that accepts GetZPALSSConfigControllerPolicyRuleConditionArgs and GetZPALSSConfigControllerPolicyRuleConditionOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerPolicyRuleConditionInput` via:
//
//	GetZPALSSConfigControllerPolicyRuleConditionArgs{...}
type GetZPALSSConfigControllerPolicyRuleConditionInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerPolicyRuleConditionOutput() GetZPALSSConfigControllerPolicyRuleConditionOutput
	ToGetZPALSSConfigControllerPolicyRuleConditionOutputWithContext(context.Context) GetZPALSSConfigControllerPolicyRuleConditionOutput
}

type GetZPALSSConfigControllerPolicyRuleConditionArgs struct {
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	ModifiedTime pulumi.StringInput                                            `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput                                            `pulumi:"modifiedby"`
	Negated      pulumi.BoolInput                                              `pulumi:"negated"`
	Operands     GetZPALSSConfigControllerPolicyRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator     pulumi.StringInput                                            `pulumi:"operator"`
}

func (GetZPALSSConfigControllerPolicyRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (i GetZPALSSConfigControllerPolicyRuleConditionArgs) ToGetZPALSSConfigControllerPolicyRuleConditionOutput() GetZPALSSConfigControllerPolicyRuleConditionOutput {
	return i.ToGetZPALSSConfigControllerPolicyRuleConditionOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerPolicyRuleConditionArgs) ToGetZPALSSConfigControllerPolicyRuleConditionOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerPolicyRuleConditionOutput)
}

// GetZPALSSConfigControllerPolicyRuleConditionArrayInput is an input type that accepts GetZPALSSConfigControllerPolicyRuleConditionArray and GetZPALSSConfigControllerPolicyRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerPolicyRuleConditionArrayInput` via:
//
//	GetZPALSSConfigControllerPolicyRuleConditionArray{ GetZPALSSConfigControllerPolicyRuleConditionArgs{...} }
type GetZPALSSConfigControllerPolicyRuleConditionArrayInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutput() GetZPALSSConfigControllerPolicyRuleConditionArrayOutput
	ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutputWithContext(context.Context) GetZPALSSConfigControllerPolicyRuleConditionArrayOutput
}

type GetZPALSSConfigControllerPolicyRuleConditionArray []GetZPALSSConfigControllerPolicyRuleConditionInput

func (GetZPALSSConfigControllerPolicyRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (i GetZPALSSConfigControllerPolicyRuleConditionArray) ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutput() GetZPALSSConfigControllerPolicyRuleConditionArrayOutput {
	return i.ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerPolicyRuleConditionArray) ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerPolicyRuleConditionArrayOutput)
}

type GetZPALSSConfigControllerPolicyRuleConditionOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerPolicyRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) ToGetZPALSSConfigControllerPolicyRuleConditionOutput() GetZPALSSConfigControllerPolicyRuleConditionOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) ToGetZPALSSConfigControllerPolicyRuleConditionOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionOutput {
	return o
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) string { return v.CreationTime }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) string { return v.Modifiedby }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) Negated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) bool { return v.Negated }).(pulumi.BoolOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) Operands() GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) []GetZPALSSConfigControllerPolicyRuleConditionOperand {
		return v.Operands
	}).(GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type GetZPALSSConfigControllerPolicyRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerPolicyRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (o GetZPALSSConfigControllerPolicyRuleConditionArrayOutput) ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutput() GetZPALSSConfigControllerPolicyRuleConditionArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleConditionArrayOutput) ToGetZPALSSConfigControllerPolicyRuleConditionArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleConditionArrayOutput) Index(i pulumi.IntInput) GetZPALSSConfigControllerPolicyRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPALSSConfigControllerPolicyRuleCondition {
		return vs[0].([]GetZPALSSConfigControllerPolicyRuleCondition)[vs[1].(int)]
	}).(GetZPALSSConfigControllerPolicyRuleConditionOutput)
}

type GetZPALSSConfigControllerPolicyRuleConditionOperand struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id    string `pulumi:"id"`
	IdpId string `pulumi:"idpId"`
	Lhs   string `pulumi:"lhs"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name       string `pulumi:"name"`
	ObjectType string `pulumi:"objectType"`
	Operator   string `pulumi:"operator"`
	Rhs        string `pulumi:"rhs"`
}

// GetZPALSSConfigControllerPolicyRuleConditionOperandInput is an input type that accepts GetZPALSSConfigControllerPolicyRuleConditionOperandArgs and GetZPALSSConfigControllerPolicyRuleConditionOperandOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerPolicyRuleConditionOperandInput` via:
//
//	GetZPALSSConfigControllerPolicyRuleConditionOperandArgs{...}
type GetZPALSSConfigControllerPolicyRuleConditionOperandInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutput() GetZPALSSConfigControllerPolicyRuleConditionOperandOutput
	ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutputWithContext(context.Context) GetZPALSSConfigControllerPolicyRuleConditionOperandOutput
}

type GetZPALSSConfigControllerPolicyRuleConditionOperandArgs struct {
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id    pulumi.StringInput `pulumi:"id"`
	IdpId pulumi.StringInput `pulumi:"idpId"`
	Lhs   pulumi.StringInput `pulumi:"lhs"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name       pulumi.StringInput `pulumi:"name"`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	Operator   pulumi.StringInput `pulumi:"operator"`
	Rhs        pulumi.StringInput `pulumi:"rhs"`
}

func (GetZPALSSConfigControllerPolicyRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (i GetZPALSSConfigControllerPolicyRuleConditionOperandArgs) ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutput() GetZPALSSConfigControllerPolicyRuleConditionOperandOutput {
	return i.ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerPolicyRuleConditionOperandArgs) ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerPolicyRuleConditionOperandOutput)
}

// GetZPALSSConfigControllerPolicyRuleConditionOperandArrayInput is an input type that accepts GetZPALSSConfigControllerPolicyRuleConditionOperandArray and GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `GetZPALSSConfigControllerPolicyRuleConditionOperandArrayInput` via:
//
//	GetZPALSSConfigControllerPolicyRuleConditionOperandArray{ GetZPALSSConfigControllerPolicyRuleConditionOperandArgs{...} }
type GetZPALSSConfigControllerPolicyRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput() GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput
	ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(context.Context) GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput
}

type GetZPALSSConfigControllerPolicyRuleConditionOperandArray []GetZPALSSConfigControllerPolicyRuleConditionOperandInput

func (GetZPALSSConfigControllerPolicyRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (i GetZPALSSConfigControllerPolicyRuleConditionOperandArray) ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput() GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return i.ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i GetZPALSSConfigControllerPolicyRuleConditionOperandArray) ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput)
}

type GetZPALSSConfigControllerPolicyRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutput() GetZPALSSConfigControllerPolicyRuleConditionOperandOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) ToGetZPALSSConfigControllerPolicyRuleConditionOperandOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionOperandOutput {
	return o
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.CreationTime }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.IdpId }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

// (string)
func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandOutput) Rhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigControllerPolicyRuleConditionOperand) string { return v.Rhs }).(pulumi.StringOutput)
}

type GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPALSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput) ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput() GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput) ToGetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(ctx context.Context) GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return o
}

func (o GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) GetZPALSSConfigControllerPolicyRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPALSSConfigControllerPolicyRuleConditionOperand {
		return vs[0].([]GetZPALSSConfigControllerPolicyRuleConditionOperand)[vs[1].(int)]
	}).(GetZPALSSConfigControllerPolicyRuleConditionOperandOutput)
}

type GetZPAMachineGroupMachine struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	Description string `pulumi:"description"`
	// (string)
	Fingerprint string `pulumi:"fingerprint"`
	// The ID of the machine group to be exported.
	Id string `pulumi:"id"`
	// (string)
	IssuedCertId string `pulumi:"issuedCertId"`
	// (string)
	MachineGroupId string `pulumi:"machineGroupId"`
	// (string)
	MachineGroupName string `pulumi:"machineGroupName"`
	// (string)
	MachineTokenId string `pulumi:"machineTokenId"`
	// (string)
	ModifiedBy string `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	// The name of the machine group to be exported.
	Name string `pulumi:"name"`
	// (string)
	SigningCert map[string]string `pulumi:"signingCert"`
}

// GetZPAMachineGroupMachineInput is an input type that accepts GetZPAMachineGroupMachineArgs and GetZPAMachineGroupMachineOutput values.
// You can construct a concrete instance of `GetZPAMachineGroupMachineInput` via:
//
//	GetZPAMachineGroupMachineArgs{...}
type GetZPAMachineGroupMachineInput interface {
	pulumi.Input

	ToGetZPAMachineGroupMachineOutput() GetZPAMachineGroupMachineOutput
	ToGetZPAMachineGroupMachineOutputWithContext(context.Context) GetZPAMachineGroupMachineOutput
}

type GetZPAMachineGroupMachineArgs struct {
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (string)
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	// The ID of the machine group to be exported.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	IssuedCertId pulumi.StringInput `pulumi:"issuedCertId"`
	// (string)
	MachineGroupId pulumi.StringInput `pulumi:"machineGroupId"`
	// (string)
	MachineGroupName pulumi.StringInput `pulumi:"machineGroupName"`
	// (string)
	MachineTokenId pulumi.StringInput `pulumi:"machineTokenId"`
	// (string)
	ModifiedBy pulumi.StringInput `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// The name of the machine group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	SigningCert pulumi.StringMapInput `pulumi:"signingCert"`
}

func (GetZPAMachineGroupMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAMachineGroupMachine)(nil)).Elem()
}

func (i GetZPAMachineGroupMachineArgs) ToGetZPAMachineGroupMachineOutput() GetZPAMachineGroupMachineOutput {
	return i.ToGetZPAMachineGroupMachineOutputWithContext(context.Background())
}

func (i GetZPAMachineGroupMachineArgs) ToGetZPAMachineGroupMachineOutputWithContext(ctx context.Context) GetZPAMachineGroupMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAMachineGroupMachineOutput)
}

// GetZPAMachineGroupMachineArrayInput is an input type that accepts GetZPAMachineGroupMachineArray and GetZPAMachineGroupMachineArrayOutput values.
// You can construct a concrete instance of `GetZPAMachineGroupMachineArrayInput` via:
//
//	GetZPAMachineGroupMachineArray{ GetZPAMachineGroupMachineArgs{...} }
type GetZPAMachineGroupMachineArrayInput interface {
	pulumi.Input

	ToGetZPAMachineGroupMachineArrayOutput() GetZPAMachineGroupMachineArrayOutput
	ToGetZPAMachineGroupMachineArrayOutputWithContext(context.Context) GetZPAMachineGroupMachineArrayOutput
}

type GetZPAMachineGroupMachineArray []GetZPAMachineGroupMachineInput

func (GetZPAMachineGroupMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAMachineGroupMachine)(nil)).Elem()
}

func (i GetZPAMachineGroupMachineArray) ToGetZPAMachineGroupMachineArrayOutput() GetZPAMachineGroupMachineArrayOutput {
	return i.ToGetZPAMachineGroupMachineArrayOutputWithContext(context.Background())
}

func (i GetZPAMachineGroupMachineArray) ToGetZPAMachineGroupMachineArrayOutputWithContext(ctx context.Context) GetZPAMachineGroupMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAMachineGroupMachineArrayOutput)
}

type GetZPAMachineGroupMachineOutput struct{ *pulumi.OutputState }

func (GetZPAMachineGroupMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAMachineGroupMachine)(nil)).Elem()
}

func (o GetZPAMachineGroupMachineOutput) ToGetZPAMachineGroupMachineOutput() GetZPAMachineGroupMachineOutput {
	return o
}

func (o GetZPAMachineGroupMachineOutput) ToGetZPAMachineGroupMachineOutputWithContext(ctx context.Context) GetZPAMachineGroupMachineOutput {
	return o
}

// (string)
func (o GetZPAMachineGroupMachineOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.Description }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The ID of the machine group to be exported.
func (o GetZPAMachineGroupMachineOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) IssuedCertId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.IssuedCertId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) MachineGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.MachineGroupId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) MachineGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.MachineGroupName }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) MachineTokenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.MachineTokenId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The name of the machine group to be exported.
func (o GetZPAMachineGroupMachineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAMachineGroupMachineOutput) SigningCert() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZPAMachineGroupMachine) map[string]string { return v.SigningCert }).(pulumi.StringMapOutput)
}

type GetZPAMachineGroupMachineArrayOutput struct{ *pulumi.OutputState }

func (GetZPAMachineGroupMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAMachineGroupMachine)(nil)).Elem()
}

func (o GetZPAMachineGroupMachineArrayOutput) ToGetZPAMachineGroupMachineArrayOutput() GetZPAMachineGroupMachineArrayOutput {
	return o
}

func (o GetZPAMachineGroupMachineArrayOutput) ToGetZPAMachineGroupMachineArrayOutputWithContext(ctx context.Context) GetZPAMachineGroupMachineArrayOutput {
	return o
}

func (o GetZPAMachineGroupMachineArrayOutput) Index(i pulumi.IntInput) GetZPAMachineGroupMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAMachineGroupMachine {
		return vs[0].([]GetZPAMachineGroupMachine)[vs[1].(int)]
	}).(GetZPAMachineGroupMachineOutput)
}

type GetZPAPolicyTypeRule struct {
	Action               string                          `pulumi:"action"`
	ActionId             string                          `pulumi:"actionId"`
	BypassDefaultRule    bool                            `pulumi:"bypassDefaultRule"`
	Conditions           []GetZPAPolicyTypeRuleCondition `pulumi:"conditions"`
	CreationTime         string                          `pulumi:"creationTime"`
	CustomMsg            string                          `pulumi:"customMsg"`
	Description          string                          `pulumi:"description"`
	Id                   string                          `pulumi:"id"`
	IsolationDefaultRule bool                            `pulumi:"isolationDefaultRule"`
	ModifiedBy           string                          `pulumi:"modifiedBy"`
	ModifiedTime         string                          `pulumi:"modifiedTime"`
	Name                 string                          `pulumi:"name"`
	Operator             string                          `pulumi:"operator"`
	// The ID of the global policy set.
	PolicySetId string `pulumi:"policySetId"`
	// The value for differentiating the policy types.
	PolicyType             string `pulumi:"policyType"`
	Priority               string `pulumi:"priority"`
	ReauthDefaultRule      bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout      string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout          string `pulumi:"reauthTimeout"`
	RuleOrder              string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId string `pulumi:"zpnInspectionProfileId"`
}

// GetZPAPolicyTypeRuleInput is an input type that accepts GetZPAPolicyTypeRuleArgs and GetZPAPolicyTypeRuleOutput values.
// You can construct a concrete instance of `GetZPAPolicyTypeRuleInput` via:
//
//	GetZPAPolicyTypeRuleArgs{...}
type GetZPAPolicyTypeRuleInput interface {
	pulumi.Input

	ToGetZPAPolicyTypeRuleOutput() GetZPAPolicyTypeRuleOutput
	ToGetZPAPolicyTypeRuleOutputWithContext(context.Context) GetZPAPolicyTypeRuleOutput
}

type GetZPAPolicyTypeRuleArgs struct {
	Action               pulumi.StringInput                      `pulumi:"action"`
	ActionId             pulumi.StringInput                      `pulumi:"actionId"`
	BypassDefaultRule    pulumi.BoolInput                        `pulumi:"bypassDefaultRule"`
	Conditions           GetZPAPolicyTypeRuleConditionArrayInput `pulumi:"conditions"`
	CreationTime         pulumi.StringInput                      `pulumi:"creationTime"`
	CustomMsg            pulumi.StringInput                      `pulumi:"customMsg"`
	Description          pulumi.StringInput                      `pulumi:"description"`
	Id                   pulumi.StringInput                      `pulumi:"id"`
	IsolationDefaultRule pulumi.BoolInput                        `pulumi:"isolationDefaultRule"`
	ModifiedBy           pulumi.StringInput                      `pulumi:"modifiedBy"`
	ModifiedTime         pulumi.StringInput                      `pulumi:"modifiedTime"`
	Name                 pulumi.StringInput                      `pulumi:"name"`
	Operator             pulumi.StringInput                      `pulumi:"operator"`
	// The ID of the global policy set.
	PolicySetId pulumi.StringInput `pulumi:"policySetId"`
	// The value for differentiating the policy types.
	PolicyType             pulumi.StringInput `pulumi:"policyType"`
	Priority               pulumi.StringInput `pulumi:"priority"`
	ReauthDefaultRule      pulumi.BoolInput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout      pulumi.StringInput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout          pulumi.StringInput `pulumi:"reauthTimeout"`
	RuleOrder              pulumi.StringInput `pulumi:"ruleOrder"`
	ZpnCbiProfileId        pulumi.StringInput `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId pulumi.StringInput `pulumi:"zpnInspectionProfileId"`
}

func (GetZPAPolicyTypeRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAPolicyTypeRule)(nil)).Elem()
}

func (i GetZPAPolicyTypeRuleArgs) ToGetZPAPolicyTypeRuleOutput() GetZPAPolicyTypeRuleOutput {
	return i.ToGetZPAPolicyTypeRuleOutputWithContext(context.Background())
}

func (i GetZPAPolicyTypeRuleArgs) ToGetZPAPolicyTypeRuleOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAPolicyTypeRuleOutput)
}

// GetZPAPolicyTypeRuleArrayInput is an input type that accepts GetZPAPolicyTypeRuleArray and GetZPAPolicyTypeRuleArrayOutput values.
// You can construct a concrete instance of `GetZPAPolicyTypeRuleArrayInput` via:
//
//	GetZPAPolicyTypeRuleArray{ GetZPAPolicyTypeRuleArgs{...} }
type GetZPAPolicyTypeRuleArrayInput interface {
	pulumi.Input

	ToGetZPAPolicyTypeRuleArrayOutput() GetZPAPolicyTypeRuleArrayOutput
	ToGetZPAPolicyTypeRuleArrayOutputWithContext(context.Context) GetZPAPolicyTypeRuleArrayOutput
}

type GetZPAPolicyTypeRuleArray []GetZPAPolicyTypeRuleInput

func (GetZPAPolicyTypeRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAPolicyTypeRule)(nil)).Elem()
}

func (i GetZPAPolicyTypeRuleArray) ToGetZPAPolicyTypeRuleArrayOutput() GetZPAPolicyTypeRuleArrayOutput {
	return i.ToGetZPAPolicyTypeRuleArrayOutputWithContext(context.Background())
}

func (i GetZPAPolicyTypeRuleArray) ToGetZPAPolicyTypeRuleArrayOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAPolicyTypeRuleArrayOutput)
}

type GetZPAPolicyTypeRuleOutput struct{ *pulumi.OutputState }

func (GetZPAPolicyTypeRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAPolicyTypeRule)(nil)).Elem()
}

func (o GetZPAPolicyTypeRuleOutput) ToGetZPAPolicyTypeRuleOutput() GetZPAPolicyTypeRuleOutput {
	return o
}

func (o GetZPAPolicyTypeRuleOutput) ToGetZPAPolicyTypeRuleOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleOutput {
	return o
}

func (o GetZPAPolicyTypeRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ActionId }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) BypassDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) bool { return v.BypassDefaultRule }).(pulumi.BoolOutput)
}

func (o GetZPAPolicyTypeRuleOutput) Conditions() GetZPAPolicyTypeRuleConditionArrayOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) []GetZPAPolicyTypeRuleCondition { return v.Conditions }).(GetZPAPolicyTypeRuleConditionArrayOutput)
}

func (o GetZPAPolicyTypeRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) CustomMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.CustomMsg }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) IsolationDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) bool { return v.IsolationDefaultRule }).(pulumi.BoolOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.Operator }).(pulumi.StringOutput)
}

// The ID of the global policy set.
func (o GetZPAPolicyTypeRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.PolicySetId }).(pulumi.StringOutput)
}

// The value for differentiating the policy types.
func (o GetZPAPolicyTypeRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.PolicyType }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.Priority }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ReauthDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) bool { return v.ReauthDefaultRule }).(pulumi.BoolOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ReauthIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ReauthIdleTimeout }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ReauthTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ReauthTimeout }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ZpnCbiProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ZpnCbiProfileId }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleOutput) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRule) string { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

type GetZPAPolicyTypeRuleArrayOutput struct{ *pulumi.OutputState }

func (GetZPAPolicyTypeRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAPolicyTypeRule)(nil)).Elem()
}

func (o GetZPAPolicyTypeRuleArrayOutput) ToGetZPAPolicyTypeRuleArrayOutput() GetZPAPolicyTypeRuleArrayOutput {
	return o
}

func (o GetZPAPolicyTypeRuleArrayOutput) ToGetZPAPolicyTypeRuleArrayOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleArrayOutput {
	return o
}

func (o GetZPAPolicyTypeRuleArrayOutput) Index(i pulumi.IntInput) GetZPAPolicyTypeRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAPolicyTypeRule {
		return vs[0].([]GetZPAPolicyTypeRule)[vs[1].(int)]
	}).(GetZPAPolicyTypeRuleOutput)
}

type GetZPAPolicyTypeRuleCondition struct {
	CreationTime string                                 `pulumi:"creationTime"`
	Id           string                                 `pulumi:"id"`
	ModifiedBy   string                                 `pulumi:"modifiedBy"`
	ModifiedTime string                                 `pulumi:"modifiedTime"`
	Negated      bool                                   `pulumi:"negated"`
	Operands     []GetZPAPolicyTypeRuleConditionOperand `pulumi:"operands"`
	Operator     string                                 `pulumi:"operator"`
}

// GetZPAPolicyTypeRuleConditionInput is an input type that accepts GetZPAPolicyTypeRuleConditionArgs and GetZPAPolicyTypeRuleConditionOutput values.
// You can construct a concrete instance of `GetZPAPolicyTypeRuleConditionInput` via:
//
//	GetZPAPolicyTypeRuleConditionArgs{...}
type GetZPAPolicyTypeRuleConditionInput interface {
	pulumi.Input

	ToGetZPAPolicyTypeRuleConditionOutput() GetZPAPolicyTypeRuleConditionOutput
	ToGetZPAPolicyTypeRuleConditionOutputWithContext(context.Context) GetZPAPolicyTypeRuleConditionOutput
}

type GetZPAPolicyTypeRuleConditionArgs struct {
	CreationTime pulumi.StringInput                             `pulumi:"creationTime"`
	Id           pulumi.StringInput                             `pulumi:"id"`
	ModifiedBy   pulumi.StringInput                             `pulumi:"modifiedBy"`
	ModifiedTime pulumi.StringInput                             `pulumi:"modifiedTime"`
	Negated      pulumi.BoolInput                               `pulumi:"negated"`
	Operands     GetZPAPolicyTypeRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator     pulumi.StringInput                             `pulumi:"operator"`
}

func (GetZPAPolicyTypeRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAPolicyTypeRuleCondition)(nil)).Elem()
}

func (i GetZPAPolicyTypeRuleConditionArgs) ToGetZPAPolicyTypeRuleConditionOutput() GetZPAPolicyTypeRuleConditionOutput {
	return i.ToGetZPAPolicyTypeRuleConditionOutputWithContext(context.Background())
}

func (i GetZPAPolicyTypeRuleConditionArgs) ToGetZPAPolicyTypeRuleConditionOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAPolicyTypeRuleConditionOutput)
}

// GetZPAPolicyTypeRuleConditionArrayInput is an input type that accepts GetZPAPolicyTypeRuleConditionArray and GetZPAPolicyTypeRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetZPAPolicyTypeRuleConditionArrayInput` via:
//
//	GetZPAPolicyTypeRuleConditionArray{ GetZPAPolicyTypeRuleConditionArgs{...} }
type GetZPAPolicyTypeRuleConditionArrayInput interface {
	pulumi.Input

	ToGetZPAPolicyTypeRuleConditionArrayOutput() GetZPAPolicyTypeRuleConditionArrayOutput
	ToGetZPAPolicyTypeRuleConditionArrayOutputWithContext(context.Context) GetZPAPolicyTypeRuleConditionArrayOutput
}

type GetZPAPolicyTypeRuleConditionArray []GetZPAPolicyTypeRuleConditionInput

func (GetZPAPolicyTypeRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAPolicyTypeRuleCondition)(nil)).Elem()
}

func (i GetZPAPolicyTypeRuleConditionArray) ToGetZPAPolicyTypeRuleConditionArrayOutput() GetZPAPolicyTypeRuleConditionArrayOutput {
	return i.ToGetZPAPolicyTypeRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetZPAPolicyTypeRuleConditionArray) ToGetZPAPolicyTypeRuleConditionArrayOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAPolicyTypeRuleConditionArrayOutput)
}

type GetZPAPolicyTypeRuleConditionOutput struct{ *pulumi.OutputState }

func (GetZPAPolicyTypeRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAPolicyTypeRuleCondition)(nil)).Elem()
}

func (o GetZPAPolicyTypeRuleConditionOutput) ToGetZPAPolicyTypeRuleConditionOutput() GetZPAPolicyTypeRuleConditionOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionOutput) ToGetZPAPolicyTypeRuleConditionOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOutput) Negated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) bool { return v.Negated }).(pulumi.BoolOutput)
}

func (o GetZPAPolicyTypeRuleConditionOutput) Operands() GetZPAPolicyTypeRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) []GetZPAPolicyTypeRuleConditionOperand { return v.Operands }).(GetZPAPolicyTypeRuleConditionOperandArrayOutput)
}

func (o GetZPAPolicyTypeRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type GetZPAPolicyTypeRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetZPAPolicyTypeRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAPolicyTypeRuleCondition)(nil)).Elem()
}

func (o GetZPAPolicyTypeRuleConditionArrayOutput) ToGetZPAPolicyTypeRuleConditionArrayOutput() GetZPAPolicyTypeRuleConditionArrayOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionArrayOutput) ToGetZPAPolicyTypeRuleConditionArrayOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionArrayOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionArrayOutput) Index(i pulumi.IntInput) GetZPAPolicyTypeRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAPolicyTypeRuleCondition {
		return vs[0].([]GetZPAPolicyTypeRuleCondition)[vs[1].(int)]
	}).(GetZPAPolicyTypeRuleConditionOutput)
}

type GetZPAPolicyTypeRuleConditionOperand struct {
	CreationTime string `pulumi:"creationTime"`
	Id           string `pulumi:"id"`
	IdpId        string `pulumi:"idpId"`
	Lhs          string `pulumi:"lhs"`
	ModifiedBy   string `pulumi:"modifiedBy"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Name         string `pulumi:"name"`
	ObjectType   string `pulumi:"objectType"`
	Operator     string `pulumi:"operator"`
	Rhs          string `pulumi:"rhs"`
}

// GetZPAPolicyTypeRuleConditionOperandInput is an input type that accepts GetZPAPolicyTypeRuleConditionOperandArgs and GetZPAPolicyTypeRuleConditionOperandOutput values.
// You can construct a concrete instance of `GetZPAPolicyTypeRuleConditionOperandInput` via:
//
//	GetZPAPolicyTypeRuleConditionOperandArgs{...}
type GetZPAPolicyTypeRuleConditionOperandInput interface {
	pulumi.Input

	ToGetZPAPolicyTypeRuleConditionOperandOutput() GetZPAPolicyTypeRuleConditionOperandOutput
	ToGetZPAPolicyTypeRuleConditionOperandOutputWithContext(context.Context) GetZPAPolicyTypeRuleConditionOperandOutput
}

type GetZPAPolicyTypeRuleConditionOperandArgs struct {
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	Id           pulumi.StringInput `pulumi:"id"`
	IdpId        pulumi.StringInput `pulumi:"idpId"`
	Lhs          pulumi.StringInput `pulumi:"lhs"`
	ModifiedBy   pulumi.StringInput `pulumi:"modifiedBy"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Name         pulumi.StringInput `pulumi:"name"`
	ObjectType   pulumi.StringInput `pulumi:"objectType"`
	Operator     pulumi.StringInput `pulumi:"operator"`
	Rhs          pulumi.StringInput `pulumi:"rhs"`
}

func (GetZPAPolicyTypeRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAPolicyTypeRuleConditionOperand)(nil)).Elem()
}

func (i GetZPAPolicyTypeRuleConditionOperandArgs) ToGetZPAPolicyTypeRuleConditionOperandOutput() GetZPAPolicyTypeRuleConditionOperandOutput {
	return i.ToGetZPAPolicyTypeRuleConditionOperandOutputWithContext(context.Background())
}

func (i GetZPAPolicyTypeRuleConditionOperandArgs) ToGetZPAPolicyTypeRuleConditionOperandOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAPolicyTypeRuleConditionOperandOutput)
}

// GetZPAPolicyTypeRuleConditionOperandArrayInput is an input type that accepts GetZPAPolicyTypeRuleConditionOperandArray and GetZPAPolicyTypeRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `GetZPAPolicyTypeRuleConditionOperandArrayInput` via:
//
//	GetZPAPolicyTypeRuleConditionOperandArray{ GetZPAPolicyTypeRuleConditionOperandArgs{...} }
type GetZPAPolicyTypeRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToGetZPAPolicyTypeRuleConditionOperandArrayOutput() GetZPAPolicyTypeRuleConditionOperandArrayOutput
	ToGetZPAPolicyTypeRuleConditionOperandArrayOutputWithContext(context.Context) GetZPAPolicyTypeRuleConditionOperandArrayOutput
}

type GetZPAPolicyTypeRuleConditionOperandArray []GetZPAPolicyTypeRuleConditionOperandInput

func (GetZPAPolicyTypeRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAPolicyTypeRuleConditionOperand)(nil)).Elem()
}

func (i GetZPAPolicyTypeRuleConditionOperandArray) ToGetZPAPolicyTypeRuleConditionOperandArrayOutput() GetZPAPolicyTypeRuleConditionOperandArrayOutput {
	return i.ToGetZPAPolicyTypeRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i GetZPAPolicyTypeRuleConditionOperandArray) ToGetZPAPolicyTypeRuleConditionOperandArrayOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAPolicyTypeRuleConditionOperandArrayOutput)
}

type GetZPAPolicyTypeRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (GetZPAPolicyTypeRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAPolicyTypeRuleConditionOperand)(nil)).Elem()
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) ToGetZPAPolicyTypeRuleConditionOperandOutput() GetZPAPolicyTypeRuleConditionOperandOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) ToGetZPAPolicyTypeRuleConditionOperandOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionOperandOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.IdpId }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetZPAPolicyTypeRuleConditionOperandOutput) Rhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAPolicyTypeRuleConditionOperand) string { return v.Rhs }).(pulumi.StringOutput)
}

type GetZPAPolicyTypeRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (GetZPAPolicyTypeRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAPolicyTypeRuleConditionOperand)(nil)).Elem()
}

func (o GetZPAPolicyTypeRuleConditionOperandArrayOutput) ToGetZPAPolicyTypeRuleConditionOperandArrayOutput() GetZPAPolicyTypeRuleConditionOperandArrayOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionOperandArrayOutput) ToGetZPAPolicyTypeRuleConditionOperandArrayOutputWithContext(ctx context.Context) GetZPAPolicyTypeRuleConditionOperandArrayOutput {
	return o
}

func (o GetZPAPolicyTypeRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) GetZPAPolicyTypeRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAPolicyTypeRuleConditionOperand {
		return vs[0].([]GetZPAPolicyTypeRuleConditionOperand)[vs[1].(int)]
	}).(GetZPAPolicyTypeRuleConditionOperandOutput)
}

type GetZPASegmentGroupApplication struct {
	// (string)
	BypassType string `pulumi:"bypassType"`
	// (string)
	ConfigSpace string `pulumi:"configSpace"`
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	DefaultIdleTimeout string `pulumi:"defaultIdleTimeout"`
	// (string)
	DefaultMaxAge string `pulumi:"defaultMaxAge"`
	// (string)
	Description string `pulumi:"description"`
	// (string)
	DomainName string `pulumi:"domainName"`
	// (string)
	DomainNames []string `pulumi:"domainNames"`
	// (string)
	DoubleEncrypt bool `pulumi:"doubleEncrypt"`
	// (bool)
	Enabled bool `pulumi:"enabled"`
	// (string)
	HealthCheckType string `pulumi:"healthCheckType"`
	// The ID of the segment group to be exported.
	Id string `pulumi:"id"`
	// (bool)
	IpAnchored  bool     `pulumi:"ipAnchored"`
	LogFeatures []string `pulumi:"logFeatures"`
	// (string)
	ModifiedBy string `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	// The name of the segment group to be exported.
	Name string `pulumi:"name"`
	// (bool)
	PassiveHealthEnabled bool `pulumi:"passiveHealthEnabled"`
	// (Computed)
	ServerGroups []GetZPASegmentGroupApplicationServerGroup `pulumi:"serverGroups"`
	// (string)
	TcpPortRanges []string `pulumi:"tcpPortRanges"`
	// (string)
	TcpPortsIns  []string `pulumi:"tcpPortsIns"`
	TcpPortsOuts []string `pulumi:"tcpPortsOuts"`
	// (string)
	UdpPortRanges []string `pulumi:"udpPortRanges"`
}

// GetZPASegmentGroupApplicationInput is an input type that accepts GetZPASegmentGroupApplicationArgs and GetZPASegmentGroupApplicationOutput values.
// You can construct a concrete instance of `GetZPASegmentGroupApplicationInput` via:
//
//	GetZPASegmentGroupApplicationArgs{...}
type GetZPASegmentGroupApplicationInput interface {
	pulumi.Input

	ToGetZPASegmentGroupApplicationOutput() GetZPASegmentGroupApplicationOutput
	ToGetZPASegmentGroupApplicationOutputWithContext(context.Context) GetZPASegmentGroupApplicationOutput
}

type GetZPASegmentGroupApplicationArgs struct {
	// (string)
	BypassType pulumi.StringInput `pulumi:"bypassType"`
	// (string)
	ConfigSpace pulumi.StringInput `pulumi:"configSpace"`
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string)
	DefaultIdleTimeout pulumi.StringInput `pulumi:"defaultIdleTimeout"`
	// (string)
	DefaultMaxAge pulumi.StringInput `pulumi:"defaultMaxAge"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (string)
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// (string)
	DomainNames pulumi.StringArrayInput `pulumi:"domainNames"`
	// (string)
	DoubleEncrypt pulumi.BoolInput `pulumi:"doubleEncrypt"`
	// (bool)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// (string)
	HealthCheckType pulumi.StringInput `pulumi:"healthCheckType"`
	// The ID of the segment group to be exported.
	Id pulumi.StringInput `pulumi:"id"`
	// (bool)
	IpAnchored  pulumi.BoolInput        `pulumi:"ipAnchored"`
	LogFeatures pulumi.StringArrayInput `pulumi:"logFeatures"`
	// (string)
	ModifiedBy pulumi.StringInput `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// The name of the segment group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
	// (bool)
	PassiveHealthEnabled pulumi.BoolInput `pulumi:"passiveHealthEnabled"`
	// (Computed)
	ServerGroups GetZPASegmentGroupApplicationServerGroupArrayInput `pulumi:"serverGroups"`
	// (string)
	TcpPortRanges pulumi.StringArrayInput `pulumi:"tcpPortRanges"`
	// (string)
	TcpPortsIns  pulumi.StringArrayInput `pulumi:"tcpPortsIns"`
	TcpPortsOuts pulumi.StringArrayInput `pulumi:"tcpPortsOuts"`
	// (string)
	UdpPortRanges pulumi.StringArrayInput `pulumi:"udpPortRanges"`
}

func (GetZPASegmentGroupApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPASegmentGroupApplication)(nil)).Elem()
}

func (i GetZPASegmentGroupApplicationArgs) ToGetZPASegmentGroupApplicationOutput() GetZPASegmentGroupApplicationOutput {
	return i.ToGetZPASegmentGroupApplicationOutputWithContext(context.Background())
}

func (i GetZPASegmentGroupApplicationArgs) ToGetZPASegmentGroupApplicationOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPASegmentGroupApplicationOutput)
}

// GetZPASegmentGroupApplicationArrayInput is an input type that accepts GetZPASegmentGroupApplicationArray and GetZPASegmentGroupApplicationArrayOutput values.
// You can construct a concrete instance of `GetZPASegmentGroupApplicationArrayInput` via:
//
//	GetZPASegmentGroupApplicationArray{ GetZPASegmentGroupApplicationArgs{...} }
type GetZPASegmentGroupApplicationArrayInput interface {
	pulumi.Input

	ToGetZPASegmentGroupApplicationArrayOutput() GetZPASegmentGroupApplicationArrayOutput
	ToGetZPASegmentGroupApplicationArrayOutputWithContext(context.Context) GetZPASegmentGroupApplicationArrayOutput
}

type GetZPASegmentGroupApplicationArray []GetZPASegmentGroupApplicationInput

func (GetZPASegmentGroupApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPASegmentGroupApplication)(nil)).Elem()
}

func (i GetZPASegmentGroupApplicationArray) ToGetZPASegmentGroupApplicationArrayOutput() GetZPASegmentGroupApplicationArrayOutput {
	return i.ToGetZPASegmentGroupApplicationArrayOutputWithContext(context.Background())
}

func (i GetZPASegmentGroupApplicationArray) ToGetZPASegmentGroupApplicationArrayOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPASegmentGroupApplicationArrayOutput)
}

type GetZPASegmentGroupApplicationOutput struct{ *pulumi.OutputState }

func (GetZPASegmentGroupApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPASegmentGroupApplication)(nil)).Elem()
}

func (o GetZPASegmentGroupApplicationOutput) ToGetZPASegmentGroupApplicationOutput() GetZPASegmentGroupApplicationOutput {
	return o
}

func (o GetZPASegmentGroupApplicationOutput) ToGetZPASegmentGroupApplicationOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationOutput {
	return o
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) BypassType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.BypassType }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) DefaultIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.DefaultIdleTimeout }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) DefaultMaxAge() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.DefaultMaxAge }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.Description }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.DomainName }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) DoubleEncrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) bool { return v.DoubleEncrypt }).(pulumi.BoolOutput)
}

// (bool)
func (o GetZPASegmentGroupApplicationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) HealthCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.HealthCheckType }).(pulumi.StringOutput)
}

// The ID of the segment group to be exported.
func (o GetZPASegmentGroupApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.Id }).(pulumi.StringOutput)
}

// (bool)
func (o GetZPASegmentGroupApplicationOutput) IpAnchored() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) bool { return v.IpAnchored }).(pulumi.BoolOutput)
}

func (o GetZPASegmentGroupApplicationOutput) LogFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []string { return v.LogFeatures }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The name of the segment group to be exported.
func (o GetZPASegmentGroupApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) string { return v.Name }).(pulumi.StringOutput)
}

// (bool)
func (o GetZPASegmentGroupApplicationOutput) PassiveHealthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) bool { return v.PassiveHealthEnabled }).(pulumi.BoolOutput)
}

// (Computed)
func (o GetZPASegmentGroupApplicationOutput) ServerGroups() GetZPASegmentGroupApplicationServerGroupArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []GetZPASegmentGroupApplicationServerGroup {
		return v.ServerGroups
	}).(GetZPASegmentGroupApplicationServerGroupArrayOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) TcpPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []string { return v.TcpPortRanges }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) TcpPortsIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []string { return v.TcpPortsIns }).(pulumi.StringArrayOutput)
}

func (o GetZPASegmentGroupApplicationOutput) TcpPortsOuts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []string { return v.TcpPortsOuts }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationOutput) UdpPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplication) []string { return v.UdpPortRanges }).(pulumi.StringArrayOutput)
}

type GetZPASegmentGroupApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetZPASegmentGroupApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPASegmentGroupApplication)(nil)).Elem()
}

func (o GetZPASegmentGroupApplicationArrayOutput) ToGetZPASegmentGroupApplicationArrayOutput() GetZPASegmentGroupApplicationArrayOutput {
	return o
}

func (o GetZPASegmentGroupApplicationArrayOutput) ToGetZPASegmentGroupApplicationArrayOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationArrayOutput {
	return o
}

func (o GetZPASegmentGroupApplicationArrayOutput) Index(i pulumi.IntInput) GetZPASegmentGroupApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPASegmentGroupApplication {
		return vs[0].([]GetZPASegmentGroupApplication)[vs[1].(int)]
	}).(GetZPASegmentGroupApplicationOutput)
}

type GetZPASegmentGroupApplicationServerGroup struct {
	// (string)
	ConfigSpace string `pulumi:"configSpace"`
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	Description string `pulumi:"description"`
	// (bool)
	DynamicDiscovery bool `pulumi:"dynamicDiscovery"`
	// (bool)
	Enabled bool `pulumi:"enabled"`
	// The ID of the segment group to be exported.
	Id string `pulumi:"id"`
	// (string)
	ModifiedBy string `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	// The name of the segment group to be exported.
	Name string `pulumi:"name"`
}

// GetZPASegmentGroupApplicationServerGroupInput is an input type that accepts GetZPASegmentGroupApplicationServerGroupArgs and GetZPASegmentGroupApplicationServerGroupOutput values.
// You can construct a concrete instance of `GetZPASegmentGroupApplicationServerGroupInput` via:
//
//	GetZPASegmentGroupApplicationServerGroupArgs{...}
type GetZPASegmentGroupApplicationServerGroupInput interface {
	pulumi.Input

	ToGetZPASegmentGroupApplicationServerGroupOutput() GetZPASegmentGroupApplicationServerGroupOutput
	ToGetZPASegmentGroupApplicationServerGroupOutputWithContext(context.Context) GetZPASegmentGroupApplicationServerGroupOutput
}

type GetZPASegmentGroupApplicationServerGroupArgs struct {
	// (string)
	ConfigSpace pulumi.StringInput `pulumi:"configSpace"`
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (bool)
	DynamicDiscovery pulumi.BoolInput `pulumi:"dynamicDiscovery"`
	// (bool)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the segment group to be exported.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	ModifiedBy pulumi.StringInput `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// The name of the segment group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPASegmentGroupApplicationServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPASegmentGroupApplicationServerGroup)(nil)).Elem()
}

func (i GetZPASegmentGroupApplicationServerGroupArgs) ToGetZPASegmentGroupApplicationServerGroupOutput() GetZPASegmentGroupApplicationServerGroupOutput {
	return i.ToGetZPASegmentGroupApplicationServerGroupOutputWithContext(context.Background())
}

func (i GetZPASegmentGroupApplicationServerGroupArgs) ToGetZPASegmentGroupApplicationServerGroupOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPASegmentGroupApplicationServerGroupOutput)
}

// GetZPASegmentGroupApplicationServerGroupArrayInput is an input type that accepts GetZPASegmentGroupApplicationServerGroupArray and GetZPASegmentGroupApplicationServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPASegmentGroupApplicationServerGroupArrayInput` via:
//
//	GetZPASegmentGroupApplicationServerGroupArray{ GetZPASegmentGroupApplicationServerGroupArgs{...} }
type GetZPASegmentGroupApplicationServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPASegmentGroupApplicationServerGroupArrayOutput() GetZPASegmentGroupApplicationServerGroupArrayOutput
	ToGetZPASegmentGroupApplicationServerGroupArrayOutputWithContext(context.Context) GetZPASegmentGroupApplicationServerGroupArrayOutput
}

type GetZPASegmentGroupApplicationServerGroupArray []GetZPASegmentGroupApplicationServerGroupInput

func (GetZPASegmentGroupApplicationServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPASegmentGroupApplicationServerGroup)(nil)).Elem()
}

func (i GetZPASegmentGroupApplicationServerGroupArray) ToGetZPASegmentGroupApplicationServerGroupArrayOutput() GetZPASegmentGroupApplicationServerGroupArrayOutput {
	return i.ToGetZPASegmentGroupApplicationServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPASegmentGroupApplicationServerGroupArray) ToGetZPASegmentGroupApplicationServerGroupArrayOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPASegmentGroupApplicationServerGroupArrayOutput)
}

type GetZPASegmentGroupApplicationServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPASegmentGroupApplicationServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPASegmentGroupApplicationServerGroup)(nil)).Elem()
}

func (o GetZPASegmentGroupApplicationServerGroupOutput) ToGetZPASegmentGroupApplicationServerGroupOutput() GetZPASegmentGroupApplicationServerGroupOutput {
	return o
}

func (o GetZPASegmentGroupApplicationServerGroupOutput) ToGetZPASegmentGroupApplicationServerGroupOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationServerGroupOutput {
	return o
}

// (string)
func (o GetZPASegmentGroupApplicationServerGroupOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationServerGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationServerGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.Description }).(pulumi.StringOutput)
}

// (bool)
func (o GetZPASegmentGroupApplicationServerGroupOutput) DynamicDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) bool { return v.DynamicDiscovery }).(pulumi.BoolOutput)
}

// (bool)
func (o GetZPASegmentGroupApplicationServerGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the segment group to be exported.
func (o GetZPASegmentGroupApplicationServerGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationServerGroupOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

// (string)
func (o GetZPASegmentGroupApplicationServerGroupOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The name of the segment group to be exported.
func (o GetZPASegmentGroupApplicationServerGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPASegmentGroupApplicationServerGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPASegmentGroupApplicationServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPASegmentGroupApplicationServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPASegmentGroupApplicationServerGroup)(nil)).Elem()
}

func (o GetZPASegmentGroupApplicationServerGroupArrayOutput) ToGetZPASegmentGroupApplicationServerGroupArrayOutput() GetZPASegmentGroupApplicationServerGroupArrayOutput {
	return o
}

func (o GetZPASegmentGroupApplicationServerGroupArrayOutput) ToGetZPASegmentGroupApplicationServerGroupArrayOutputWithContext(ctx context.Context) GetZPASegmentGroupApplicationServerGroupArrayOutput {
	return o
}

func (o GetZPASegmentGroupApplicationServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPASegmentGroupApplicationServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPASegmentGroupApplicationServerGroup {
		return vs[0].([]GetZPASegmentGroupApplicationServerGroup)[vs[1].(int)]
	}).(GetZPASegmentGroupApplicationServerGroupOutput)
}

type GetZPAServerGroupAppConnectorGroup struct {
	CityCountry  string                                        `pulumi:"cityCountry"`
	Connectors   []GetZPAServerGroupAppConnectorGroupConnector `pulumi:"connectors"`
	CountryCode  string                                        `pulumi:"countryCode"`
	CreationTime string                                        `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description  string `pulumi:"description"`
	DnsQueryType string `pulumi:"dnsQueryType"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled       bool   `pulumi:"enabled"`
	GeolocationId string `pulumi:"geolocationId"`
	// The ID of the server group to be exported.
	Id           string `pulumi:"id"`
	Latitude     string `pulumi:"latitude"`
	Location     string `pulumi:"location"`
	Longitude    string `pulumi:"longitude"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name                  string                                          `pulumi:"name"`
	ServerGroups          []GetZPAServerGroupAppConnectorGroupServerGroup `pulumi:"serverGroups"`
	SiemAppConnectorGroup bool                                            `pulumi:"siemAppConnectorGroup"`
	UpgradeDay            string                                          `pulumi:"upgradeDay"`
	UpgradeTimeInSecs     string                                          `pulumi:"upgradeTimeInSecs"`
	VersionProfileId      string                                          `pulumi:"versionProfileId"`
}

// GetZPAServerGroupAppConnectorGroupInput is an input type that accepts GetZPAServerGroupAppConnectorGroupArgs and GetZPAServerGroupAppConnectorGroupOutput values.
// You can construct a concrete instance of `GetZPAServerGroupAppConnectorGroupInput` via:
//
//	GetZPAServerGroupAppConnectorGroupArgs{...}
type GetZPAServerGroupAppConnectorGroupInput interface {
	pulumi.Input

	ToGetZPAServerGroupAppConnectorGroupOutput() GetZPAServerGroupAppConnectorGroupOutput
	ToGetZPAServerGroupAppConnectorGroupOutputWithContext(context.Context) GetZPAServerGroupAppConnectorGroupOutput
}

type GetZPAServerGroupAppConnectorGroupArgs struct {
	CityCountry  pulumi.StringInput                                    `pulumi:"cityCountry"`
	Connectors   GetZPAServerGroupAppConnectorGroupConnectorArrayInput `pulumi:"connectors"`
	CountryCode  pulumi.StringInput                                    `pulumi:"countryCode"`
	CreationTime pulumi.StringInput                                    `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description  pulumi.StringInput `pulumi:"description"`
	DnsQueryType pulumi.StringInput `pulumi:"dnsQueryType"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled       pulumi.BoolInput   `pulumi:"enabled"`
	GeolocationId pulumi.StringInput `pulumi:"geolocationId"`
	// The ID of the server group to be exported.
	Id           pulumi.StringInput `pulumi:"id"`
	Latitude     pulumi.StringInput `pulumi:"latitude"`
	Location     pulumi.StringInput `pulumi:"location"`
	Longitude    pulumi.StringInput `pulumi:"longitude"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name                  pulumi.StringInput                                      `pulumi:"name"`
	ServerGroups          GetZPAServerGroupAppConnectorGroupServerGroupArrayInput `pulumi:"serverGroups"`
	SiemAppConnectorGroup pulumi.BoolInput                                        `pulumi:"siemAppConnectorGroup"`
	UpgradeDay            pulumi.StringInput                                      `pulumi:"upgradeDay"`
	UpgradeTimeInSecs     pulumi.StringInput                                      `pulumi:"upgradeTimeInSecs"`
	VersionProfileId      pulumi.StringInput                                      `pulumi:"versionProfileId"`
}

func (GetZPAServerGroupAppConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (i GetZPAServerGroupAppConnectorGroupArgs) ToGetZPAServerGroupAppConnectorGroupOutput() GetZPAServerGroupAppConnectorGroupOutput {
	return i.ToGetZPAServerGroupAppConnectorGroupOutputWithContext(context.Background())
}

func (i GetZPAServerGroupAppConnectorGroupArgs) ToGetZPAServerGroupAppConnectorGroupOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupAppConnectorGroupOutput)
}

// GetZPAServerGroupAppConnectorGroupArrayInput is an input type that accepts GetZPAServerGroupAppConnectorGroupArray and GetZPAServerGroupAppConnectorGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAServerGroupAppConnectorGroupArrayInput` via:
//
//	GetZPAServerGroupAppConnectorGroupArray{ GetZPAServerGroupAppConnectorGroupArgs{...} }
type GetZPAServerGroupAppConnectorGroupArrayInput interface {
	pulumi.Input

	ToGetZPAServerGroupAppConnectorGroupArrayOutput() GetZPAServerGroupAppConnectorGroupArrayOutput
	ToGetZPAServerGroupAppConnectorGroupArrayOutputWithContext(context.Context) GetZPAServerGroupAppConnectorGroupArrayOutput
}

type GetZPAServerGroupAppConnectorGroupArray []GetZPAServerGroupAppConnectorGroupInput

func (GetZPAServerGroupAppConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (i GetZPAServerGroupAppConnectorGroupArray) ToGetZPAServerGroupAppConnectorGroupArrayOutput() GetZPAServerGroupAppConnectorGroupArrayOutput {
	return i.ToGetZPAServerGroupAppConnectorGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAServerGroupAppConnectorGroupArray) ToGetZPAServerGroupAppConnectorGroupArrayOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupAppConnectorGroupArrayOutput)
}

type GetZPAServerGroupAppConnectorGroupOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupAppConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (o GetZPAServerGroupAppConnectorGroupOutput) ToGetZPAServerGroupAppConnectorGroupOutput() GetZPAServerGroupAppConnectorGroupOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupOutput) ToGetZPAServerGroupAppConnectorGroupOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupOutput) CityCountry() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.CityCountry }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) Connectors() GetZPAServerGroupAppConnectorGroupConnectorArrayOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) []GetZPAServerGroupAppConnectorGroupConnector {
		return v.Connectors
	}).(GetZPAServerGroupAppConnectorGroupConnectorArrayOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string) This field is the description of the server group.
func (o GetZPAServerGroupAppConnectorGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) DnsQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.DnsQueryType }).(pulumi.StringOutput)
}

// (bool) This field defines if the server group is enabled or disabled.
func (o GetZPAServerGroupAppConnectorGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) GeolocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.GeolocationId }).(pulumi.StringOutput)
}

// The ID of the server group to be exported.
func (o GetZPAServerGroupAppConnectorGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Latitude }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Longitude }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// The name of the server group to be exported.
func (o GetZPAServerGroupAppConnectorGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) ServerGroups() GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) []GetZPAServerGroupAppConnectorGroupServerGroup {
		return v.ServerGroups
	}).(GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) SiemAppConnectorGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) bool { return v.SiemAppConnectorGroup }).(pulumi.BoolOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) UpgradeDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.UpgradeDay }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) UpgradeTimeInSecs() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.UpgradeTimeInSecs }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupOutput) VersionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroup) string { return v.VersionProfileId }).(pulumi.StringOutput)
}

type GetZPAServerGroupAppConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupAppConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupAppConnectorGroup)(nil)).Elem()
}

func (o GetZPAServerGroupAppConnectorGroupArrayOutput) ToGetZPAServerGroupAppConnectorGroupArrayOutput() GetZPAServerGroupAppConnectorGroupArrayOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupArrayOutput) ToGetZPAServerGroupAppConnectorGroupArrayOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupArrayOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupArrayOutput) Index(i pulumi.IntInput) GetZPAServerGroupAppConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServerGroupAppConnectorGroup {
		return vs[0].([]GetZPAServerGroupAppConnectorGroup)[vs[1].(int)]
	}).(GetZPAServerGroupAppConnectorGroupOutput)
}

type GetZPAServerGroupAppConnectorGroupConnector struct {
	CreationTime string `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description string `pulumi:"description"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled     bool   `pulumi:"enabled"`
	Fingerprint string `pulumi:"fingerprint"`
	// The ID of the server group to be exported.
	Id           string `pulumi:"id"`
	IssuedCertId string `pulumi:"issuedCertId"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name           *string `pulumi:"name"`
	UpgradeAttempt string  `pulumi:"upgradeAttempt"`
}

// GetZPAServerGroupAppConnectorGroupConnectorInput is an input type that accepts GetZPAServerGroupAppConnectorGroupConnectorArgs and GetZPAServerGroupAppConnectorGroupConnectorOutput values.
// You can construct a concrete instance of `GetZPAServerGroupAppConnectorGroupConnectorInput` via:
//
//	GetZPAServerGroupAppConnectorGroupConnectorArgs{...}
type GetZPAServerGroupAppConnectorGroupConnectorInput interface {
	pulumi.Input

	ToGetZPAServerGroupAppConnectorGroupConnectorOutput() GetZPAServerGroupAppConnectorGroupConnectorOutput
	ToGetZPAServerGroupAppConnectorGroupConnectorOutputWithContext(context.Context) GetZPAServerGroupAppConnectorGroupConnectorOutput
}

type GetZPAServerGroupAppConnectorGroupConnectorArgs struct {
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description pulumi.StringInput `pulumi:"description"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	// The ID of the server group to be exported.
	Id           pulumi.StringInput `pulumi:"id"`
	IssuedCertId pulumi.StringInput `pulumi:"issuedCertId"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name           pulumi.StringPtrInput `pulumi:"name"`
	UpgradeAttempt pulumi.StringInput    `pulumi:"upgradeAttempt"`
}

func (GetZPAServerGroupAppConnectorGroupConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupConnector)(nil)).Elem()
}

func (i GetZPAServerGroupAppConnectorGroupConnectorArgs) ToGetZPAServerGroupAppConnectorGroupConnectorOutput() GetZPAServerGroupAppConnectorGroupConnectorOutput {
	return i.ToGetZPAServerGroupAppConnectorGroupConnectorOutputWithContext(context.Background())
}

func (i GetZPAServerGroupAppConnectorGroupConnectorArgs) ToGetZPAServerGroupAppConnectorGroupConnectorOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupAppConnectorGroupConnectorOutput)
}

// GetZPAServerGroupAppConnectorGroupConnectorArrayInput is an input type that accepts GetZPAServerGroupAppConnectorGroupConnectorArray and GetZPAServerGroupAppConnectorGroupConnectorArrayOutput values.
// You can construct a concrete instance of `GetZPAServerGroupAppConnectorGroupConnectorArrayInput` via:
//
//	GetZPAServerGroupAppConnectorGroupConnectorArray{ GetZPAServerGroupAppConnectorGroupConnectorArgs{...} }
type GetZPAServerGroupAppConnectorGroupConnectorArrayInput interface {
	pulumi.Input

	ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutput() GetZPAServerGroupAppConnectorGroupConnectorArrayOutput
	ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutputWithContext(context.Context) GetZPAServerGroupAppConnectorGroupConnectorArrayOutput
}

type GetZPAServerGroupAppConnectorGroupConnectorArray []GetZPAServerGroupAppConnectorGroupConnectorInput

func (GetZPAServerGroupAppConnectorGroupConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupAppConnectorGroupConnector)(nil)).Elem()
}

func (i GetZPAServerGroupAppConnectorGroupConnectorArray) ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutput() GetZPAServerGroupAppConnectorGroupConnectorArrayOutput {
	return i.ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutputWithContext(context.Background())
}

func (i GetZPAServerGroupAppConnectorGroupConnectorArray) ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupAppConnectorGroupConnectorArrayOutput)
}

type GetZPAServerGroupAppConnectorGroupConnectorOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupAppConnectorGroupConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupConnector)(nil)).Elem()
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) ToGetZPAServerGroupAppConnectorGroupConnectorOutput() GetZPAServerGroupAppConnectorGroupConnectorOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) ToGetZPAServerGroupAppConnectorGroupConnectorOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupConnectorOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string) This field is the description of the server group.
func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.Description }).(pulumi.StringOutput)
}

// (bool) This field defines if the server group is enabled or disabled.
func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The ID of the server group to be exported.
func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) IssuedCertId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.IssuedCertId }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// The name of the server group to be exported.
func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetZPAServerGroupAppConnectorGroupConnectorOutput) UpgradeAttempt() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupConnector) string { return v.UpgradeAttempt }).(pulumi.StringOutput)
}

type GetZPAServerGroupAppConnectorGroupConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupAppConnectorGroupConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupAppConnectorGroupConnector)(nil)).Elem()
}

func (o GetZPAServerGroupAppConnectorGroupConnectorArrayOutput) ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutput() GetZPAServerGroupAppConnectorGroupConnectorArrayOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupConnectorArrayOutput) ToGetZPAServerGroupAppConnectorGroupConnectorArrayOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupConnectorArrayOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupConnectorArrayOutput) Index(i pulumi.IntInput) GetZPAServerGroupAppConnectorGroupConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServerGroupAppConnectorGroupConnector {
		return vs[0].([]GetZPAServerGroupAppConnectorGroupConnector)[vs[1].(int)]
	}).(GetZPAServerGroupAppConnectorGroupConnectorOutput)
}

type GetZPAServerGroupAppConnectorGroupServerGroup struct {
	// (string)
	ConfigSpace  string `pulumi:"configSpace"`
	CreationTime string `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description string `pulumi:"description"`
	// (bool) This field controls dynamic discovery of the servers.
	DynamicDiscovery bool `pulumi:"dynamicDiscovery"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the server group to be exported.
	Id           string `pulumi:"id"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name *string `pulumi:"name"`
}

// GetZPAServerGroupAppConnectorGroupServerGroupInput is an input type that accepts GetZPAServerGroupAppConnectorGroupServerGroupArgs and GetZPAServerGroupAppConnectorGroupServerGroupOutput values.
// You can construct a concrete instance of `GetZPAServerGroupAppConnectorGroupServerGroupInput` via:
//
//	GetZPAServerGroupAppConnectorGroupServerGroupArgs{...}
type GetZPAServerGroupAppConnectorGroupServerGroupInput interface {
	pulumi.Input

	ToGetZPAServerGroupAppConnectorGroupServerGroupOutput() GetZPAServerGroupAppConnectorGroupServerGroupOutput
	ToGetZPAServerGroupAppConnectorGroupServerGroupOutputWithContext(context.Context) GetZPAServerGroupAppConnectorGroupServerGroupOutput
}

type GetZPAServerGroupAppConnectorGroupServerGroupArgs struct {
	// (string)
	ConfigSpace  pulumi.StringInput `pulumi:"configSpace"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description pulumi.StringInput `pulumi:"description"`
	// (bool) This field controls dynamic discovery of the servers.
	DynamicDiscovery pulumi.BoolInput `pulumi:"dynamicDiscovery"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the server group to be exported.
	Id           pulumi.StringInput `pulumi:"id"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetZPAServerGroupAppConnectorGroupServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupServerGroup)(nil)).Elem()
}

func (i GetZPAServerGroupAppConnectorGroupServerGroupArgs) ToGetZPAServerGroupAppConnectorGroupServerGroupOutput() GetZPAServerGroupAppConnectorGroupServerGroupOutput {
	return i.ToGetZPAServerGroupAppConnectorGroupServerGroupOutputWithContext(context.Background())
}

func (i GetZPAServerGroupAppConnectorGroupServerGroupArgs) ToGetZPAServerGroupAppConnectorGroupServerGroupOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupAppConnectorGroupServerGroupOutput)
}

// GetZPAServerGroupAppConnectorGroupServerGroupArrayInput is an input type that accepts GetZPAServerGroupAppConnectorGroupServerGroupArray and GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput values.
// You can construct a concrete instance of `GetZPAServerGroupAppConnectorGroupServerGroupArrayInput` via:
//
//	GetZPAServerGroupAppConnectorGroupServerGroupArray{ GetZPAServerGroupAppConnectorGroupServerGroupArgs{...} }
type GetZPAServerGroupAppConnectorGroupServerGroupArrayInput interface {
	pulumi.Input

	ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutput() GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput
	ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutputWithContext(context.Context) GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput
}

type GetZPAServerGroupAppConnectorGroupServerGroupArray []GetZPAServerGroupAppConnectorGroupServerGroupInput

func (GetZPAServerGroupAppConnectorGroupServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupAppConnectorGroupServerGroup)(nil)).Elem()
}

func (i GetZPAServerGroupAppConnectorGroupServerGroupArray) ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutput() GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput {
	return i.ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutputWithContext(context.Background())
}

func (i GetZPAServerGroupAppConnectorGroupServerGroupArray) ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput)
}

type GetZPAServerGroupAppConnectorGroupServerGroupOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupAppConnectorGroupServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupServerGroup)(nil)).Elem()
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) ToGetZPAServerGroupAppConnectorGroupServerGroupOutput() GetZPAServerGroupAppConnectorGroupServerGroupOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) ToGetZPAServerGroupAppConnectorGroupServerGroupOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupServerGroupOutput {
	return o
}

// (string)
func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string) This field is the description of the server group.
func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) string { return v.Description }).(pulumi.StringOutput)
}

// (bool) This field controls dynamic discovery of the servers.
func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) DynamicDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) bool { return v.DynamicDiscovery }).(pulumi.BoolOutput)
}

// (bool) This field defines if the server group is enabled or disabled.
func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the server group to be exported.
func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// The name of the server group to be exported.
func (o GetZPAServerGroupAppConnectorGroupServerGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPAServerGroupAppConnectorGroupServerGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupAppConnectorGroupServerGroup)(nil)).Elem()
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput) ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutput() GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput) ToGetZPAServerGroupAppConnectorGroupServerGroupArrayOutputWithContext(ctx context.Context) GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput {
	return o
}

func (o GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput) Index(i pulumi.IntInput) GetZPAServerGroupAppConnectorGroupServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServerGroupAppConnectorGroupServerGroup {
		return vs[0].([]GetZPAServerGroupAppConnectorGroupServerGroup)[vs[1].(int)]
	}).(GetZPAServerGroupAppConnectorGroupServerGroupOutput)
}

type GetZPAServerGroupApplication struct {
	// The ID of the server group to be exported.
	Id string `pulumi:"id"`
	// The name of the server group to be exported.
	Name string `pulumi:"name"`
}

// GetZPAServerGroupApplicationInput is an input type that accepts GetZPAServerGroupApplicationArgs and GetZPAServerGroupApplicationOutput values.
// You can construct a concrete instance of `GetZPAServerGroupApplicationInput` via:
//
//	GetZPAServerGroupApplicationArgs{...}
type GetZPAServerGroupApplicationInput interface {
	pulumi.Input

	ToGetZPAServerGroupApplicationOutput() GetZPAServerGroupApplicationOutput
	ToGetZPAServerGroupApplicationOutputWithContext(context.Context) GetZPAServerGroupApplicationOutput
}

type GetZPAServerGroupApplicationArgs struct {
	// The ID of the server group to be exported.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the server group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAServerGroupApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupApplication)(nil)).Elem()
}

func (i GetZPAServerGroupApplicationArgs) ToGetZPAServerGroupApplicationOutput() GetZPAServerGroupApplicationOutput {
	return i.ToGetZPAServerGroupApplicationOutputWithContext(context.Background())
}

func (i GetZPAServerGroupApplicationArgs) ToGetZPAServerGroupApplicationOutputWithContext(ctx context.Context) GetZPAServerGroupApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupApplicationOutput)
}

// GetZPAServerGroupApplicationArrayInput is an input type that accepts GetZPAServerGroupApplicationArray and GetZPAServerGroupApplicationArrayOutput values.
// You can construct a concrete instance of `GetZPAServerGroupApplicationArrayInput` via:
//
//	GetZPAServerGroupApplicationArray{ GetZPAServerGroupApplicationArgs{...} }
type GetZPAServerGroupApplicationArrayInput interface {
	pulumi.Input

	ToGetZPAServerGroupApplicationArrayOutput() GetZPAServerGroupApplicationArrayOutput
	ToGetZPAServerGroupApplicationArrayOutputWithContext(context.Context) GetZPAServerGroupApplicationArrayOutput
}

type GetZPAServerGroupApplicationArray []GetZPAServerGroupApplicationInput

func (GetZPAServerGroupApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupApplication)(nil)).Elem()
}

func (i GetZPAServerGroupApplicationArray) ToGetZPAServerGroupApplicationArrayOutput() GetZPAServerGroupApplicationArrayOutput {
	return i.ToGetZPAServerGroupApplicationArrayOutputWithContext(context.Background())
}

func (i GetZPAServerGroupApplicationArray) ToGetZPAServerGroupApplicationArrayOutputWithContext(ctx context.Context) GetZPAServerGroupApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupApplicationArrayOutput)
}

type GetZPAServerGroupApplicationOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupApplication)(nil)).Elem()
}

func (o GetZPAServerGroupApplicationOutput) ToGetZPAServerGroupApplicationOutput() GetZPAServerGroupApplicationOutput {
	return o
}

func (o GetZPAServerGroupApplicationOutput) ToGetZPAServerGroupApplicationOutputWithContext(ctx context.Context) GetZPAServerGroupApplicationOutput {
	return o
}

// The ID of the server group to be exported.
func (o GetZPAServerGroupApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupApplication) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the server group to be exported.
func (o GetZPAServerGroupApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupApplication) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAServerGroupApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupApplication)(nil)).Elem()
}

func (o GetZPAServerGroupApplicationArrayOutput) ToGetZPAServerGroupApplicationArrayOutput() GetZPAServerGroupApplicationArrayOutput {
	return o
}

func (o GetZPAServerGroupApplicationArrayOutput) ToGetZPAServerGroupApplicationArrayOutputWithContext(ctx context.Context) GetZPAServerGroupApplicationArrayOutput {
	return o
}

func (o GetZPAServerGroupApplicationArrayOutput) Index(i pulumi.IntInput) GetZPAServerGroupApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServerGroupApplication {
		return vs[0].([]GetZPAServerGroupApplication)[vs[1].(int)]
	}).(GetZPAServerGroupApplicationOutput)
}

type GetZPAServerGroupServer struct {
	Address           string   `pulumi:"address"`
	AppServerGroupIds []string `pulumi:"appServerGroupIds"`
	// (string)
	ConfigSpace  string `pulumi:"configSpace"`
	CreationTime string `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description string `pulumi:"description"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the server group to be exported.
	Id           string `pulumi:"id"`
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name string `pulumi:"name"`
}

// GetZPAServerGroupServerInput is an input type that accepts GetZPAServerGroupServerArgs and GetZPAServerGroupServerOutput values.
// You can construct a concrete instance of `GetZPAServerGroupServerInput` via:
//
//	GetZPAServerGroupServerArgs{...}
type GetZPAServerGroupServerInput interface {
	pulumi.Input

	ToGetZPAServerGroupServerOutput() GetZPAServerGroupServerOutput
	ToGetZPAServerGroupServerOutputWithContext(context.Context) GetZPAServerGroupServerOutput
}

type GetZPAServerGroupServerArgs struct {
	Address           pulumi.StringInput      `pulumi:"address"`
	AppServerGroupIds pulumi.StringArrayInput `pulumi:"appServerGroupIds"`
	// (string)
	ConfigSpace  pulumi.StringInput `pulumi:"configSpace"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description pulumi.StringInput `pulumi:"description"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the server group to be exported.
	Id           pulumi.StringInput `pulumi:"id"`
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// The name of the server group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZPAServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupServer)(nil)).Elem()
}

func (i GetZPAServerGroupServerArgs) ToGetZPAServerGroupServerOutput() GetZPAServerGroupServerOutput {
	return i.ToGetZPAServerGroupServerOutputWithContext(context.Background())
}

func (i GetZPAServerGroupServerArgs) ToGetZPAServerGroupServerOutputWithContext(ctx context.Context) GetZPAServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupServerOutput)
}

// GetZPAServerGroupServerArrayInput is an input type that accepts GetZPAServerGroupServerArray and GetZPAServerGroupServerArrayOutput values.
// You can construct a concrete instance of `GetZPAServerGroupServerArrayInput` via:
//
//	GetZPAServerGroupServerArray{ GetZPAServerGroupServerArgs{...} }
type GetZPAServerGroupServerArrayInput interface {
	pulumi.Input

	ToGetZPAServerGroupServerArrayOutput() GetZPAServerGroupServerArrayOutput
	ToGetZPAServerGroupServerArrayOutputWithContext(context.Context) GetZPAServerGroupServerArrayOutput
}

type GetZPAServerGroupServerArray []GetZPAServerGroupServerInput

func (GetZPAServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupServer)(nil)).Elem()
}

func (i GetZPAServerGroupServerArray) ToGetZPAServerGroupServerArrayOutput() GetZPAServerGroupServerArrayOutput {
	return i.ToGetZPAServerGroupServerArrayOutputWithContext(context.Background())
}

func (i GetZPAServerGroupServerArray) ToGetZPAServerGroupServerArrayOutputWithContext(ctx context.Context) GetZPAServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServerGroupServerArrayOutput)
}

type GetZPAServerGroupServerOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServerGroupServer)(nil)).Elem()
}

func (o GetZPAServerGroupServerOutput) ToGetZPAServerGroupServerOutput() GetZPAServerGroupServerOutput {
	return o
}

func (o GetZPAServerGroupServerOutput) ToGetZPAServerGroupServerOutputWithContext(ctx context.Context) GetZPAServerGroupServerOutput {
	return o
}

func (o GetZPAServerGroupServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupServerOutput) AppServerGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) []string { return v.AppServerGroupIds }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetZPAServerGroupServerOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupServerOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string) This field is the description of the server group.
func (o GetZPAServerGroupServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.Description }).(pulumi.StringOutput)
}

// (bool) This field defines if the server group is enabled or disabled.
func (o GetZPAServerGroupServerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the server group to be exported.
func (o GetZPAServerGroupServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupServerOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAServerGroupServerOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// The name of the server group to be exported.
func (o GetZPAServerGroupServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServerGroupServer) string { return v.Name }).(pulumi.StringOutput)
}

type GetZPAServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServerGroupServer)(nil)).Elem()
}

func (o GetZPAServerGroupServerArrayOutput) ToGetZPAServerGroupServerArrayOutput() GetZPAServerGroupServerArrayOutput {
	return o
}

func (o GetZPAServerGroupServerArrayOutput) ToGetZPAServerGroupServerArrayOutputWithContext(ctx context.Context) GetZPAServerGroupServerArrayOutput {
	return o
}

func (o GetZPAServerGroupServerArrayOutput) Index(i pulumi.IntInput) GetZPAServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServerGroupServer {
		return vs[0].([]GetZPAServerGroupServer)[vs[1].(int)]
	}).(GetZPAServerGroupServerOutput)
}

type GetZPAServiceEdgeGroupServiceEdge struct {
	// (string)
	ApplicationStartTime string `pulumi:"applicationStartTime"`
	// (string)
	ControlChannelStatus string `pulumi:"controlChannelStatus"`
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	CtrlBrokerName string `pulumi:"ctrlBrokerName"`
	// (string)
	CurrentVersion string `pulumi:"currentVersion"`
	// (string) Description of the Service Edge Group.
	Description string `pulumi:"description"`
	// (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled bool `pulumi:"enabled"`
	// (string)
	EnrollmentCert map[string]interface{} `pulumi:"enrollmentCert"`
	// (string)
	ExpectedUpgradeTime string `pulumi:"expectedUpgradeTime"`
	// (string)
	ExpectedVersion string `pulumi:"expectedVersion"`
	Fingerprint     string `pulumi:"fingerprint"`
	// The ID of the service edge group to be exported.
	Id    string `pulumi:"id"`
	Ipacl string `pulumi:"ipacl"`
	// (string)
	IssuedCertId string `pulumi:"issuedCertId"`
	// (string)
	LastBrokerConnectTime string `pulumi:"lastBrokerConnectTime"`
	// (string)
	LastBrokerConnectTimeDuration string `pulumi:"lastBrokerConnectTimeDuration"`
	// (string)
	LastBrokerDisconnectTime string `pulumi:"lastBrokerDisconnectTime"`
	// (string)
	LastBrokerDisconnectTimeDuration string `pulumi:"lastBrokerDisconnectTimeDuration"`
	// (string)
	LastUpgradeTime string `pulumi:"lastUpgradeTime"`
	// (string)
	Latitude string `pulumi:"latitude"`
	// (string)
	ListenIps string `pulumi:"listenIps"`
	// (string)
	Location string `pulumi:"location"`
	// (string)
	Longitude string `pulumi:"longitude"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// The name of the service edge group to be exported.
	Name string `pulumi:"name"`
	// (string)
	Platform string `pulumi:"platform"`
	// (string)
	PreviousVersion string `pulumi:"previousVersion"`
	// (string)
	PrivateIp string `pulumi:"privateIp"`
	// (string)
	ProvisioningKeyId string `pulumi:"provisioningKeyId"`
	// (string)
	ProvisioningKeyName string `pulumi:"provisioningKeyName"`
	// (string)
	PublicIp string `pulumi:"publicIp"`
	// (string)
	PublishIps string `pulumi:"publishIps"`
	// (string)
	SargeVersion string `pulumi:"sargeVersion"`
	// (string)
	ServiceEdgeGroupId string `pulumi:"serviceEdgeGroupId"`
	// (string)
	ServiceEdgeGroupName string `pulumi:"serviceEdgeGroupName"`
	// (string)
	UpgradeAttempt string `pulumi:"upgradeAttempt"`
	// (string)
	UpgradeStatus string `pulumi:"upgradeStatus"`
}

// GetZPAServiceEdgeGroupServiceEdgeInput is an input type that accepts GetZPAServiceEdgeGroupServiceEdgeArgs and GetZPAServiceEdgeGroupServiceEdgeOutput values.
// You can construct a concrete instance of `GetZPAServiceEdgeGroupServiceEdgeInput` via:
//
//	GetZPAServiceEdgeGroupServiceEdgeArgs{...}
type GetZPAServiceEdgeGroupServiceEdgeInput interface {
	pulumi.Input

	ToGetZPAServiceEdgeGroupServiceEdgeOutput() GetZPAServiceEdgeGroupServiceEdgeOutput
	ToGetZPAServiceEdgeGroupServiceEdgeOutputWithContext(context.Context) GetZPAServiceEdgeGroupServiceEdgeOutput
}

type GetZPAServiceEdgeGroupServiceEdgeArgs struct {
	// (string)
	ApplicationStartTime pulumi.StringInput `pulumi:"applicationStartTime"`
	// (string)
	ControlChannelStatus pulumi.StringInput `pulumi:"controlChannelStatus"`
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string)
	CtrlBrokerName pulumi.StringInput `pulumi:"ctrlBrokerName"`
	// (string)
	CurrentVersion pulumi.StringInput `pulumi:"currentVersion"`
	// (string) Description of the Service Edge Group.
	Description pulumi.StringInput `pulumi:"description"`
	// (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// (string)
	EnrollmentCert pulumi.MapInput `pulumi:"enrollmentCert"`
	// (string)
	ExpectedUpgradeTime pulumi.StringInput `pulumi:"expectedUpgradeTime"`
	// (string)
	ExpectedVersion pulumi.StringInput `pulumi:"expectedVersion"`
	Fingerprint     pulumi.StringInput `pulumi:"fingerprint"`
	// The ID of the service edge group to be exported.
	Id    pulumi.StringInput `pulumi:"id"`
	Ipacl pulumi.StringInput `pulumi:"ipacl"`
	// (string)
	IssuedCertId pulumi.StringInput `pulumi:"issuedCertId"`
	// (string)
	LastBrokerConnectTime pulumi.StringInput `pulumi:"lastBrokerConnectTime"`
	// (string)
	LastBrokerConnectTimeDuration pulumi.StringInput `pulumi:"lastBrokerConnectTimeDuration"`
	// (string)
	LastBrokerDisconnectTime pulumi.StringInput `pulumi:"lastBrokerDisconnectTime"`
	// (string)
	LastBrokerDisconnectTimeDuration pulumi.StringInput `pulumi:"lastBrokerDisconnectTimeDuration"`
	// (string)
	LastUpgradeTime pulumi.StringInput `pulumi:"lastUpgradeTime"`
	// (string)
	Latitude pulumi.StringInput `pulumi:"latitude"`
	// (string)
	ListenIps pulumi.StringInput `pulumi:"listenIps"`
	// (string)
	Location pulumi.StringInput `pulumi:"location"`
	// (string)
	Longitude pulumi.StringInput `pulumi:"longitude"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// The name of the service edge group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	Platform pulumi.StringInput `pulumi:"platform"`
	// (string)
	PreviousVersion pulumi.StringInput `pulumi:"previousVersion"`
	// (string)
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// (string)
	ProvisioningKeyId pulumi.StringInput `pulumi:"provisioningKeyId"`
	// (string)
	ProvisioningKeyName pulumi.StringInput `pulumi:"provisioningKeyName"`
	// (string)
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// (string)
	PublishIps pulumi.StringInput `pulumi:"publishIps"`
	// (string)
	SargeVersion pulumi.StringInput `pulumi:"sargeVersion"`
	// (string)
	ServiceEdgeGroupId pulumi.StringInput `pulumi:"serviceEdgeGroupId"`
	// (string)
	ServiceEdgeGroupName pulumi.StringInput `pulumi:"serviceEdgeGroupName"`
	// (string)
	UpgradeAttempt pulumi.StringInput `pulumi:"upgradeAttempt"`
	// (string)
	UpgradeStatus pulumi.StringInput `pulumi:"upgradeStatus"`
}

func (GetZPAServiceEdgeGroupServiceEdgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (i GetZPAServiceEdgeGroupServiceEdgeArgs) ToGetZPAServiceEdgeGroupServiceEdgeOutput() GetZPAServiceEdgeGroupServiceEdgeOutput {
	return i.ToGetZPAServiceEdgeGroupServiceEdgeOutputWithContext(context.Background())
}

func (i GetZPAServiceEdgeGroupServiceEdgeArgs) ToGetZPAServiceEdgeGroupServiceEdgeOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupServiceEdgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServiceEdgeGroupServiceEdgeOutput)
}

// GetZPAServiceEdgeGroupServiceEdgeArrayInput is an input type that accepts GetZPAServiceEdgeGroupServiceEdgeArray and GetZPAServiceEdgeGroupServiceEdgeArrayOutput values.
// You can construct a concrete instance of `GetZPAServiceEdgeGroupServiceEdgeArrayInput` via:
//
//	GetZPAServiceEdgeGroupServiceEdgeArray{ GetZPAServiceEdgeGroupServiceEdgeArgs{...} }
type GetZPAServiceEdgeGroupServiceEdgeArrayInput interface {
	pulumi.Input

	ToGetZPAServiceEdgeGroupServiceEdgeArrayOutput() GetZPAServiceEdgeGroupServiceEdgeArrayOutput
	ToGetZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(context.Context) GetZPAServiceEdgeGroupServiceEdgeArrayOutput
}

type GetZPAServiceEdgeGroupServiceEdgeArray []GetZPAServiceEdgeGroupServiceEdgeInput

func (GetZPAServiceEdgeGroupServiceEdgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (i GetZPAServiceEdgeGroupServiceEdgeArray) ToGetZPAServiceEdgeGroupServiceEdgeArrayOutput() GetZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return i.ToGetZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(context.Background())
}

func (i GetZPAServiceEdgeGroupServiceEdgeArray) ToGetZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServiceEdgeGroupServiceEdgeArrayOutput)
}

type GetZPAServiceEdgeGroupServiceEdgeOutput struct{ *pulumi.OutputState }

func (GetZPAServiceEdgeGroupServiceEdgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ToGetZPAServiceEdgeGroupServiceEdgeOutput() GetZPAServiceEdgeGroupServiceEdgeOutput {
	return o
}

func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ToGetZPAServiceEdgeGroupServiceEdgeOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupServiceEdgeOutput {
	return o
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ApplicationStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ApplicationStartTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ControlChannelStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ControlChannelStatus }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) CtrlBrokerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.CtrlBrokerName }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// (string) Description of the Service Edge Group.
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Description }).(pulumi.StringOutput)
}

// (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) EnrollmentCert() pulumi.MapOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) map[string]interface{} { return v.EnrollmentCert }).(pulumi.MapOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ExpectedUpgradeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ExpectedUpgradeTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ExpectedVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ExpectedVersion }).(pulumi.StringOutput)
}

func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The ID of the service edge group to be exported.
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Ipacl() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Ipacl }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) IssuedCertId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.IssuedCertId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) LastBrokerConnectTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.LastBrokerConnectTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) LastBrokerConnectTimeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.LastBrokerConnectTimeDuration }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) LastBrokerDisconnectTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.LastBrokerDisconnectTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) LastBrokerDisconnectTimeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.LastBrokerDisconnectTimeDuration }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) LastUpgradeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.LastUpgradeTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Latitude }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ListenIps() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ListenIps }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Location }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Longitude }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// The name of the service edge group to be exported.
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.Platform }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) PreviousVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.PreviousVersion }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ProvisioningKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ProvisioningKeyId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ProvisioningKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ProvisioningKeyName }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.PublicIp }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) PublishIps() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.PublishIps }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) SargeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.SargeVersion }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ServiceEdgeGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ServiceEdgeGroupId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) ServiceEdgeGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.ServiceEdgeGroupName }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) UpgradeAttempt() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.UpgradeAttempt }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupServiceEdgeOutput) UpgradeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupServiceEdge) string { return v.UpgradeStatus }).(pulumi.StringOutput)
}

type GetZPAServiceEdgeGroupServiceEdgeArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServiceEdgeGroupServiceEdgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServiceEdgeGroupServiceEdge)(nil)).Elem()
}

func (o GetZPAServiceEdgeGroupServiceEdgeArrayOutput) ToGetZPAServiceEdgeGroupServiceEdgeArrayOutput() GetZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return o
}

func (o GetZPAServiceEdgeGroupServiceEdgeArrayOutput) ToGetZPAServiceEdgeGroupServiceEdgeArrayOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return o
}

func (o GetZPAServiceEdgeGroupServiceEdgeArrayOutput) Index(i pulumi.IntInput) GetZPAServiceEdgeGroupServiceEdgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServiceEdgeGroupServiceEdge {
		return vs[0].([]GetZPAServiceEdgeGroupServiceEdge)[vs[1].(int)]
	}).(GetZPAServiceEdgeGroupServiceEdgeOutput)
}

type GetZPAServiceEdgeGroupTrustedNetwork struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	Domain string `pulumi:"domain"`
	// The ID of the service edge group to be exported.
	Id string `pulumi:"id"`
	// (string)
	MasterCustomerId string `pulumi:"masterCustomerId"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// The name of the service edge group to be exported.
	Name string `pulumi:"name"`
	// (string)
	NetworkId string `pulumi:"networkId"`
	// (string)
	ZscalerCloud string `pulumi:"zscalerCloud"`
}

// GetZPAServiceEdgeGroupTrustedNetworkInput is an input type that accepts GetZPAServiceEdgeGroupTrustedNetworkArgs and GetZPAServiceEdgeGroupTrustedNetworkOutput values.
// You can construct a concrete instance of `GetZPAServiceEdgeGroupTrustedNetworkInput` via:
//
//	GetZPAServiceEdgeGroupTrustedNetworkArgs{...}
type GetZPAServiceEdgeGroupTrustedNetworkInput interface {
	pulumi.Input

	ToGetZPAServiceEdgeGroupTrustedNetworkOutput() GetZPAServiceEdgeGroupTrustedNetworkOutput
	ToGetZPAServiceEdgeGroupTrustedNetworkOutputWithContext(context.Context) GetZPAServiceEdgeGroupTrustedNetworkOutput
}

type GetZPAServiceEdgeGroupTrustedNetworkArgs struct {
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// (string)
	Domain pulumi.StringInput `pulumi:"domain"`
	// The ID of the service edge group to be exported.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	MasterCustomerId pulumi.StringInput `pulumi:"masterCustomerId"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// The name of the service edge group to be exported.
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// (string)
	ZscalerCloud pulumi.StringInput `pulumi:"zscalerCloud"`
}

func (GetZPAServiceEdgeGroupTrustedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (i GetZPAServiceEdgeGroupTrustedNetworkArgs) ToGetZPAServiceEdgeGroupTrustedNetworkOutput() GetZPAServiceEdgeGroupTrustedNetworkOutput {
	return i.ToGetZPAServiceEdgeGroupTrustedNetworkOutputWithContext(context.Background())
}

func (i GetZPAServiceEdgeGroupTrustedNetworkArgs) ToGetZPAServiceEdgeGroupTrustedNetworkOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupTrustedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServiceEdgeGroupTrustedNetworkOutput)
}

// GetZPAServiceEdgeGroupTrustedNetworkArrayInput is an input type that accepts GetZPAServiceEdgeGroupTrustedNetworkArray and GetZPAServiceEdgeGroupTrustedNetworkArrayOutput values.
// You can construct a concrete instance of `GetZPAServiceEdgeGroupTrustedNetworkArrayInput` via:
//
//	GetZPAServiceEdgeGroupTrustedNetworkArray{ GetZPAServiceEdgeGroupTrustedNetworkArgs{...} }
type GetZPAServiceEdgeGroupTrustedNetworkArrayInput interface {
	pulumi.Input

	ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutput() GetZPAServiceEdgeGroupTrustedNetworkArrayOutput
	ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(context.Context) GetZPAServiceEdgeGroupTrustedNetworkArrayOutput
}

type GetZPAServiceEdgeGroupTrustedNetworkArray []GetZPAServiceEdgeGroupTrustedNetworkInput

func (GetZPAServiceEdgeGroupTrustedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (i GetZPAServiceEdgeGroupTrustedNetworkArray) ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutput() GetZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return i.ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(context.Background())
}

func (i GetZPAServiceEdgeGroupTrustedNetworkArray) ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZPAServiceEdgeGroupTrustedNetworkArrayOutput)
}

type GetZPAServiceEdgeGroupTrustedNetworkOutput struct{ *pulumi.OutputState }

func (GetZPAServiceEdgeGroupTrustedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) ToGetZPAServiceEdgeGroupTrustedNetworkOutput() GetZPAServiceEdgeGroupTrustedNetworkOutput {
	return o
}

func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) ToGetZPAServiceEdgeGroupTrustedNetworkOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupTrustedNetworkOutput {
	return o
}

// (string)
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.Domain }).(pulumi.StringOutput)
}

// The ID of the service edge group to be exported.
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) MasterCustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.MasterCustomerId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// The name of the service edge group to be exported.
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.NetworkId }).(pulumi.StringOutput)
}

// (string)
func (o GetZPAServiceEdgeGroupTrustedNetworkOutput) ZscalerCloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPAServiceEdgeGroupTrustedNetwork) string { return v.ZscalerCloud }).(pulumi.StringOutput)
}

type GetZPAServiceEdgeGroupTrustedNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetZPAServiceEdgeGroupTrustedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZPAServiceEdgeGroupTrustedNetwork)(nil)).Elem()
}

func (o GetZPAServiceEdgeGroupTrustedNetworkArrayOutput) ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutput() GetZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return o
}

func (o GetZPAServiceEdgeGroupTrustedNetworkArrayOutput) ToGetZPAServiceEdgeGroupTrustedNetworkArrayOutputWithContext(ctx context.Context) GetZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return o
}

func (o GetZPAServiceEdgeGroupTrustedNetworkArrayOutput) Index(i pulumi.IntInput) GetZPAServiceEdgeGroupTrustedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZPAServiceEdgeGroupTrustedNetwork {
		return vs[0].([]GetZPAServiceEdgeGroupTrustedNetwork)[vs[1].(int)]
	}).(GetZPAServiceEdgeGroupTrustedNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessClientlessAppInput)(nil)).Elem(), ZPAApplicationSegmentBrowserAccessClientlessAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessClientlessAppArrayInput)(nil)).Elem(), ZPAApplicationSegmentBrowserAccessClientlessAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessServerGroupInput)(nil)).Elem(), ZPAApplicationSegmentBrowserAccessServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessServerGroupArrayInput)(nil)).Elem(), ZPAApplicationSegmentBrowserAccessServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessTcpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentBrowserAccessTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentBrowserAccessUdpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentBrowserAccessUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDtoInput)(nil)).Elem(), ZPAApplicationSegmentInspectionCommonAppsDtoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDtoPtrInput)(nil)).Elem(), ZPAApplicationSegmentInspectionCommonAppsDtoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigInput)(nil)).Elem(), ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayInput)(nil)).Elem(), ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionServerGroupInput)(nil)).Elem(), ZPAApplicationSegmentInspectionServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionServerGroupArrayInput)(nil)).Elem(), ZPAApplicationSegmentInspectionServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionTcpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentInspectionTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentInspectionUdpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentInspectionUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDtoInput)(nil)).Elem(), ZPAApplicationSegmentPRACommonAppsDtoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDtoPtrInput)(nil)).Elem(), ZPAApplicationSegmentPRACommonAppsDtoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDtoAppsConfigInput)(nil)).Elem(), ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayInput)(nil)).Elem(), ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRAServerGroupInput)(nil)).Elem(), ZPAApplicationSegmentPRAServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRAServerGroupArrayInput)(nil)).Elem(), ZPAApplicationSegmentPRAServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRATcpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentPRATcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentPRAUdpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentPRAUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentServerGroupInput)(nil)).Elem(), ZPAApplicationSegmentServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentServerGroupArrayInput)(nil)).Elem(), ZPAApplicationSegmentServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentTcpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAApplicationSegmentUdpPortRangeInput)(nil)).Elem(), ZPAApplicationSegmentUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPABrowserAccessClientlessAppInput)(nil)).Elem(), ZPABrowserAccessClientlessAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPABrowserAccessClientlessAppArrayInput)(nil)).Elem(), ZPABrowserAccessClientlessAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPABrowserAccessServerGroupInput)(nil)).Elem(), ZPABrowserAccessServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPABrowserAccessServerGroupArrayInput)(nil)).Elem(), ZPABrowserAccessServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPABrowserAccessTcpPortRangeInput)(nil)).Elem(), ZPABrowserAccessTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPABrowserAccessUdpPortRangeInput)(nil)).Elem(), ZPABrowserAccessUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionCustomControlsAssociatedInspectionProfileNameInput)(nil)).Elem(), ZPAInspectionCustomControlsAssociatedInspectionProfileNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayInput)(nil)).Elem(), ZPAInspectionCustomControlsAssociatedInspectionProfileNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionCustomControlsRuleInput)(nil)).Elem(), ZPAInspectionCustomControlsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionCustomControlsRuleArrayInput)(nil)).Elem(), ZPAInspectionCustomControlsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionCustomControlsRuleConditionsInput)(nil)).Elem(), ZPAInspectionCustomControlsRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionCustomControlsRuleConditionsPtrInput)(nil)).Elem(), ZPAInspectionCustomControlsRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionProfileControlsInfoInput)(nil)).Elem(), ZPAInspectionProfileControlsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionProfileControlsInfoArrayInput)(nil)).Elem(), ZPAInspectionProfileControlsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionProfileCustomControlInput)(nil)).Elem(), ZPAInspectionProfileCustomControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionProfileCustomControlArrayInput)(nil)).Elem(), ZPAInspectionProfileCustomControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionProfilePredefinedControlInput)(nil)).Elem(), ZPAInspectionProfilePredefinedControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAInspectionProfilePredefinedControlArrayInput)(nil)).Elem(), ZPAInspectionProfilePredefinedControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerConfigInput)(nil)).Elem(), ZPALSSConfigControllerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerConfigPtrInput)(nil)).Elem(), ZPALSSConfigControllerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerConnectorGroupInput)(nil)).Elem(), ZPALSSConfigControllerConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerConnectorGroupArrayInput)(nil)).Elem(), ZPALSSConfigControllerConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceInput)(nil)).Elem(), ZPALSSConfigControllerPolicyRuleResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourcePtrInput)(nil)).Elem(), ZPALSSConfigControllerPolicyRuleResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceConditionInput)(nil)).Elem(), ZPALSSConfigControllerPolicyRuleResourceConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceConditionArrayInput)(nil)).Elem(), ZPALSSConfigControllerPolicyRuleResourceConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceConditionOperandInput)(nil)).Elem(), ZPALSSConfigControllerPolicyRuleResourceConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayInput)(nil)).Elem(), ZPALSSConfigControllerPolicyRuleResourceConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessForwardingRuleConditionInput)(nil)).Elem(), ZPAPolicyAccessForwardingRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessForwardingRuleConditionArrayInput)(nil)).Elem(), ZPAPolicyAccessForwardingRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessForwardingRuleConditionOperandInput)(nil)).Elem(), ZPAPolicyAccessForwardingRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessForwardingRuleConditionOperandArrayInput)(nil)).Elem(), ZPAPolicyAccessForwardingRuleConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessInspectionRuleConditionInput)(nil)).Elem(), ZPAPolicyAccessInspectionRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessInspectionRuleConditionArrayInput)(nil)).Elem(), ZPAPolicyAccessInspectionRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessInspectionRuleConditionOperandInput)(nil)).Elem(), ZPAPolicyAccessInspectionRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessInspectionRuleConditionOperandArrayInput)(nil)).Elem(), ZPAPolicyAccessInspectionRuleConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleAppConnectorGroupInput)(nil)).Elem(), ZPAPolicyAccessRuleAppConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleAppConnectorGroupArrayInput)(nil)).Elem(), ZPAPolicyAccessRuleAppConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleAppServerGroupInput)(nil)).Elem(), ZPAPolicyAccessRuleAppServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleAppServerGroupArrayInput)(nil)).Elem(), ZPAPolicyAccessRuleAppServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleConditionInput)(nil)).Elem(), ZPAPolicyAccessRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleConditionArrayInput)(nil)).Elem(), ZPAPolicyAccessRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleConditionOperandInput)(nil)).Elem(), ZPAPolicyAccessRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleConditionOperandArrayInput)(nil)).Elem(), ZPAPolicyAccessRuleConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleConditionInput)(nil)).Elem(), ZPAPolicyAccessTimeOutRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleConditionArrayInput)(nil)).Elem(), ZPAPolicyAccessTimeOutRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleConditionOperandInput)(nil)).Elem(), ZPAPolicyAccessTimeOutRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeOutRuleConditionOperandArrayInput)(nil)).Elem(), ZPAPolicyAccessTimeOutRuleConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPASegmentGroupApplicationInput)(nil)).Elem(), ZPASegmentGroupApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPASegmentGroupApplicationArrayInput)(nil)).Elem(), ZPASegmentGroupApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServerGroupAppConnectorGroupInput)(nil)).Elem(), ZPAServerGroupAppConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServerGroupAppConnectorGroupArrayInput)(nil)).Elem(), ZPAServerGroupAppConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServerGroupApplicationInput)(nil)).Elem(), ZPAServerGroupApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServerGroupApplicationArrayInput)(nil)).Elem(), ZPAServerGroupApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServerGroupServerInput)(nil)).Elem(), ZPAServerGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServerGroupServerArrayInput)(nil)).Elem(), ZPAServerGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupServiceEdgeInput)(nil)).Elem(), ZPAServiceEdgeGroupServiceEdgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupServiceEdgeArrayInput)(nil)).Elem(), ZPAServiceEdgeGroupServiceEdgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupTrustedNetworkInput)(nil)).Elem(), ZPAServiceEdgeGroupTrustedNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupTrustedNetworkArrayInput)(nil)).Elem(), ZPAServiceEdgeGroupTrustedNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAAppConnectorGroupConnectorInput)(nil)).Elem(), GetZPAAppConnectorGroupConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAAppConnectorGroupConnectorArrayInput)(nil)).Elem(), GetZPAAppConnectorGroupConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAAppConnectorGroupServerGroupInput)(nil)).Elem(), GetZPAAppConnectorGroupServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAAppConnectorGroupServerGroupArrayInput)(nil)).Elem(), GetZPAAppConnectorGroupServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessClientlessAppInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessClientlessAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessClientlessAppArrayInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessClientlessAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessServerGroupInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessServerGroupArrayInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessTcpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessTcpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessUdpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentBrowserAccessUdpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionInspectionAppInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionInspectionAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionInspectionAppArrayInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionInspectionAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionServerGroupInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionServerGroupArrayInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionTcpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionTcpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionTcpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionUdpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentInspectionUdpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentInspectionUdpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRAServerGroupInput)(nil)).Elem(), GetZPAApplicationSegmentPRAServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRAServerGroupArrayInput)(nil)).Elem(), GetZPAApplicationSegmentPRAServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRASraAppInput)(nil)).Elem(), GetZPAApplicationSegmentPRASraAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRASraAppArrayInput)(nil)).Elem(), GetZPAApplicationSegmentPRASraAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRATcpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentPRATcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRATcpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentPRATcpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRAUdpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentPRAUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentPRAUdpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentPRAUdpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentServerGroupInput)(nil)).Elem(), GetZPAApplicationSegmentServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentServerGroupArrayInput)(nil)).Elem(), GetZPAApplicationSegmentServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentTcpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentTcpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentTcpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentTcpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentUdpPortRangeInput)(nil)).Elem(), GetZPAApplicationSegmentUdpPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAApplicationSegmentUdpPortRangeArrayInput)(nil)).Elem(), GetZPAApplicationSegmentUdpPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPACloudConnectorGroupCloudConnectorInput)(nil)).Elem(), GetZPACloudConnectorGroupCloudConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPACloudConnectorGroupCloudConnectorArrayInput)(nil)).Elem(), GetZPACloudConnectorGroupCloudConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAIdPControllerAdminMetadataInput)(nil)).Elem(), GetZPAIdPControllerAdminMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAIdPControllerAdminMetadataArrayInput)(nil)).Elem(), GetZPAIdPControllerAdminMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAIdPControllerUserMetadataInput)(nil)).Elem(), GetZPAIdPControllerUserMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAIdPControllerUserMetadataArrayInput)(nil)).Elem(), GetZPAIdPControllerUserMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsListInput)(nil)).Elem(), GetZPAInspectionAllPredefinedControlsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsListArrayInput)(nil)).Elem(), GetZPAInspectionAllPredefinedControlsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameInput)(nil)).Elem(), GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayInput)(nil)).Elem(), GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionCustomControlsRuleInput)(nil)).Elem(), GetZPAInspectionCustomControlsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionCustomControlsRuleArrayInput)(nil)).Elem(), GetZPAInspectionCustomControlsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionCustomControlsRuleConditionInput)(nil)).Elem(), GetZPAInspectionCustomControlsRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionCustomControlsRuleConditionArrayInput)(nil)).Elem(), GetZPAInspectionCustomControlsRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameInput)(nil)).Elem(), GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayInput)(nil)).Elem(), GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileControlsInfoInput)(nil)).Elem(), GetZPAInspectionProfileControlsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileControlsInfoArrayInput)(nil)).Elem(), GetZPAInspectionProfileControlsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlArrayInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlRuleInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlRuleArrayInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlRuleConditionInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfileCustomControlRuleConditionArrayInput)(nil)).Elem(), GetZPAInspectionProfileCustomControlRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfilePredefinedControlInput)(nil)).Elem(), GetZPAInspectionProfilePredefinedControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfilePredefinedControlArrayInput)(nil)).Elem(), GetZPAInspectionProfilePredefinedControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameInput)(nil)).Elem(), GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayInput)(nil)).Elem(), GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerConfigInput)(nil)).Elem(), GetZPALSSConfigControllerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerConfigArrayInput)(nil)).Elem(), GetZPALSSConfigControllerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerConnectorGroupInput)(nil)).Elem(), GetZPALSSConfigControllerConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerConnectorGroupArrayInput)(nil)).Elem(), GetZPALSSConfigControllerConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleInput)(nil)).Elem(), GetZPALSSConfigControllerPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleArrayInput)(nil)).Elem(), GetZPALSSConfigControllerPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleConditionInput)(nil)).Elem(), GetZPALSSConfigControllerPolicyRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleConditionArrayInput)(nil)).Elem(), GetZPALSSConfigControllerPolicyRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleConditionOperandInput)(nil)).Elem(), GetZPALSSConfigControllerPolicyRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPALSSConfigControllerPolicyRuleConditionOperandArrayInput)(nil)).Elem(), GetZPALSSConfigControllerPolicyRuleConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAMachineGroupMachineInput)(nil)).Elem(), GetZPAMachineGroupMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAMachineGroupMachineArrayInput)(nil)).Elem(), GetZPAMachineGroupMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAPolicyTypeRuleInput)(nil)).Elem(), GetZPAPolicyTypeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAPolicyTypeRuleArrayInput)(nil)).Elem(), GetZPAPolicyTypeRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAPolicyTypeRuleConditionInput)(nil)).Elem(), GetZPAPolicyTypeRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAPolicyTypeRuleConditionArrayInput)(nil)).Elem(), GetZPAPolicyTypeRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAPolicyTypeRuleConditionOperandInput)(nil)).Elem(), GetZPAPolicyTypeRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAPolicyTypeRuleConditionOperandArrayInput)(nil)).Elem(), GetZPAPolicyTypeRuleConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPASegmentGroupApplicationInput)(nil)).Elem(), GetZPASegmentGroupApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPASegmentGroupApplicationArrayInput)(nil)).Elem(), GetZPASegmentGroupApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPASegmentGroupApplicationServerGroupInput)(nil)).Elem(), GetZPASegmentGroupApplicationServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPASegmentGroupApplicationServerGroupArrayInput)(nil)).Elem(), GetZPASegmentGroupApplicationServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupInput)(nil)).Elem(), GetZPAServerGroupAppConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupArrayInput)(nil)).Elem(), GetZPAServerGroupAppConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupConnectorInput)(nil)).Elem(), GetZPAServerGroupAppConnectorGroupConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupConnectorArrayInput)(nil)).Elem(), GetZPAServerGroupAppConnectorGroupConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupServerGroupInput)(nil)).Elem(), GetZPAServerGroupAppConnectorGroupServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupAppConnectorGroupServerGroupArrayInput)(nil)).Elem(), GetZPAServerGroupAppConnectorGroupServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupApplicationInput)(nil)).Elem(), GetZPAServerGroupApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupApplicationArrayInput)(nil)).Elem(), GetZPAServerGroupApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupServerInput)(nil)).Elem(), GetZPAServerGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServerGroupServerArrayInput)(nil)).Elem(), GetZPAServerGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServiceEdgeGroupServiceEdgeInput)(nil)).Elem(), GetZPAServiceEdgeGroupServiceEdgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServiceEdgeGroupServiceEdgeArrayInput)(nil)).Elem(), GetZPAServiceEdgeGroupServiceEdgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServiceEdgeGroupTrustedNetworkInput)(nil)).Elem(), GetZPAServiceEdgeGroupTrustedNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZPAServiceEdgeGroupTrustedNetworkArrayInput)(nil)).Elem(), GetZPAServiceEdgeGroupTrustedNetworkArray{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentBrowserAccessClientlessAppOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentBrowserAccessServerGroupOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentBrowserAccessServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentBrowserAccessTcpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentBrowserAccessUdpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionCommonAppsDtoOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionCommonAppsDtoPtrOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionCommonAppsDtoAppsConfigArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionServerGroupOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionTcpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentInspectionUdpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRACommonAppsDtoOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRACommonAppsDtoPtrOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRACommonAppsDtoAppsConfigArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRAServerGroupOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRAServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRATcpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentPRAUdpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentServerGroupOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentTcpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAApplicationSegmentUdpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPABrowserAccessClientlessAppOutput{})
	pulumi.RegisterOutputType(ZPABrowserAccessClientlessAppArrayOutput{})
	pulumi.RegisterOutputType(ZPABrowserAccessServerGroupOutput{})
	pulumi.RegisterOutputType(ZPABrowserAccessServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPABrowserAccessTcpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPABrowserAccessUdpPortRangeOutput{})
	pulumi.RegisterOutputType(ZPAInspectionCustomControlsAssociatedInspectionProfileNameOutput{})
	pulumi.RegisterOutputType(ZPAInspectionCustomControlsAssociatedInspectionProfileNameArrayOutput{})
	pulumi.RegisterOutputType(ZPAInspectionCustomControlsRuleOutput{})
	pulumi.RegisterOutputType(ZPAInspectionCustomControlsRuleArrayOutput{})
	pulumi.RegisterOutputType(ZPAInspectionCustomControlsRuleConditionsOutput{})
	pulumi.RegisterOutputType(ZPAInspectionCustomControlsRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(ZPAInspectionProfileControlsInfoOutput{})
	pulumi.RegisterOutputType(ZPAInspectionProfileControlsInfoArrayOutput{})
	pulumi.RegisterOutputType(ZPAInspectionProfileCustomControlOutput{})
	pulumi.RegisterOutputType(ZPAInspectionProfileCustomControlArrayOutput{})
	pulumi.RegisterOutputType(ZPAInspectionProfilePredefinedControlOutput{})
	pulumi.RegisterOutputType(ZPAInspectionProfilePredefinedControlArrayOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerConfigOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerConfigPtrOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerConnectorGroupOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerPolicyRuleResourceOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerPolicyRuleResourcePtrOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerPolicyRuleResourceConditionOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerPolicyRuleResourceConditionArrayOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerPolicyRuleResourceConditionOperandOutput{})
	pulumi.RegisterOutputType(ZPALSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessForwardingRuleConditionOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessForwardingRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessForwardingRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessForwardingRuleConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessInspectionRuleConditionOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessInspectionRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessInspectionRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessInspectionRuleConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleAppConnectorGroupOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleAppConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleAppServerGroupOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleAppServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleConditionOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeOutRuleConditionOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeOutRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeOutRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeOutRuleConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(ZPASegmentGroupApplicationOutput{})
	pulumi.RegisterOutputType(ZPASegmentGroupApplicationArrayOutput{})
	pulumi.RegisterOutputType(ZPAServerGroupAppConnectorGroupOutput{})
	pulumi.RegisterOutputType(ZPAServerGroupAppConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAServerGroupApplicationOutput{})
	pulumi.RegisterOutputType(ZPAServerGroupApplicationArrayOutput{})
	pulumi.RegisterOutputType(ZPAServerGroupServerOutput{})
	pulumi.RegisterOutputType(ZPAServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupServiceEdgeOutput{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupServiceEdgeArrayOutput{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupTrustedNetworkOutput{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupTrustedNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetZPAAppConnectorGroupConnectorOutput{})
	pulumi.RegisterOutputType(GetZPAAppConnectorGroupConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetZPAAppConnectorGroupServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPAAppConnectorGroupServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessClientlessAppOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessClientlessAppArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessTcpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessTcpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessUdpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentBrowserAccessUdpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionInspectionAppOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionInspectionAppArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionTcpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionTcpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionUdpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentInspectionUdpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRAServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRAServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRASraAppOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRASraAppArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRATcpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRATcpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRAUdpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentPRAUdpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentTcpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentTcpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentUdpPortRangeOutput{})
	pulumi.RegisterOutputType(GetZPAApplicationSegmentUdpPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetZPACloudConnectorGroupCloudConnectorOutput{})
	pulumi.RegisterOutputType(GetZPACloudConnectorGroupCloudConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetZPAIdPControllerAdminMetadataOutput{})
	pulumi.RegisterOutputType(GetZPAIdPControllerAdminMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetZPAIdPControllerUserMetadataOutput{})
	pulumi.RegisterOutputType(GetZPAIdPControllerUserMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionAllPredefinedControlsListOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionAllPredefinedControlsListArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionAllPredefinedControlsListAssociatedInspectionProfileNameArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionCustomControlsRuleOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionCustomControlsRuleArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionCustomControlsRuleConditionOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionCustomControlsRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionPredefinedControlsAssociatedInspectionProfileNameArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileControlsInfoOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileControlsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlAssociatedInspectionProfileNameArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlRuleOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlRuleArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlRuleConditionOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfileCustomControlRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfilePredefinedControlOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfilePredefinedControlArrayOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameOutput{})
	pulumi.RegisterOutputType(GetZPAInspectionProfilePredefinedControlAssociatedInspectionProfileNameArrayOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerConfigOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerConnectorGroupOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerPolicyRuleConditionOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerPolicyRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerPolicyRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(GetZPALSSConfigControllerPolicyRuleConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(GetZPAMachineGroupMachineOutput{})
	pulumi.RegisterOutputType(GetZPAMachineGroupMachineArrayOutput{})
	pulumi.RegisterOutputType(GetZPAPolicyTypeRuleOutput{})
	pulumi.RegisterOutputType(GetZPAPolicyTypeRuleArrayOutput{})
	pulumi.RegisterOutputType(GetZPAPolicyTypeRuleConditionOutput{})
	pulumi.RegisterOutputType(GetZPAPolicyTypeRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetZPAPolicyTypeRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(GetZPAPolicyTypeRuleConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(GetZPASegmentGroupApplicationOutput{})
	pulumi.RegisterOutputType(GetZPASegmentGroupApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetZPASegmentGroupApplicationServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPASegmentGroupApplicationServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupAppConnectorGroupOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupAppConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupAppConnectorGroupConnectorOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupAppConnectorGroupConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupAppConnectorGroupServerGroupOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupAppConnectorGroupServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupApplicationOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupServerOutput{})
	pulumi.RegisterOutputType(GetZPAServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServiceEdgeGroupServiceEdgeOutput{})
	pulumi.RegisterOutputType(GetZPAServiceEdgeGroupServiceEdgeArrayOutput{})
	pulumi.RegisterOutputType(GetZPAServiceEdgeGroupTrustedNetworkOutput{})
	pulumi.RegisterOutputType(GetZPAServiceEdgeGroupTrustedNetworkArrayOutput{})
}
