// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupZPAServerGroup(ctx, &zpa.LookupZPAServerGroupArgs{
//				Name: pulumi.StringRef("server_group_name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZPAServerGroup(ctx *pulumi.Context, args *LookupZPAServerGroupArgs, opts ...pulumi.InvokeOption) (*LookupZPAServerGroupResult, error) {
	var rv LookupZPAServerGroupResult
	err := ctx.Invoke("zpa:index/getZPAServerGroup:getZPAServerGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZPAServerGroup.
type LookupZPAServerGroupArgs struct {
	// The ID of the server group to be exported.
	Id *string `pulumi:"id"`
	// The name of the server group to be exported.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getZPAServerGroup.
type LookupZPAServerGroupResult struct {
	// (string)This field is a json array of app-connector-id only.
	AppConnectorGroups []GetZPAServerGroupAppConnectorGroup `pulumi:"appConnectorGroups"`
	Applications       []GetZPAServerGroupApplication       `pulumi:"applications"`
	// (string)
	ConfigSpace  string `pulumi:"configSpace"`
	CreationTime string `pulumi:"creationTime"`
	// (string) This field is the description of the server group.
	Description string `pulumi:"description"`
	// (bool) This field controls dynamic discovery of the servers.
	DynamicDiscovery bool `pulumi:"dynamicDiscovery"`
	// (bool) This field defines if the server group is enabled or disabled.
	Enabled bool    `pulumi:"enabled"`
	Id      *string `pulumi:"id"`
	// (bool)
	IpAnchored   bool                      `pulumi:"ipAnchored"`
	ModifiedTime string                    `pulumi:"modifiedTime"`
	Modifiedby   string                    `pulumi:"modifiedby"`
	Name         *string                   `pulumi:"name"`
	Servers      []GetZPAServerGroupServer `pulumi:"servers"`
}

func LookupZPAServerGroupOutput(ctx *pulumi.Context, args LookupZPAServerGroupOutputArgs, opts ...pulumi.InvokeOption) LookupZPAServerGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZPAServerGroupResult, error) {
			args := v.(LookupZPAServerGroupArgs)
			r, err := LookupZPAServerGroup(ctx, &args, opts...)
			var s LookupZPAServerGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZPAServerGroupResultOutput)
}

// A collection of arguments for invoking getZPAServerGroup.
type LookupZPAServerGroupOutputArgs struct {
	// The ID of the server group to be exported.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the server group to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupZPAServerGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZPAServerGroupArgs)(nil)).Elem()
}

// A collection of values returned by getZPAServerGroup.
type LookupZPAServerGroupResultOutput struct{ *pulumi.OutputState }

func (LookupZPAServerGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZPAServerGroupResult)(nil)).Elem()
}

func (o LookupZPAServerGroupResultOutput) ToLookupZPAServerGroupResultOutput() LookupZPAServerGroupResultOutput {
	return o
}

func (o LookupZPAServerGroupResultOutput) ToLookupZPAServerGroupResultOutputWithContext(ctx context.Context) LookupZPAServerGroupResultOutput {
	return o
}

// (string)This field is a json array of app-connector-id only.
func (o LookupZPAServerGroupResultOutput) AppConnectorGroups() GetZPAServerGroupAppConnectorGroupArrayOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) []GetZPAServerGroupAppConnectorGroup { return v.AppConnectorGroups }).(GetZPAServerGroupAppConnectorGroupArrayOutput)
}

func (o LookupZPAServerGroupResultOutput) Applications() GetZPAServerGroupApplicationArrayOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) []GetZPAServerGroupApplication { return v.Applications }).(GetZPAServerGroupApplicationArrayOutput)
}

// (string)
func (o LookupZPAServerGroupResultOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o LookupZPAServerGroupResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string) This field is the description of the server group.
func (o LookupZPAServerGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// (bool) This field controls dynamic discovery of the servers.
func (o LookupZPAServerGroupResultOutput) DynamicDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) bool { return v.DynamicDiscovery }).(pulumi.BoolOutput)
}

// (bool) This field defines if the server group is enabled or disabled.
func (o LookupZPAServerGroupResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupZPAServerGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (bool)
func (o LookupZPAServerGroupResultOutput) IpAnchored() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) bool { return v.IpAnchored }).(pulumi.BoolOutput)
}

func (o LookupZPAServerGroupResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o LookupZPAServerGroupResultOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) string { return v.Modifiedby }).(pulumi.StringOutput)
}

func (o LookupZPAServerGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupZPAServerGroupResultOutput) Servers() GetZPAServerGroupServerArrayOutput {
	return o.ApplyT(func(v LookupZPAServerGroupResult) []GetZPAServerGroupServer { return v.Servers }).(GetZPAServerGroupServerArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZPAServerGroupResultOutput{})
}
