// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package inspectionpolicy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyAccessInspectionRuleCondition struct {
	Id       *string                                      `pulumi:"id"`
	Negated  *bool                                        `pulumi:"negated"`
	Operands []PolicyAccessInspectionRuleConditionOperand `pulumi:"operands"`
	Operator string                                       `pulumi:"operator"`
}

// PolicyAccessInspectionRuleConditionInput is an input type that accepts PolicyAccessInspectionRuleConditionArgs and PolicyAccessInspectionRuleConditionOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleConditionInput` via:
//
//	PolicyAccessInspectionRuleConditionArgs{...}
type PolicyAccessInspectionRuleConditionInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleConditionOutput() PolicyAccessInspectionRuleConditionOutput
	ToPolicyAccessInspectionRuleConditionOutputWithContext(context.Context) PolicyAccessInspectionRuleConditionOutput
}

type PolicyAccessInspectionRuleConditionArgs struct {
	Id       pulumi.StringPtrInput                                `pulumi:"id"`
	Negated  pulumi.BoolPtrInput                                  `pulumi:"negated"`
	Operands PolicyAccessInspectionRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator pulumi.StringInput                                   `pulumi:"operator"`
}

func (PolicyAccessInspectionRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleConditionArgs) ToPolicyAccessInspectionRuleConditionOutput() PolicyAccessInspectionRuleConditionOutput {
	return i.ToPolicyAccessInspectionRuleConditionOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleConditionArgs) ToPolicyAccessInspectionRuleConditionOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleConditionOutput)
}

// PolicyAccessInspectionRuleConditionArrayInput is an input type that accepts PolicyAccessInspectionRuleConditionArray and PolicyAccessInspectionRuleConditionArrayOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleConditionArrayInput` via:
//
//	PolicyAccessInspectionRuleConditionArray{ PolicyAccessInspectionRuleConditionArgs{...} }
type PolicyAccessInspectionRuleConditionArrayInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleConditionArrayOutput() PolicyAccessInspectionRuleConditionArrayOutput
	ToPolicyAccessInspectionRuleConditionArrayOutputWithContext(context.Context) PolicyAccessInspectionRuleConditionArrayOutput
}

type PolicyAccessInspectionRuleConditionArray []PolicyAccessInspectionRuleConditionInput

func (PolicyAccessInspectionRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleConditionArray) ToPolicyAccessInspectionRuleConditionArrayOutput() PolicyAccessInspectionRuleConditionArrayOutput {
	return i.ToPolicyAccessInspectionRuleConditionArrayOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleConditionArray) ToPolicyAccessInspectionRuleConditionArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleConditionArrayOutput)
}

type PolicyAccessInspectionRuleConditionOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleConditionOutput) ToPolicyAccessInspectionRuleConditionOutput() PolicyAccessInspectionRuleConditionOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionOutput) ToPolicyAccessInspectionRuleConditionOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleCondition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessInspectionRuleConditionOutput) Operands() PolicyAccessInspectionRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleCondition) []PolicyAccessInspectionRuleConditionOperand {
		return v.Operands
	}).(PolicyAccessInspectionRuleConditionOperandArrayOutput)
}

func (o PolicyAccessInspectionRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type PolicyAccessInspectionRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessInspectionRuleCondition)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleConditionArrayOutput) ToPolicyAccessInspectionRuleConditionArrayOutput() PolicyAccessInspectionRuleConditionArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionArrayOutput) ToPolicyAccessInspectionRuleConditionArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionArrayOutput) Index(i pulumi.IntInput) PolicyAccessInspectionRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAccessInspectionRuleCondition {
		return vs[0].([]PolicyAccessInspectionRuleCondition)[vs[1].(int)]
	}).(PolicyAccessInspectionRuleConditionOutput)
}

type PolicyAccessInspectionRuleConditionOperand struct {
	Id         *string  `pulumi:"id"`
	IdpId      *string  `pulumi:"idpId"`
	Lhs        string   `pulumi:"lhs"`
	Name       *string  `pulumi:"name"`
	ObjectType string   `pulumi:"objectType"`
	Rhs        *string  `pulumi:"rhs"`
	RhsLists   []string `pulumi:"rhsLists"`
}

// PolicyAccessInspectionRuleConditionOperandInput is an input type that accepts PolicyAccessInspectionRuleConditionOperandArgs and PolicyAccessInspectionRuleConditionOperandOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleConditionOperandInput` via:
//
//	PolicyAccessInspectionRuleConditionOperandArgs{...}
type PolicyAccessInspectionRuleConditionOperandInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleConditionOperandOutput() PolicyAccessInspectionRuleConditionOperandOutput
	ToPolicyAccessInspectionRuleConditionOperandOutputWithContext(context.Context) PolicyAccessInspectionRuleConditionOperandOutput
}

type PolicyAccessInspectionRuleConditionOperandArgs struct {
	Id         pulumi.StringPtrInput   `pulumi:"id"`
	IdpId      pulumi.StringPtrInput   `pulumi:"idpId"`
	Lhs        pulumi.StringInput      `pulumi:"lhs"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	ObjectType pulumi.StringInput      `pulumi:"objectType"`
	Rhs        pulumi.StringPtrInput   `pulumi:"rhs"`
	RhsLists   pulumi.StringArrayInput `pulumi:"rhsLists"`
}

func (PolicyAccessInspectionRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleConditionOperandArgs) ToPolicyAccessInspectionRuleConditionOperandOutput() PolicyAccessInspectionRuleConditionOperandOutput {
	return i.ToPolicyAccessInspectionRuleConditionOperandOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleConditionOperandArgs) ToPolicyAccessInspectionRuleConditionOperandOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleConditionOperandOutput)
}

// PolicyAccessInspectionRuleConditionOperandArrayInput is an input type that accepts PolicyAccessInspectionRuleConditionOperandArray and PolicyAccessInspectionRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleConditionOperandArrayInput` via:
//
//	PolicyAccessInspectionRuleConditionOperandArray{ PolicyAccessInspectionRuleConditionOperandArgs{...} }
type PolicyAccessInspectionRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleConditionOperandArrayOutput() PolicyAccessInspectionRuleConditionOperandArrayOutput
	ToPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(context.Context) PolicyAccessInspectionRuleConditionOperandArrayOutput
}

type PolicyAccessInspectionRuleConditionOperandArray []PolicyAccessInspectionRuleConditionOperandInput

func (PolicyAccessInspectionRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleConditionOperandArray) ToPolicyAccessInspectionRuleConditionOperandArrayOutput() PolicyAccessInspectionRuleConditionOperandArrayOutput {
	return i.ToPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleConditionOperandArray) ToPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleConditionOperandArrayOutput)
}

type PolicyAccessInspectionRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) ToPolicyAccessInspectionRuleConditionOperandOutput() PolicyAccessInspectionRuleConditionOperandOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) ToPolicyAccessInspectionRuleConditionOperandOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionOperandOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) IdpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) *string { return v.IdpId }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleConditionOperandOutput) RhsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyAccessInspectionRuleConditionOperand) []string { return v.RhsLists }).(pulumi.StringArrayOutput)
}

type PolicyAccessInspectionRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessInspectionRuleConditionOperand)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleConditionOperandArrayOutput) ToPolicyAccessInspectionRuleConditionOperandArrayOutput() PolicyAccessInspectionRuleConditionOperandArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionOperandArrayOutput) ToPolicyAccessInspectionRuleConditionOperandArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleConditionOperandArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) PolicyAccessInspectionRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAccessInspectionRuleConditionOperand {
		return vs[0].([]PolicyAccessInspectionRuleConditionOperand)[vs[1].(int)]
	}).(PolicyAccessInspectionRuleConditionOperandOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleConditionInput)(nil)).Elem(), PolicyAccessInspectionRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleConditionArrayInput)(nil)).Elem(), PolicyAccessInspectionRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleConditionOperandInput)(nil)).Elem(), PolicyAccessInspectionRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleConditionOperandArrayInput)(nil)).Elem(), PolicyAccessInspectionRuleConditionOperandArray{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleConditionOutput{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleConditionOperandArrayOutput{})
}
