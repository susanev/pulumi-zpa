// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language. [Visit](https://github.com/zscaler/zscaler-terraformer) Policy access rule can be imported by using `<POLICY ACCESS RULE ID>` as the import ID. For example
//
// ```sh
//
//	$ pulumi import zpa:index/zPAPolicyAccessRule:ZPAPolicyAccessRule example <policy_access_rule_id>
//
// ```
type ZPAPolicyAccessRule struct {
	pulumi.CustomResourceState

	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This field defines the description of the server.
	ActionId pulumi.StringPtrOutput `pulumi:"actionId"`
	// List of app-connector IDs.
	AppConnectorGroups ZPAPolicyAccessRuleAppConnectorGroupArrayOutput `pulumi:"appConnectorGroups"`
	// List of the server group IDs.
	AppServerGroups   ZPAPolicyAccessRuleAppServerGroupArrayOutput `pulumi:"appServerGroups"`
	BypassDefaultRule pulumi.BoolPtrOutput                         `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions ZPAPolicyAccessRuleConditionArrayOutput `pulumi:"conditions"`
	// (Optional) This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrOutput `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// (Optional) This is the description of the access policy rule.
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	LssDefaultRule pulumi.BoolPtrOutput   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name pulumi.StringOutput `pulumi:"name"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    pulumi.StringOutput `pulumi:"operator"`
	PolicySetId pulumi.StringOutput `pulumi:"policySetId"`
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        pulumi.StringOutput    `pulumi:"policyType"`
	Priority          pulumi.StringOutput    `pulumi:"priority"`
	ReauthDefaultRule pulumi.BoolPtrOutput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout pulumi.StringPtrOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringPtrOutput `pulumi:"reauthTimeout"`
	// (Optional)
	RuleOrder              pulumi.StringOutput    `pulumi:"ruleOrder"`
	ZpnInspectionProfileId pulumi.StringPtrOutput `pulumi:"zpnInspectionProfileId"`
}

// NewZPAPolicyAccessRule registers a new resource with the given unique name, arguments, and options.
func NewZPAPolicyAccessRule(ctx *pulumi.Context,
	name string, args *ZPAPolicyAccessRuleArgs, opts ...pulumi.ResourceOption) (*ZPAPolicyAccessRule, error) {
	if args == nil {
		args = &ZPAPolicyAccessRuleArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZPAPolicyAccessRule
	err := ctx.RegisterResource("zpa:index/zPAPolicyAccessRule:ZPAPolicyAccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPAPolicyAccessRule gets an existing ZPAPolicyAccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPAPolicyAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPAPolicyAccessRuleState, opts ...pulumi.ResourceOption) (*ZPAPolicyAccessRule, error) {
	var resource ZPAPolicyAccessRule
	err := ctx.ReadResource("zpa:index/zPAPolicyAccessRule:ZPAPolicyAccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPAPolicyAccessRule resources.
type zpapolicyAccessRuleState struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId *string `pulumi:"actionId"`
	// List of app-connector IDs.
	AppConnectorGroups []ZPAPolicyAccessRuleAppConnectorGroup `pulumi:"appConnectorGroups"`
	// List of the server group IDs.
	AppServerGroups   []ZPAPolicyAccessRuleAppServerGroup `pulumi:"appServerGroups"`
	BypassDefaultRule *bool                               `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions []ZPAPolicyAccessRuleCondition `pulumi:"conditions"`
	// (Optional) This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// (Optional) This is the description of the access policy rule.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name *string `pulumi:"name"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    *string `pulumi:"operator"`
	PolicySetId *string `pulumi:"policySetId"`
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// (Optional)
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

type ZPAPolicyAccessRuleState struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId pulumi.StringPtrInput
	// List of app-connector IDs.
	AppConnectorGroups ZPAPolicyAccessRuleAppConnectorGroupArrayInput
	// List of the server group IDs.
	AppServerGroups   ZPAPolicyAccessRuleAppServerGroupArrayInput
	BypassDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Conditions ZPAPolicyAccessRuleConditionArrayInput
	// (Optional) This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// (Optional) This is the description of the access policy rule.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Name pulumi.StringPtrInput
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    pulumi.StringPtrInput
	PolicySetId pulumi.StringPtrInput
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// (Optional)
	RuleOrder              pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (ZPAPolicyAccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpapolicyAccessRuleState)(nil)).Elem()
}

type zpapolicyAccessRuleArgs struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId *string `pulumi:"actionId"`
	// List of app-connector IDs.
	AppConnectorGroups []ZPAPolicyAccessRuleAppConnectorGroup `pulumi:"appConnectorGroups"`
	// List of the server group IDs.
	AppServerGroups   []ZPAPolicyAccessRuleAppServerGroup `pulumi:"appServerGroups"`
	BypassDefaultRule *bool                               `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions []ZPAPolicyAccessRuleCondition `pulumi:"conditions"`
	// (Optional) This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// (Optional) This is the description of the access policy rule.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name *string `pulumi:"name"`
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    *string `pulumi:"operator"`
	PolicySetId *string `pulumi:"policySetId"`
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// (Optional)
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

// The set of arguments for constructing a ZPAPolicyAccessRule resource.
type ZPAPolicyAccessRuleArgs struct {
	// (Optional) This is for providing the rule action. Supported values: ``ALLOW``, ``DENY``
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId pulumi.StringPtrInput
	// List of app-connector IDs.
	AppConnectorGroups ZPAPolicyAccessRuleAppConnectorGroupArrayInput
	// List of the server group IDs.
	AppServerGroups   ZPAPolicyAccessRuleAppServerGroupArrayInput
	BypassDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Conditions ZPAPolicyAccessRuleConditionArrayInput
	// (Optional) This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// (Optional) This is the description of the access policy rule.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	// (Optional)
	Name pulumi.StringPtrInput
	// (Optional) Supported values: ``AND``, and ``OR``
	Operator    pulumi.StringPtrInput
	PolicySetId pulumi.StringPtrInput
	// (Optional) Supported values: ``ACCESS_POLICY`` or ``GLOBAL_POLICY``
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// (Optional)
	RuleOrder              pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (ZPAPolicyAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpapolicyAccessRuleArgs)(nil)).Elem()
}

type ZPAPolicyAccessRuleInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleOutput() ZPAPolicyAccessRuleOutput
	ToZPAPolicyAccessRuleOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleOutput
}

func (*ZPAPolicyAccessRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAPolicyAccessRule)(nil)).Elem()
}

func (i *ZPAPolicyAccessRule) ToZPAPolicyAccessRuleOutput() ZPAPolicyAccessRuleOutput {
	return i.ToZPAPolicyAccessRuleOutputWithContext(context.Background())
}

func (i *ZPAPolicyAccessRule) ToZPAPolicyAccessRuleOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleOutput)
}

// ZPAPolicyAccessRuleArrayInput is an input type that accepts ZPAPolicyAccessRuleArray and ZPAPolicyAccessRuleArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleArrayInput` via:
//
//	ZPAPolicyAccessRuleArray{ ZPAPolicyAccessRuleArgs{...} }
type ZPAPolicyAccessRuleArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleArrayOutput() ZPAPolicyAccessRuleArrayOutput
	ToZPAPolicyAccessRuleArrayOutputWithContext(context.Context) ZPAPolicyAccessRuleArrayOutput
}

type ZPAPolicyAccessRuleArray []ZPAPolicyAccessRuleInput

func (ZPAPolicyAccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAPolicyAccessRule)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleArray) ToZPAPolicyAccessRuleArrayOutput() ZPAPolicyAccessRuleArrayOutput {
	return i.ToZPAPolicyAccessRuleArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleArray) ToZPAPolicyAccessRuleArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleArrayOutput)
}

// ZPAPolicyAccessRuleMapInput is an input type that accepts ZPAPolicyAccessRuleMap and ZPAPolicyAccessRuleMapOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessRuleMapInput` via:
//
//	ZPAPolicyAccessRuleMap{ "key": ZPAPolicyAccessRuleArgs{...} }
type ZPAPolicyAccessRuleMapInput interface {
	pulumi.Input

	ToZPAPolicyAccessRuleMapOutput() ZPAPolicyAccessRuleMapOutput
	ToZPAPolicyAccessRuleMapOutputWithContext(context.Context) ZPAPolicyAccessRuleMapOutput
}

type ZPAPolicyAccessRuleMap map[string]ZPAPolicyAccessRuleInput

func (ZPAPolicyAccessRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAPolicyAccessRule)(nil)).Elem()
}

func (i ZPAPolicyAccessRuleMap) ToZPAPolicyAccessRuleMapOutput() ZPAPolicyAccessRuleMapOutput {
	return i.ToZPAPolicyAccessRuleMapOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessRuleMap) ToZPAPolicyAccessRuleMapOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessRuleMapOutput)
}

type ZPAPolicyAccessRuleOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAPolicyAccessRule)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleOutput) ToZPAPolicyAccessRuleOutput() ZPAPolicyAccessRuleOutput {
	return o
}

func (o ZPAPolicyAccessRuleOutput) ToZPAPolicyAccessRuleOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleOutput {
	return o
}

// (Optional) This is for providing the rule action. Supported values: “ALLOW“, “DENY“
func (o ZPAPolicyAccessRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This field defines the description of the server.
func (o ZPAPolicyAccessRuleOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.ActionId }).(pulumi.StringPtrOutput)
}

// List of app-connector IDs.
func (o ZPAPolicyAccessRuleOutput) AppConnectorGroups() ZPAPolicyAccessRuleAppConnectorGroupArrayOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) ZPAPolicyAccessRuleAppConnectorGroupArrayOutput {
		return v.AppConnectorGroups
	}).(ZPAPolicyAccessRuleAppConnectorGroupArrayOutput)
}

// List of the server group IDs.
func (o ZPAPolicyAccessRuleOutput) AppServerGroups() ZPAPolicyAccessRuleAppServerGroupArrayOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) ZPAPolicyAccessRuleAppServerGroupArrayOutput { return v.AppServerGroups }).(ZPAPolicyAccessRuleAppServerGroupArrayOutput)
}

func (o ZPAPolicyAccessRuleOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.BoolPtrOutput { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPAPolicyAccessRuleOutput) Conditions() ZPAPolicyAccessRuleConditionArrayOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) ZPAPolicyAccessRuleConditionArrayOutput { return v.Conditions }).(ZPAPolicyAccessRuleConditionArrayOutput)
}

// (Optional) This is for providing a customer message for the user.
func (o ZPAPolicyAccessRuleOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.CustomMsg }).(pulumi.StringPtrOutput)
}

// This is for providing a customer message for the user.
func (o ZPAPolicyAccessRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional) This is the description of the access policy rule.
func (o ZPAPolicyAccessRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessRuleOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.BoolPtrOutput { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o ZPAPolicyAccessRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Optional) Supported values: “AND“, and “OR“
func (o ZPAPolicyAccessRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

// (Optional) Supported values: “ACCESS_POLICY“ or “GLOBAL_POLICY“
func (o ZPAPolicyAccessRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessRuleOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.BoolPtrOutput { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o ZPAPolicyAccessRuleOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessRuleOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o ZPAPolicyAccessRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringOutput { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessRuleOutput) ZpnInspectionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessRule) pulumi.StringPtrOutput { return v.ZpnInspectionProfileId }).(pulumi.StringPtrOutput)
}

type ZPAPolicyAccessRuleArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAPolicyAccessRule)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleArrayOutput) ToZPAPolicyAccessRuleArrayOutput() ZPAPolicyAccessRuleArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleArrayOutput) ToZPAPolicyAccessRuleArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleArrayOutput {
	return o
}

func (o ZPAPolicyAccessRuleArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPAPolicyAccessRule {
		return vs[0].([]*ZPAPolicyAccessRule)[vs[1].(int)]
	}).(ZPAPolicyAccessRuleOutput)
}

type ZPAPolicyAccessRuleMapOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAPolicyAccessRule)(nil)).Elem()
}

func (o ZPAPolicyAccessRuleMapOutput) ToZPAPolicyAccessRuleMapOutput() ZPAPolicyAccessRuleMapOutput {
	return o
}

func (o ZPAPolicyAccessRuleMapOutput) ToZPAPolicyAccessRuleMapOutputWithContext(ctx context.Context) ZPAPolicyAccessRuleMapOutput {
	return o
}

func (o ZPAPolicyAccessRuleMapOutput) MapIndex(k pulumi.StringInput) ZPAPolicyAccessRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPAPolicyAccessRule {
		return vs[0].(map[string]*ZPAPolicyAccessRule)[vs[1].(string)]
	}).(ZPAPolicyAccessRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleInput)(nil)).Elem(), &ZPAPolicyAccessRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleArrayInput)(nil)).Elem(), ZPAPolicyAccessRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessRuleMapInput)(nil)).Elem(), ZPAPolicyAccessRuleMap{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessRuleMapOutput{})
}
