// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.NewZPAAppConnectorGroup(ctx, "example", &zpa.ZPAAppConnectorGroupArgs{
//				CityCountry:            pulumi.String("San Jose, CA"),
//				CountryCode:            pulumi.String("US"),
//				Description:            pulumi.String("Example"),
//				DnsQueryType:           pulumi.String("IPV4_IPV6"),
//				Enabled:                pulumi.Bool(true),
//				Latitude:               pulumi.String("37.338"),
//				Location:               pulumi.String("San Jose, CA, US"),
//				Longitude:              pulumi.String("-121.8863"),
//				OverrideVersionProfile: pulumi.Bool(true),
//				UpgradeDay:             pulumi.String("SUNDAY"),
//				UpgradeTimeInSecs:      pulumi.String("66600"),
//				VersionProfileName:     pulumi.String("New Release"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language. [Visit](https://github.com/zscaler/zscaler-terraformer) App Connector Group can be imported by using `<APP CONNECTOR GROUP ID>` or `<APP CONNECTOR GROUP NAME>`as the import ID.
//
// ```sh
//
//	$ pulumi import zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup example <app_connector_group_id>
//
// ```
//
//	or
//
// ```sh
//
//	$ pulumi import zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup example <app_connector_group_name>
//
// ```
type ZPAAppConnectorGroup struct {
	pulumi.CustomResourceState

	// Whether Double Encryption is enabled or disabled for the app. i.e ``"San Jose, US"``
	CityCountry pulumi.StringOutput `pulumi:"cityCountry"`
	// i.e ``"US"``, ``"CA"``
	CountryCode pulumi.StringOutput `pulumi:"countryCode"`
	// Description of the App Connector Group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Supported values are:
	DnsQueryType pulumi.StringPtrOutput `pulumi:"dnsQueryType"`
	// Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude pulumi.StringOutput `pulumi:"latitude"`
	// Location of the App Connector Group. i.e ``"San Jose, CA, USA"``
	Location pulumi.StringOutput `pulumi:"location"`
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude            pulumi.StringOutput `pulumi:"longitude"`
	LssAppConnectorGroup pulumi.BoolOutput   `pulumi:"lssAppConnectorGroup"`
	// Name of the App Connector Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
	OverrideVersionProfile pulumi.BoolOutput `pulumi:"overrideVersionProfile"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckApp pulumi.BoolOutput `pulumi:"tcpQuickAckApp"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckAssistant pulumi.BoolOutput `pulumi:"tcpQuickAckAssistant"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckReadAssistant pulumi.BoolOutput `pulumi:"tcpQuickAckReadAssistant"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day i.e ``SUNDAY``
	UpgradeDay pulumi.StringPtrOutput `pulumi:"upgradeDay"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
	UpgradeTimeInSecs pulumi.StringPtrOutput `pulumi:"upgradeTimeInSecs"`
	// Supported values: `true`, `false`
	UseInDrMode pulumi.BoolOutput `pulumi:"useInDrMode"`
	// ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
	VersionProfileId pulumi.StringOutput `pulumi:"versionProfileId"`
	// Name of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileName pulumi.StringOutput `pulumi:"versionProfileName"`
}

// NewZPAAppConnectorGroup registers a new resource with the given unique name, arguments, and options.
func NewZPAAppConnectorGroup(ctx *pulumi.Context,
	name string, args *ZPAAppConnectorGroupArgs, opts ...pulumi.ResourceOption) (*ZPAAppConnectorGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Latitude == nil {
		return nil, errors.New("invalid value for required argument 'Latitude'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Longitude == nil {
		return nil, errors.New("invalid value for required argument 'Longitude'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ZPAAppConnectorGroup
	err := ctx.RegisterResource("zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPAAppConnectorGroup gets an existing ZPAAppConnectorGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPAAppConnectorGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPAAppConnectorGroupState, opts ...pulumi.ResourceOption) (*ZPAAppConnectorGroup, error) {
	var resource ZPAAppConnectorGroup
	err := ctx.ReadResource("zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPAAppConnectorGroup resources.
type zpaappConnectorGroupState struct {
	// Whether Double Encryption is enabled or disabled for the app. i.e ``"San Jose, US"``
	CityCountry *string `pulumi:"cityCountry"`
	// i.e ``"US"``, ``"CA"``
	CountryCode *string `pulumi:"countryCode"`
	// Description of the App Connector Group.
	Description *string `pulumi:"description"`
	// Supported values are:
	DnsQueryType *string `pulumi:"dnsQueryType"`
	// Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled *bool `pulumi:"enabled"`
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude *string `pulumi:"latitude"`
	// Location of the App Connector Group. i.e ``"San Jose, CA, USA"``
	Location *string `pulumi:"location"`
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude            *string `pulumi:"longitude"`
	LssAppConnectorGroup *bool   `pulumi:"lssAppConnectorGroup"`
	// Name of the App Connector Group.
	Name *string `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
	OverrideVersionProfile *bool `pulumi:"overrideVersionProfile"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckApp *bool `pulumi:"tcpQuickAckApp"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckAssistant *bool `pulumi:"tcpQuickAckAssistant"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckReadAssistant *bool `pulumi:"tcpQuickAckReadAssistant"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day i.e ``SUNDAY``
	UpgradeDay *string `pulumi:"upgradeDay"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
	UpgradeTimeInSecs *string `pulumi:"upgradeTimeInSecs"`
	// Supported values: `true`, `false`
	UseInDrMode *bool `pulumi:"useInDrMode"`
	// ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
	VersionProfileId *string `pulumi:"versionProfileId"`
	// Name of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileName *string `pulumi:"versionProfileName"`
}

type ZPAAppConnectorGroupState struct {
	// Whether Double Encryption is enabled or disabled for the app. i.e ``"San Jose, US"``
	CityCountry pulumi.StringPtrInput
	// i.e ``"US"``, ``"CA"``
	CountryCode pulumi.StringPtrInput
	// Description of the App Connector Group.
	Description pulumi.StringPtrInput
	// Supported values are:
	DnsQueryType pulumi.StringPtrInput
	// Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled pulumi.BoolPtrInput
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude pulumi.StringPtrInput
	// Location of the App Connector Group. i.e ``"San Jose, CA, USA"``
	Location pulumi.StringPtrInput
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude            pulumi.StringPtrInput
	LssAppConnectorGroup pulumi.BoolPtrInput
	// Name of the App Connector Group.
	Name pulumi.StringPtrInput
	// Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
	OverrideVersionProfile pulumi.BoolPtrInput
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckApp pulumi.BoolPtrInput
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckAssistant pulumi.BoolPtrInput
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckReadAssistant pulumi.BoolPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day i.e ``SUNDAY``
	UpgradeDay pulumi.StringPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
	UpgradeTimeInSecs pulumi.StringPtrInput
	// Supported values: `true`, `false`
	UseInDrMode pulumi.BoolPtrInput
	// ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
	VersionProfileId pulumi.StringPtrInput
	// Name of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileName pulumi.StringPtrInput
}

func (ZPAAppConnectorGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaappConnectorGroupState)(nil)).Elem()
}

type zpaappConnectorGroupArgs struct {
	// Whether Double Encryption is enabled or disabled for the app. i.e ``"San Jose, US"``
	CityCountry *string `pulumi:"cityCountry"`
	// i.e ``"US"``, ``"CA"``
	CountryCode *string `pulumi:"countryCode"`
	// Description of the App Connector Group.
	Description *string `pulumi:"description"`
	// Supported values are:
	DnsQueryType *string `pulumi:"dnsQueryType"`
	// Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled *bool `pulumi:"enabled"`
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude string `pulumi:"latitude"`
	// Location of the App Connector Group. i.e ``"San Jose, CA, USA"``
	Location string `pulumi:"location"`
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude            string `pulumi:"longitude"`
	LssAppConnectorGroup *bool  `pulumi:"lssAppConnectorGroup"`
	// Name of the App Connector Group.
	Name *string `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
	OverrideVersionProfile *bool `pulumi:"overrideVersionProfile"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckApp *bool `pulumi:"tcpQuickAckApp"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckAssistant *bool `pulumi:"tcpQuickAckAssistant"`
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckReadAssistant *bool `pulumi:"tcpQuickAckReadAssistant"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day i.e ``SUNDAY``
	UpgradeDay *string `pulumi:"upgradeDay"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
	UpgradeTimeInSecs *string `pulumi:"upgradeTimeInSecs"`
	// Supported values: `true`, `false`
	UseInDrMode *bool `pulumi:"useInDrMode"`
	// ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
	VersionProfileId *string `pulumi:"versionProfileId"`
	// Name of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileName *string `pulumi:"versionProfileName"`
}

// The set of arguments for constructing a ZPAAppConnectorGroup resource.
type ZPAAppConnectorGroupArgs struct {
	// Whether Double Encryption is enabled or disabled for the app. i.e ``"San Jose, US"``
	CityCountry pulumi.StringPtrInput
	// i.e ``"US"``, ``"CA"``
	CountryCode pulumi.StringPtrInput
	// Description of the App Connector Group.
	Description pulumi.StringPtrInput
	// Supported values are:
	DnsQueryType pulumi.StringPtrInput
	// Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
	Enabled pulumi.BoolPtrInput
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
	Latitude pulumi.StringInput
	// Location of the App Connector Group. i.e ``"San Jose, CA, USA"``
	Location pulumi.StringInput
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
	Longitude            pulumi.StringInput
	LssAppConnectorGroup pulumi.BoolPtrInput
	// Name of the App Connector Group.
	Name pulumi.StringPtrInput
	// Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
	OverrideVersionProfile pulumi.BoolPtrInput
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckApp pulumi.BoolPtrInput
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckAssistant pulumi.BoolPtrInput
	// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
	TcpQuickAckReadAssistant pulumi.BoolPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day i.e ``SUNDAY``
	UpgradeDay pulumi.StringPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
	UpgradeTimeInSecs pulumi.StringPtrInput
	// Supported values: `true`, `false`
	UseInDrMode pulumi.BoolPtrInput
	// ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
	VersionProfileId pulumi.StringPtrInput
	// Name of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileName pulumi.StringPtrInput
}

func (ZPAAppConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaappConnectorGroupArgs)(nil)).Elem()
}

type ZPAAppConnectorGroupInput interface {
	pulumi.Input

	ToZPAAppConnectorGroupOutput() ZPAAppConnectorGroupOutput
	ToZPAAppConnectorGroupOutputWithContext(ctx context.Context) ZPAAppConnectorGroupOutput
}

func (*ZPAAppConnectorGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAAppConnectorGroup)(nil)).Elem()
}

func (i *ZPAAppConnectorGroup) ToZPAAppConnectorGroupOutput() ZPAAppConnectorGroupOutput {
	return i.ToZPAAppConnectorGroupOutputWithContext(context.Background())
}

func (i *ZPAAppConnectorGroup) ToZPAAppConnectorGroupOutputWithContext(ctx context.Context) ZPAAppConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAAppConnectorGroupOutput)
}

// ZPAAppConnectorGroupArrayInput is an input type that accepts ZPAAppConnectorGroupArray and ZPAAppConnectorGroupArrayOutput values.
// You can construct a concrete instance of `ZPAAppConnectorGroupArrayInput` via:
//
//	ZPAAppConnectorGroupArray{ ZPAAppConnectorGroupArgs{...} }
type ZPAAppConnectorGroupArrayInput interface {
	pulumi.Input

	ToZPAAppConnectorGroupArrayOutput() ZPAAppConnectorGroupArrayOutput
	ToZPAAppConnectorGroupArrayOutputWithContext(context.Context) ZPAAppConnectorGroupArrayOutput
}

type ZPAAppConnectorGroupArray []ZPAAppConnectorGroupInput

func (ZPAAppConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (i ZPAAppConnectorGroupArray) ToZPAAppConnectorGroupArrayOutput() ZPAAppConnectorGroupArrayOutput {
	return i.ToZPAAppConnectorGroupArrayOutputWithContext(context.Background())
}

func (i ZPAAppConnectorGroupArray) ToZPAAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAAppConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAAppConnectorGroupArrayOutput)
}

// ZPAAppConnectorGroupMapInput is an input type that accepts ZPAAppConnectorGroupMap and ZPAAppConnectorGroupMapOutput values.
// You can construct a concrete instance of `ZPAAppConnectorGroupMapInput` via:
//
//	ZPAAppConnectorGroupMap{ "key": ZPAAppConnectorGroupArgs{...} }
type ZPAAppConnectorGroupMapInput interface {
	pulumi.Input

	ToZPAAppConnectorGroupMapOutput() ZPAAppConnectorGroupMapOutput
	ToZPAAppConnectorGroupMapOutputWithContext(context.Context) ZPAAppConnectorGroupMapOutput
}

type ZPAAppConnectorGroupMap map[string]ZPAAppConnectorGroupInput

func (ZPAAppConnectorGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (i ZPAAppConnectorGroupMap) ToZPAAppConnectorGroupMapOutput() ZPAAppConnectorGroupMapOutput {
	return i.ToZPAAppConnectorGroupMapOutputWithContext(context.Background())
}

func (i ZPAAppConnectorGroupMap) ToZPAAppConnectorGroupMapOutputWithContext(ctx context.Context) ZPAAppConnectorGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAAppConnectorGroupMapOutput)
}

type ZPAAppConnectorGroupOutput struct{ *pulumi.OutputState }

func (ZPAAppConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAAppConnectorGroup)(nil)).Elem()
}

func (o ZPAAppConnectorGroupOutput) ToZPAAppConnectorGroupOutput() ZPAAppConnectorGroupOutput {
	return o
}

func (o ZPAAppConnectorGroupOutput) ToZPAAppConnectorGroupOutputWithContext(ctx context.Context) ZPAAppConnectorGroupOutput {
	return o
}

// Whether Double Encryption is enabled or disabled for the app. i.e “"San Jose, US"“
func (o ZPAAppConnectorGroupOutput) CityCountry() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.CityCountry }).(pulumi.StringOutput)
}

// i.e “"US"“, “"CA"“
func (o ZPAAppConnectorGroupOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.CountryCode }).(pulumi.StringOutput)
}

// Description of the App Connector Group.
func (o ZPAAppConnectorGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Supported values are:
func (o ZPAAppConnectorGroupOutput) DnsQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.DnsQueryType }).(pulumi.StringPtrOutput)
}

// Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
func (o ZPAAppConnectorGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Latitude of the App Connector Group. Integer or decimal. With values in the range of `-90` to `90`
func (o ZPAAppConnectorGroupOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Latitude }).(pulumi.StringOutput)
}

// Location of the App Connector Group. i.e “"San Jose, CA, USA"“
func (o ZPAAppConnectorGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Longitude of the App Connector Group. Integer or decimal. With values in the range of `-180` to `180`
func (o ZPAAppConnectorGroupOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Longitude }).(pulumi.StringOutput)
}

func (o ZPAAppConnectorGroupOutput) LssAppConnectorGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.LssAppConnectorGroup }).(pulumi.BoolOutput)
}

// Name of the App Connector Group.
func (o ZPAAppConnectorGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
func (o ZPAAppConnectorGroupOutput) OverrideVersionProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.OverrideVersionProfile }).(pulumi.BoolOutput)
}

// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
func (o ZPAAppConnectorGroupOutput) TcpQuickAckApp() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.TcpQuickAckApp }).(pulumi.BoolOutput)
}

// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
func (o ZPAAppConnectorGroupOutput) TcpQuickAckAssistant() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.TcpQuickAckAssistant }).(pulumi.BoolOutput)
}

// Whether TCP Quick Acknowledgement is enabled or disabled for the application. The tcpQuickAckApp, tcpQuickAckAssistant, and tcpQuickAckReadAssistant fields must all share the same value. Supported values: `true`, `false`
func (o ZPAAppConnectorGroupOutput) TcpQuickAckReadAssistant() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.TcpQuickAckReadAssistant }).(pulumi.BoolOutput)
}

// App Connectors in this group will attempt to update to a newer version of the software during this specified day i.e “SUNDAY“
func (o ZPAAppConnectorGroupOutput) UpgradeDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.UpgradeDay }).(pulumi.StringPtrOutput)
}

// App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
func (o ZPAAppConnectorGroupOutput) UpgradeTimeInSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.UpgradeTimeInSecs }).(pulumi.StringPtrOutput)
}

// Supported values: `true`, `false`
func (o ZPAAppConnectorGroupOutput) UseInDrMode() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.UseInDrMode }).(pulumi.BoolOutput)
}

// ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
func (o ZPAAppConnectorGroupOutput) VersionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.VersionProfileId }).(pulumi.StringOutput)
}

// Name of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
// overrideVersionProfile is set to true
func (o ZPAAppConnectorGroupOutput) VersionProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.VersionProfileName }).(pulumi.StringOutput)
}

type ZPAAppConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAAppConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (o ZPAAppConnectorGroupArrayOutput) ToZPAAppConnectorGroupArrayOutput() ZPAAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAAppConnectorGroupArrayOutput) ToZPAAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAAppConnectorGroupArrayOutput) Index(i pulumi.IntInput) ZPAAppConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPAAppConnectorGroup {
		return vs[0].([]*ZPAAppConnectorGroup)[vs[1].(int)]
	}).(ZPAAppConnectorGroupOutput)
}

type ZPAAppConnectorGroupMapOutput struct{ *pulumi.OutputState }

func (ZPAAppConnectorGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (o ZPAAppConnectorGroupMapOutput) ToZPAAppConnectorGroupMapOutput() ZPAAppConnectorGroupMapOutput {
	return o
}

func (o ZPAAppConnectorGroupMapOutput) ToZPAAppConnectorGroupMapOutputWithContext(ctx context.Context) ZPAAppConnectorGroupMapOutput {
	return o
}

func (o ZPAAppConnectorGroupMapOutput) MapIndex(k pulumi.StringInput) ZPAAppConnectorGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPAAppConnectorGroup {
		return vs[0].(map[string]*ZPAAppConnectorGroup)[vs[1].(string)]
	}).(ZPAAppConnectorGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAAppConnectorGroupInput)(nil)).Elem(), &ZPAAppConnectorGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAAppConnectorGroupArrayInput)(nil)).Elem(), ZPAAppConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAAppConnectorGroupMapInput)(nil)).Elem(), ZPAAppConnectorGroupMap{})
	pulumi.RegisterOutputType(ZPAAppConnectorGroupOutput{})
	pulumi.RegisterOutputType(ZPAAppConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAAppConnectorGroupMapOutput{})
}
