// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timeoutpolicy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyAccessTimeOutRuleCondition struct {
	Id       *string                                   `pulumi:"id"`
	Negated  *bool                                     `pulumi:"negated"`
	Operands []PolicyAccessTimeOutRuleConditionOperand `pulumi:"operands"`
	Operator string                                    `pulumi:"operator"`
}

// PolicyAccessTimeOutRuleConditionInput is an input type that accepts PolicyAccessTimeOutRuleConditionArgs and PolicyAccessTimeOutRuleConditionOutput values.
// You can construct a concrete instance of `PolicyAccessTimeOutRuleConditionInput` via:
//
//	PolicyAccessTimeOutRuleConditionArgs{...}
type PolicyAccessTimeOutRuleConditionInput interface {
	pulumi.Input

	ToPolicyAccessTimeOutRuleConditionOutput() PolicyAccessTimeOutRuleConditionOutput
	ToPolicyAccessTimeOutRuleConditionOutputWithContext(context.Context) PolicyAccessTimeOutRuleConditionOutput
}

type PolicyAccessTimeOutRuleConditionArgs struct {
	Id       pulumi.StringPtrInput                             `pulumi:"id"`
	Negated  pulumi.BoolPtrInput                               `pulumi:"negated"`
	Operands PolicyAccessTimeOutRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator pulumi.StringInput                                `pulumi:"operator"`
}

func (PolicyAccessTimeOutRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (i PolicyAccessTimeOutRuleConditionArgs) ToPolicyAccessTimeOutRuleConditionOutput() PolicyAccessTimeOutRuleConditionOutput {
	return i.ToPolicyAccessTimeOutRuleConditionOutputWithContext(context.Background())
}

func (i PolicyAccessTimeOutRuleConditionArgs) ToPolicyAccessTimeOutRuleConditionOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessTimeOutRuleConditionOutput)
}

// PolicyAccessTimeOutRuleConditionArrayInput is an input type that accepts PolicyAccessTimeOutRuleConditionArray and PolicyAccessTimeOutRuleConditionArrayOutput values.
// You can construct a concrete instance of `PolicyAccessTimeOutRuleConditionArrayInput` via:
//
//	PolicyAccessTimeOutRuleConditionArray{ PolicyAccessTimeOutRuleConditionArgs{...} }
type PolicyAccessTimeOutRuleConditionArrayInput interface {
	pulumi.Input

	ToPolicyAccessTimeOutRuleConditionArrayOutput() PolicyAccessTimeOutRuleConditionArrayOutput
	ToPolicyAccessTimeOutRuleConditionArrayOutputWithContext(context.Context) PolicyAccessTimeOutRuleConditionArrayOutput
}

type PolicyAccessTimeOutRuleConditionArray []PolicyAccessTimeOutRuleConditionInput

func (PolicyAccessTimeOutRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (i PolicyAccessTimeOutRuleConditionArray) ToPolicyAccessTimeOutRuleConditionArrayOutput() PolicyAccessTimeOutRuleConditionArrayOutput {
	return i.ToPolicyAccessTimeOutRuleConditionArrayOutputWithContext(context.Background())
}

func (i PolicyAccessTimeOutRuleConditionArray) ToPolicyAccessTimeOutRuleConditionArrayOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessTimeOutRuleConditionArrayOutput)
}

type PolicyAccessTimeOutRuleConditionOutput struct{ *pulumi.OutputState }

func (PolicyAccessTimeOutRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (o PolicyAccessTimeOutRuleConditionOutput) ToPolicyAccessTimeOutRuleConditionOutput() PolicyAccessTimeOutRuleConditionOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionOutput) ToPolicyAccessTimeOutRuleConditionOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleCondition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessTimeOutRuleConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessTimeOutRuleConditionOutput) Operands() PolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleCondition) []PolicyAccessTimeOutRuleConditionOperand { return v.Operands }).(PolicyAccessTimeOutRuleConditionOperandArrayOutput)
}

func (o PolicyAccessTimeOutRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type PolicyAccessTimeOutRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessTimeOutRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessTimeOutRuleCondition)(nil)).Elem()
}

func (o PolicyAccessTimeOutRuleConditionArrayOutput) ToPolicyAccessTimeOutRuleConditionArrayOutput() PolicyAccessTimeOutRuleConditionArrayOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionArrayOutput) ToPolicyAccessTimeOutRuleConditionArrayOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionArrayOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionArrayOutput) Index(i pulumi.IntInput) PolicyAccessTimeOutRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAccessTimeOutRuleCondition {
		return vs[0].([]PolicyAccessTimeOutRuleCondition)[vs[1].(int)]
	}).(PolicyAccessTimeOutRuleConditionOutput)
}

type PolicyAccessTimeOutRuleConditionOperand struct {
	Id         *string  `pulumi:"id"`
	IdpId      *string  `pulumi:"idpId"`
	Lhs        string   `pulumi:"lhs"`
	Name       *string  `pulumi:"name"`
	ObjectType string   `pulumi:"objectType"`
	Rhs        *string  `pulumi:"rhs"`
	RhsLists   []string `pulumi:"rhsLists"`
}

// PolicyAccessTimeOutRuleConditionOperandInput is an input type that accepts PolicyAccessTimeOutRuleConditionOperandArgs and PolicyAccessTimeOutRuleConditionOperandOutput values.
// You can construct a concrete instance of `PolicyAccessTimeOutRuleConditionOperandInput` via:
//
//	PolicyAccessTimeOutRuleConditionOperandArgs{...}
type PolicyAccessTimeOutRuleConditionOperandInput interface {
	pulumi.Input

	ToPolicyAccessTimeOutRuleConditionOperandOutput() PolicyAccessTimeOutRuleConditionOperandOutput
	ToPolicyAccessTimeOutRuleConditionOperandOutputWithContext(context.Context) PolicyAccessTimeOutRuleConditionOperandOutput
}

type PolicyAccessTimeOutRuleConditionOperandArgs struct {
	Id         pulumi.StringPtrInput   `pulumi:"id"`
	IdpId      pulumi.StringPtrInput   `pulumi:"idpId"`
	Lhs        pulumi.StringInput      `pulumi:"lhs"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	ObjectType pulumi.StringInput      `pulumi:"objectType"`
	Rhs        pulumi.StringPtrInput   `pulumi:"rhs"`
	RhsLists   pulumi.StringArrayInput `pulumi:"rhsLists"`
}

func (PolicyAccessTimeOutRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (i PolicyAccessTimeOutRuleConditionOperandArgs) ToPolicyAccessTimeOutRuleConditionOperandOutput() PolicyAccessTimeOutRuleConditionOperandOutput {
	return i.ToPolicyAccessTimeOutRuleConditionOperandOutputWithContext(context.Background())
}

func (i PolicyAccessTimeOutRuleConditionOperandArgs) ToPolicyAccessTimeOutRuleConditionOperandOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessTimeOutRuleConditionOperandOutput)
}

// PolicyAccessTimeOutRuleConditionOperandArrayInput is an input type that accepts PolicyAccessTimeOutRuleConditionOperandArray and PolicyAccessTimeOutRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `PolicyAccessTimeOutRuleConditionOperandArrayInput` via:
//
//	PolicyAccessTimeOutRuleConditionOperandArray{ PolicyAccessTimeOutRuleConditionOperandArgs{...} }
type PolicyAccessTimeOutRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToPolicyAccessTimeOutRuleConditionOperandArrayOutput() PolicyAccessTimeOutRuleConditionOperandArrayOutput
	ToPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(context.Context) PolicyAccessTimeOutRuleConditionOperandArrayOutput
}

type PolicyAccessTimeOutRuleConditionOperandArray []PolicyAccessTimeOutRuleConditionOperandInput

func (PolicyAccessTimeOutRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (i PolicyAccessTimeOutRuleConditionOperandArray) ToPolicyAccessTimeOutRuleConditionOperandArrayOutput() PolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return i.ToPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i PolicyAccessTimeOutRuleConditionOperandArray) ToPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessTimeOutRuleConditionOperandArrayOutput)
}

type PolicyAccessTimeOutRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (PolicyAccessTimeOutRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) ToPolicyAccessTimeOutRuleConditionOperandOutput() PolicyAccessTimeOutRuleConditionOperandOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) ToPolicyAccessTimeOutRuleConditionOperandOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionOperandOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) IdpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) *string { return v.IdpId }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) Rhs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) *string { return v.Rhs }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessTimeOutRuleConditionOperandOutput) RhsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyAccessTimeOutRuleConditionOperand) []string { return v.RhsLists }).(pulumi.StringArrayOutput)
}

type PolicyAccessTimeOutRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessTimeOutRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAccessTimeOutRuleConditionOperand)(nil)).Elem()
}

func (o PolicyAccessTimeOutRuleConditionOperandArrayOutput) ToPolicyAccessTimeOutRuleConditionOperandArrayOutput() PolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionOperandArrayOutput) ToPolicyAccessTimeOutRuleConditionOperandArrayOutputWithContext(ctx context.Context) PolicyAccessTimeOutRuleConditionOperandArrayOutput {
	return o
}

func (o PolicyAccessTimeOutRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) PolicyAccessTimeOutRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAccessTimeOutRuleConditionOperand {
		return vs[0].([]PolicyAccessTimeOutRuleConditionOperand)[vs[1].(int)]
	}).(PolicyAccessTimeOutRuleConditionOperandOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessTimeOutRuleConditionInput)(nil)).Elem(), PolicyAccessTimeOutRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessTimeOutRuleConditionArrayInput)(nil)).Elem(), PolicyAccessTimeOutRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessTimeOutRuleConditionOperandInput)(nil)).Elem(), PolicyAccessTimeOutRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessTimeOutRuleConditionOperandArrayInput)(nil)).Elem(), PolicyAccessTimeOutRuleConditionOperandArray{})
	pulumi.RegisterOutputType(PolicyAccessTimeOutRuleConditionOutput{})
	pulumi.RegisterOutputType(PolicyAccessTimeOutRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessTimeOutRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(PolicyAccessTimeOutRuleConditionOperandArrayOutput{})
}
