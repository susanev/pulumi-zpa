// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package segment

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "zpa:Segment/applicationSegment:ApplicationSegment":
		r = &ApplicationSegment{}
	case "zpa:Segment/applicationSegmentBrowserAccess:ApplicationSegmentBrowserAccess":
		r = &ApplicationSegmentBrowserAccess{}
	case "zpa:Segment/applicationSegmentInspection:ApplicationSegmentInspection":
		r = &ApplicationSegmentInspection{}
	case "zpa:Segment/applicationSegmentPRA:ApplicationSegmentPRA":
		r = &ApplicationSegmentPRA{}
	case "zpa:Segment/browserAccess:BrowserAccess":
		r = &BrowserAccess{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := zpa.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"zpa",
		"Segment/applicationSegment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"Segment/applicationSegmentBrowserAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"Segment/applicationSegmentInspection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"Segment/applicationSegmentPRA",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"Segment/browserAccess",
		&module{version},
	)
}
