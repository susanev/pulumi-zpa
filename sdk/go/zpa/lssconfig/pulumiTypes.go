// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lssconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LSSConfigControllerConfig struct {
	// (Optional)
	AuditMessage *string `pulumi:"auditMessage"`
	// (Optional)
	Description *string `pulumi:"description"`
	// (Optional)
	Enabled *bool `pulumi:"enabled"`
	// (Optional)
	Filters []string `pulumi:"filters"`
	// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
	Format string `pulumi:"format"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id *string `pulumi:"id"`
	// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
	LssHost string `pulumi:"lssHost"`
	// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
	LssPort string `pulumi:"lssPort"`
	// (Optional)
	Name string `pulumi:"name"`
	// Refer to the log type documentation
	SourceLogType string `pulumi:"sourceLogType"`
	// (Optional)
	UseTls *bool `pulumi:"useTls"`
}

// LSSConfigControllerConfigInput is an input type that accepts LSSConfigControllerConfigArgs and LSSConfigControllerConfigOutput values.
// You can construct a concrete instance of `LSSConfigControllerConfigInput` via:
//
//	LSSConfigControllerConfigArgs{...}
type LSSConfigControllerConfigInput interface {
	pulumi.Input

	ToLSSConfigControllerConfigOutput() LSSConfigControllerConfigOutput
	ToLSSConfigControllerConfigOutputWithContext(context.Context) LSSConfigControllerConfigOutput
}

type LSSConfigControllerConfigArgs struct {
	// (Optional)
	AuditMessage pulumi.StringPtrInput `pulumi:"auditMessage"`
	// (Optional)
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Optional)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// (Optional)
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
	Format pulumi.StringInput `pulumi:"format"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
	LssHost pulumi.StringInput `pulumi:"lssHost"`
	// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
	LssPort pulumi.StringInput `pulumi:"lssPort"`
	// (Optional)
	Name pulumi.StringInput `pulumi:"name"`
	// Refer to the log type documentation
	SourceLogType pulumi.StringInput `pulumi:"sourceLogType"`
	// (Optional)
	UseTls pulumi.BoolPtrInput `pulumi:"useTls"`
}

func (LSSConfigControllerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerConfig)(nil)).Elem()
}

func (i LSSConfigControllerConfigArgs) ToLSSConfigControllerConfigOutput() LSSConfigControllerConfigOutput {
	return i.ToLSSConfigControllerConfigOutputWithContext(context.Background())
}

func (i LSSConfigControllerConfigArgs) ToLSSConfigControllerConfigOutputWithContext(ctx context.Context) LSSConfigControllerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerConfigOutput)
}

func (i LSSConfigControllerConfigArgs) ToLSSConfigControllerConfigPtrOutput() LSSConfigControllerConfigPtrOutput {
	return i.ToLSSConfigControllerConfigPtrOutputWithContext(context.Background())
}

func (i LSSConfigControllerConfigArgs) ToLSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) LSSConfigControllerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerConfigOutput).ToLSSConfigControllerConfigPtrOutputWithContext(ctx)
}

// LSSConfigControllerConfigPtrInput is an input type that accepts LSSConfigControllerConfigArgs, LSSConfigControllerConfigPtr and LSSConfigControllerConfigPtrOutput values.
// You can construct a concrete instance of `LSSConfigControllerConfigPtrInput` via:
//
//	        LSSConfigControllerConfigArgs{...}
//
//	or:
//
//	        nil
type LSSConfigControllerConfigPtrInput interface {
	pulumi.Input

	ToLSSConfigControllerConfigPtrOutput() LSSConfigControllerConfigPtrOutput
	ToLSSConfigControllerConfigPtrOutputWithContext(context.Context) LSSConfigControllerConfigPtrOutput
}

type lssconfigControllerConfigPtrType LSSConfigControllerConfigArgs

func LSSConfigControllerConfigPtr(v *LSSConfigControllerConfigArgs) LSSConfigControllerConfigPtrInput {
	return (*lssconfigControllerConfigPtrType)(v)
}

func (*lssconfigControllerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LSSConfigControllerConfig)(nil)).Elem()
}

func (i *lssconfigControllerConfigPtrType) ToLSSConfigControllerConfigPtrOutput() LSSConfigControllerConfigPtrOutput {
	return i.ToLSSConfigControllerConfigPtrOutputWithContext(context.Background())
}

func (i *lssconfigControllerConfigPtrType) ToLSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) LSSConfigControllerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerConfigPtrOutput)
}

type LSSConfigControllerConfigOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerConfig)(nil)).Elem()
}

func (o LSSConfigControllerConfigOutput) ToLSSConfigControllerConfigOutput() LSSConfigControllerConfigOutput {
	return o
}

func (o LSSConfigControllerConfigOutput) ToLSSConfigControllerConfigOutputWithContext(ctx context.Context) LSSConfigControllerConfigOutput {
	return o
}

func (o LSSConfigControllerConfigOutput) ToLSSConfigControllerConfigPtrOutput() LSSConfigControllerConfigPtrOutput {
	return o.ToLSSConfigControllerConfigPtrOutputWithContext(context.Background())
}

func (o LSSConfigControllerConfigOutput) ToLSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) LSSConfigControllerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LSSConfigControllerConfig) *LSSConfigControllerConfig {
		return &v
	}).(LSSConfigControllerConfigPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigOutput) AuditMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) *string { return v.AuditMessage }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
func (o LSSConfigControllerConfigOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) string { return v.Format }).(pulumi.StringOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o LSSConfigControllerConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
func (o LSSConfigControllerConfigOutput) LssHost() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) string { return v.LssHost }).(pulumi.StringOutput)
}

// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
func (o LSSConfigControllerConfigOutput) LssPort() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) string { return v.LssPort }).(pulumi.StringOutput)
}

// (Optional)
func (o LSSConfigControllerConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) string { return v.Name }).(pulumi.StringOutput)
}

// Refer to the log type documentation
func (o LSSConfigControllerConfigOutput) SourceLogType() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) string { return v.SourceLogType }).(pulumi.StringOutput)
}

// (Optional)
func (o LSSConfigControllerConfigOutput) UseTls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerConfig) *bool { return v.UseTls }).(pulumi.BoolPtrOutput)
}

type LSSConfigControllerConfigPtrOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LSSConfigControllerConfig)(nil)).Elem()
}

func (o LSSConfigControllerConfigPtrOutput) ToLSSConfigControllerConfigPtrOutput() LSSConfigControllerConfigPtrOutput {
	return o
}

func (o LSSConfigControllerConfigPtrOutput) ToLSSConfigControllerConfigPtrOutputWithContext(ctx context.Context) LSSConfigControllerConfigPtrOutput {
	return o
}

func (o LSSConfigControllerConfigPtrOutput) Elem() LSSConfigControllerConfigOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) LSSConfigControllerConfig {
		if v != nil {
			return *v
		}
		var ret LSSConfigControllerConfig
		return ret
	}).(LSSConfigControllerConfigOutput)
}

// (Optional)
func (o LSSConfigControllerConfigPtrOutput) AuditMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuditMessage
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigPtrOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) []string {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(pulumi.StringArrayOutput)
}

// The format of the LSS resource. The supported formats are: `JSON`, `CSV`, and `TSV`
func (o LSSConfigControllerConfigPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o LSSConfigControllerConfigPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The IP or FQDN of the SIEM (Log Receiver) where logs will be forwarded to.
func (o LSSConfigControllerConfigPtrOutput) LssHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LssHost
	}).(pulumi.StringPtrOutput)
}

// The destination port of the SIEM (Log Receiver) where logs will be forwarded to.
func (o LSSConfigControllerConfigPtrOutput) LssPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LssPort
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Refer to the log type documentation
func (o LSSConfigControllerConfigPtrOutput) SourceLogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SourceLogType
	}).(pulumi.StringPtrOutput)
}

// (Optional)
func (o LSSConfigControllerConfigPtrOutput) UseTls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseTls
	}).(pulumi.BoolPtrOutput)
}

type LSSConfigControllerConnectorGroup struct {
	// App Connector Group ID(s) where logs will be forwarded to.
	Ids []string `pulumi:"ids"`
}

// LSSConfigControllerConnectorGroupInput is an input type that accepts LSSConfigControllerConnectorGroupArgs and LSSConfigControllerConnectorGroupOutput values.
// You can construct a concrete instance of `LSSConfigControllerConnectorGroupInput` via:
//
//	LSSConfigControllerConnectorGroupArgs{...}
type LSSConfigControllerConnectorGroupInput interface {
	pulumi.Input

	ToLSSConfigControllerConnectorGroupOutput() LSSConfigControllerConnectorGroupOutput
	ToLSSConfigControllerConnectorGroupOutputWithContext(context.Context) LSSConfigControllerConnectorGroupOutput
}

type LSSConfigControllerConnectorGroupArgs struct {
	// App Connector Group ID(s) where logs will be forwarded to.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (LSSConfigControllerConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i LSSConfigControllerConnectorGroupArgs) ToLSSConfigControllerConnectorGroupOutput() LSSConfigControllerConnectorGroupOutput {
	return i.ToLSSConfigControllerConnectorGroupOutputWithContext(context.Background())
}

func (i LSSConfigControllerConnectorGroupArgs) ToLSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) LSSConfigControllerConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerConnectorGroupOutput)
}

// LSSConfigControllerConnectorGroupArrayInput is an input type that accepts LSSConfigControllerConnectorGroupArray and LSSConfigControllerConnectorGroupArrayOutput values.
// You can construct a concrete instance of `LSSConfigControllerConnectorGroupArrayInput` via:
//
//	LSSConfigControllerConnectorGroupArray{ LSSConfigControllerConnectorGroupArgs{...} }
type LSSConfigControllerConnectorGroupArrayInput interface {
	pulumi.Input

	ToLSSConfigControllerConnectorGroupArrayOutput() LSSConfigControllerConnectorGroupArrayOutput
	ToLSSConfigControllerConnectorGroupArrayOutputWithContext(context.Context) LSSConfigControllerConnectorGroupArrayOutput
}

type LSSConfigControllerConnectorGroupArray []LSSConfigControllerConnectorGroupInput

func (LSSConfigControllerConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i LSSConfigControllerConnectorGroupArray) ToLSSConfigControllerConnectorGroupArrayOutput() LSSConfigControllerConnectorGroupArrayOutput {
	return i.ToLSSConfigControllerConnectorGroupArrayOutputWithContext(context.Background())
}

func (i LSSConfigControllerConnectorGroupArray) ToLSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) LSSConfigControllerConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerConnectorGroupArrayOutput)
}

type LSSConfigControllerConnectorGroupOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o LSSConfigControllerConnectorGroupOutput) ToLSSConfigControllerConnectorGroupOutput() LSSConfigControllerConnectorGroupOutput {
	return o
}

func (o LSSConfigControllerConnectorGroupOutput) ToLSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) LSSConfigControllerConnectorGroupOutput {
	return o
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o LSSConfigControllerConnectorGroupOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LSSConfigControllerConnectorGroup) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type LSSConfigControllerConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o LSSConfigControllerConnectorGroupArrayOutput) ToLSSConfigControllerConnectorGroupArrayOutput() LSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o LSSConfigControllerConnectorGroupArrayOutput) ToLSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) LSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o LSSConfigControllerConnectorGroupArrayOutput) Index(i pulumi.IntInput) LSSConfigControllerConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LSSConfigControllerConnectorGroup {
		return vs[0].([]LSSConfigControllerConnectorGroup)[vs[1].(int)]
	}).(LSSConfigControllerConnectorGroupOutput)
}

type LSSConfigControllerPolicyRuleResource struct {
	// (Optional)
	Action            *string `pulumi:"action"`
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions []LSSConfigControllerPolicyRuleResourceCondition `pulumi:"conditions"`
	// (Optional)
	CustomMsg   *string `pulumi:"customMsg"`
	DefaultRule *bool   `pulumi:"defaultRule"`
	// (Optional)
	Description *string `pulumi:"description"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id             *string `pulumi:"id"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name string `pulumi:"name"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator               *string `pulumi:"operator"`
	PolicySetId            *string `pulumi:"policySetId"`
	PolicyType             *string `pulumi:"policyType"`
	Priority               *string `pulumi:"priority"`
	ReauthDefaultRule      *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout      *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout          *string `pulumi:"reauthTimeout"`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

// LSSConfigControllerPolicyRuleResourceInput is an input type that accepts LSSConfigControllerPolicyRuleResourceArgs and LSSConfigControllerPolicyRuleResourceOutput values.
// You can construct a concrete instance of `LSSConfigControllerPolicyRuleResourceInput` via:
//
//	LSSConfigControllerPolicyRuleResourceArgs{...}
type LSSConfigControllerPolicyRuleResourceInput interface {
	pulumi.Input

	ToLSSConfigControllerPolicyRuleResourceOutput() LSSConfigControllerPolicyRuleResourceOutput
	ToLSSConfigControllerPolicyRuleResourceOutputWithContext(context.Context) LSSConfigControllerPolicyRuleResourceOutput
}

type LSSConfigControllerPolicyRuleResourceArgs struct {
	// (Optional)
	Action            pulumi.StringPtrInput `pulumi:"action"`
	ActionId          pulumi.StringPtrInput `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolPtrInput   `pulumi:"bypassDefaultRule"`
	// (Optional)
	Conditions LSSConfigControllerPolicyRuleResourceConditionArrayInput `pulumi:"conditions"`
	// (Optional)
	CustomMsg   pulumi.StringPtrInput `pulumi:"customMsg"`
	DefaultRule pulumi.BoolPtrInput   `pulumi:"defaultRule"`
	// (Optional)
	Description pulumi.StringPtrInput `pulumi:"description"`
	// App Connector Group ID(s) where logs will be forwarded to.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	LssDefaultRule pulumi.BoolPtrInput   `pulumi:"lssDefaultRule"`
	// (Optional)
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator               pulumi.StringPtrInput `pulumi:"operator"`
	PolicySetId            pulumi.StringPtrInput `pulumi:"policySetId"`
	PolicyType             pulumi.StringPtrInput `pulumi:"policyType"`
	Priority               pulumi.StringPtrInput `pulumi:"priority"`
	ReauthDefaultRule      pulumi.BoolPtrInput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout      pulumi.StringPtrInput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout          pulumi.StringPtrInput `pulumi:"reauthTimeout"`
	RuleOrder              pulumi.StringPtrInput `pulumi:"ruleOrder"`
	ZpnInspectionProfileId pulumi.StringPtrInput `pulumi:"zpnInspectionProfileId"`
}

func (LSSConfigControllerPolicyRuleResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (i LSSConfigControllerPolicyRuleResourceArgs) ToLSSConfigControllerPolicyRuleResourceOutput() LSSConfigControllerPolicyRuleResourceOutput {
	return i.ToLSSConfigControllerPolicyRuleResourceOutputWithContext(context.Background())
}

func (i LSSConfigControllerPolicyRuleResourceArgs) ToLSSConfigControllerPolicyRuleResourceOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourceOutput)
}

func (i LSSConfigControllerPolicyRuleResourceArgs) ToLSSConfigControllerPolicyRuleResourcePtrOutput() LSSConfigControllerPolicyRuleResourcePtrOutput {
	return i.ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Background())
}

func (i LSSConfigControllerPolicyRuleResourceArgs) ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourceOutput).ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx)
}

// LSSConfigControllerPolicyRuleResourcePtrInput is an input type that accepts LSSConfigControllerPolicyRuleResourceArgs, LSSConfigControllerPolicyRuleResourcePtr and LSSConfigControllerPolicyRuleResourcePtrOutput values.
// You can construct a concrete instance of `LSSConfigControllerPolicyRuleResourcePtrInput` via:
//
//	        LSSConfigControllerPolicyRuleResourceArgs{...}
//
//	or:
//
//	        nil
type LSSConfigControllerPolicyRuleResourcePtrInput interface {
	pulumi.Input

	ToLSSConfigControllerPolicyRuleResourcePtrOutput() LSSConfigControllerPolicyRuleResourcePtrOutput
	ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Context) LSSConfigControllerPolicyRuleResourcePtrOutput
}

type lssconfigControllerPolicyRuleResourcePtrType LSSConfigControllerPolicyRuleResourceArgs

func LSSConfigControllerPolicyRuleResourcePtr(v *LSSConfigControllerPolicyRuleResourceArgs) LSSConfigControllerPolicyRuleResourcePtrInput {
	return (*lssconfigControllerPolicyRuleResourcePtrType)(v)
}

func (*lssconfigControllerPolicyRuleResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (i *lssconfigControllerPolicyRuleResourcePtrType) ToLSSConfigControllerPolicyRuleResourcePtrOutput() LSSConfigControllerPolicyRuleResourcePtrOutput {
	return i.ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Background())
}

func (i *lssconfigControllerPolicyRuleResourcePtrType) ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourcePtrOutput)
}

type LSSConfigControllerPolicyRuleResourceOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerPolicyRuleResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ToLSSConfigControllerPolicyRuleResourceOutput() LSSConfigControllerPolicyRuleResourceOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ToLSSConfigControllerPolicyRuleResourceOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ToLSSConfigControllerPolicyRuleResourcePtrOutput() LSSConfigControllerPolicyRuleResourcePtrOutput {
	return o.ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(context.Background())
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LSSConfigControllerPolicyRuleResource) *LSSConfigControllerPolicyRuleResource {
		return &v
	}).(LSSConfigControllerPolicyRuleResourcePtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourceOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *bool { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourceOutput) Conditions() LSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) []LSSConfigControllerPolicyRuleResourceCondition {
		return v.Conditions
	}).(LSSConfigControllerPolicyRuleResourceConditionArrayOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourceOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.CustomMsg }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *bool { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o LSSConfigControllerPolicyRuleResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *bool { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) - Supported values are: `AND` or `OR`
func (o LSSConfigControllerPolicyRuleResourceOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) PolicySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.PolicySetId }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *bool { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.RuleOrder }).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceOutput) ZpnInspectionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResource) *string { return v.ZpnInspectionProfileId }).(pulumi.StringPtrOutput)
}

type LSSConfigControllerPolicyRuleResourcePtrOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerPolicyRuleResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LSSConfigControllerPolicyRuleResource)(nil)).Elem()
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ToLSSConfigControllerPolicyRuleResourcePtrOutput() LSSConfigControllerPolicyRuleResourcePtrOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ToLSSConfigControllerPolicyRuleResourcePtrOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourcePtrOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Elem() LSSConfigControllerPolicyRuleResourceOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) LSSConfigControllerPolicyRuleResource {
		if v != nil {
			return *v
		}
		var ret LSSConfigControllerPolicyRuleResource
		return ret
	}).(LSSConfigControllerPolicyRuleResourceOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ActionId
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.BypassDefaultRule
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Conditions() LSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) []LSSConfigControllerPolicyRuleResourceCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(LSSConfigControllerPolicyRuleResourceConditionArrayOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.CustomMsg
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.DefaultRule
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// App Connector Group ID(s) where logs will be forwarded to.
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.LssDefaultRule
	}).(pulumi.BoolPtrOutput)
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// (Optional) - Supported values are: `AND` or `OR`
func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) PolicySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.PolicySetId
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *bool {
		if v == nil {
			return nil
		}
		return v.ReauthDefaultRule
	}).(pulumi.BoolPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ReauthIdleTimeout
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ReauthTimeout
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.RuleOrder
	}).(pulumi.StringPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourcePtrOutput) ZpnInspectionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LSSConfigControllerPolicyRuleResource) *string {
		if v == nil {
			return nil
		}
		return v.ZpnInspectionProfileId
	}).(pulumi.StringPtrOutput)
}

type LSSConfigControllerPolicyRuleResourceCondition struct {
	// (Optional)
	Negated  *bool                                                   `pulumi:"negated"`
	Operands []LSSConfigControllerPolicyRuleResourceConditionOperand `pulumi:"operands"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator string `pulumi:"operator"`
}

// LSSConfigControllerPolicyRuleResourceConditionInput is an input type that accepts LSSConfigControllerPolicyRuleResourceConditionArgs and LSSConfigControllerPolicyRuleResourceConditionOutput values.
// You can construct a concrete instance of `LSSConfigControllerPolicyRuleResourceConditionInput` via:
//
//	LSSConfigControllerPolicyRuleResourceConditionArgs{...}
type LSSConfigControllerPolicyRuleResourceConditionInput interface {
	pulumi.Input

	ToLSSConfigControllerPolicyRuleResourceConditionOutput() LSSConfigControllerPolicyRuleResourceConditionOutput
	ToLSSConfigControllerPolicyRuleResourceConditionOutputWithContext(context.Context) LSSConfigControllerPolicyRuleResourceConditionOutput
}

type LSSConfigControllerPolicyRuleResourceConditionArgs struct {
	// (Optional)
	Negated  pulumi.BoolPtrInput                                             `pulumi:"negated"`
	Operands LSSConfigControllerPolicyRuleResourceConditionOperandArrayInput `pulumi:"operands"`
	// (Optional) - Supported values are: `AND` or `OR`
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (LSSConfigControllerPolicyRuleResourceConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (i LSSConfigControllerPolicyRuleResourceConditionArgs) ToLSSConfigControllerPolicyRuleResourceConditionOutput() LSSConfigControllerPolicyRuleResourceConditionOutput {
	return i.ToLSSConfigControllerPolicyRuleResourceConditionOutputWithContext(context.Background())
}

func (i LSSConfigControllerPolicyRuleResourceConditionArgs) ToLSSConfigControllerPolicyRuleResourceConditionOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourceConditionOutput)
}

// LSSConfigControllerPolicyRuleResourceConditionArrayInput is an input type that accepts LSSConfigControllerPolicyRuleResourceConditionArray and LSSConfigControllerPolicyRuleResourceConditionArrayOutput values.
// You can construct a concrete instance of `LSSConfigControllerPolicyRuleResourceConditionArrayInput` via:
//
//	LSSConfigControllerPolicyRuleResourceConditionArray{ LSSConfigControllerPolicyRuleResourceConditionArgs{...} }
type LSSConfigControllerPolicyRuleResourceConditionArrayInput interface {
	pulumi.Input

	ToLSSConfigControllerPolicyRuleResourceConditionArrayOutput() LSSConfigControllerPolicyRuleResourceConditionArrayOutput
	ToLSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(context.Context) LSSConfigControllerPolicyRuleResourceConditionArrayOutput
}

type LSSConfigControllerPolicyRuleResourceConditionArray []LSSConfigControllerPolicyRuleResourceConditionInput

func (LSSConfigControllerPolicyRuleResourceConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (i LSSConfigControllerPolicyRuleResourceConditionArray) ToLSSConfigControllerPolicyRuleResourceConditionArrayOutput() LSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return i.ToLSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(context.Background())
}

func (i LSSConfigControllerPolicyRuleResourceConditionArray) ToLSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourceConditionArrayOutput)
}

type LSSConfigControllerPolicyRuleResourceConditionOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerPolicyRuleResourceConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (o LSSConfigControllerPolicyRuleResourceConditionOutput) ToLSSConfigControllerPolicyRuleResourceConditionOutput() LSSConfigControllerPolicyRuleResourceConditionOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceConditionOutput) ToLSSConfigControllerPolicyRuleResourceConditionOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionOutput {
	return o
}

// (Optional)
func (o LSSConfigControllerPolicyRuleResourceConditionOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResourceCondition) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

func (o LSSConfigControllerPolicyRuleResourceConditionOutput) Operands() LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResourceCondition) []LSSConfigControllerPolicyRuleResourceConditionOperand {
		return v.Operands
	}).(LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput)
}

// (Optional) - Supported values are: `AND` or `OR`
func (o LSSConfigControllerPolicyRuleResourceConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResourceCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type LSSConfigControllerPolicyRuleResourceConditionArrayOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerPolicyRuleResourceConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LSSConfigControllerPolicyRuleResourceCondition)(nil)).Elem()
}

func (o LSSConfigControllerPolicyRuleResourceConditionArrayOutput) ToLSSConfigControllerPolicyRuleResourceConditionArrayOutput() LSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceConditionArrayOutput) ToLSSConfigControllerPolicyRuleResourceConditionArrayOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionArrayOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceConditionArrayOutput) Index(i pulumi.IntInput) LSSConfigControllerPolicyRuleResourceConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LSSConfigControllerPolicyRuleResourceCondition {
		return vs[0].([]LSSConfigControllerPolicyRuleResourceCondition)[vs[1].(int)]
	}).(LSSConfigControllerPolicyRuleResourceConditionOutput)
}

type LSSConfigControllerPolicyRuleResourceConditionOperand struct {
	// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `SAML`, `SCIM`, `SCIM_GROUP`
	ObjectType string `pulumi:"objectType"`
	// (Optional) The below values are supported when choosing `objectType` of type `CLIENT_TYPE`.
	Values []string `pulumi:"values"`
}

// LSSConfigControllerPolicyRuleResourceConditionOperandInput is an input type that accepts LSSConfigControllerPolicyRuleResourceConditionOperandArgs and LSSConfigControllerPolicyRuleResourceConditionOperandOutput values.
// You can construct a concrete instance of `LSSConfigControllerPolicyRuleResourceConditionOperandInput` via:
//
//	LSSConfigControllerPolicyRuleResourceConditionOperandArgs{...}
type LSSConfigControllerPolicyRuleResourceConditionOperandInput interface {
	pulumi.Input

	ToLSSConfigControllerPolicyRuleResourceConditionOperandOutput() LSSConfigControllerPolicyRuleResourceConditionOperandOutput
	ToLSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(context.Context) LSSConfigControllerPolicyRuleResourceConditionOperandOutput
}

type LSSConfigControllerPolicyRuleResourceConditionOperandArgs struct {
	// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `SAML`, `SCIM`, `SCIM_GROUP`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// (Optional) The below values are supported when choosing `objectType` of type `CLIENT_TYPE`.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (LSSConfigControllerPolicyRuleResourceConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (i LSSConfigControllerPolicyRuleResourceConditionOperandArgs) ToLSSConfigControllerPolicyRuleResourceConditionOperandOutput() LSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return i.ToLSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(context.Background())
}

func (i LSSConfigControllerPolicyRuleResourceConditionOperandArgs) ToLSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourceConditionOperandOutput)
}

// LSSConfigControllerPolicyRuleResourceConditionOperandArrayInput is an input type that accepts LSSConfigControllerPolicyRuleResourceConditionOperandArray and LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput values.
// You can construct a concrete instance of `LSSConfigControllerPolicyRuleResourceConditionOperandArrayInput` via:
//
//	LSSConfigControllerPolicyRuleResourceConditionOperandArray{ LSSConfigControllerPolicyRuleResourceConditionOperandArgs{...} }
type LSSConfigControllerPolicyRuleResourceConditionOperandArrayInput interface {
	pulumi.Input

	ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput() LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput
	ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(context.Context) LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput
}

type LSSConfigControllerPolicyRuleResourceConditionOperandArray []LSSConfigControllerPolicyRuleResourceConditionOperandInput

func (LSSConfigControllerPolicyRuleResourceConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (i LSSConfigControllerPolicyRuleResourceConditionOperandArray) ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput() LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return i.ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(context.Background())
}

func (i LSSConfigControllerPolicyRuleResourceConditionOperandArray) ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput)
}

type LSSConfigControllerPolicyRuleResourceConditionOperandOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerPolicyRuleResourceConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (o LSSConfigControllerPolicyRuleResourceConditionOperandOutput) ToLSSConfigControllerPolicyRuleResourceConditionOperandOutput() LSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceConditionOperandOutput) ToLSSConfigControllerPolicyRuleResourceConditionOperandOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return o
}

// (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `SAML`, `SCIM`, `SCIM_GROUP`
func (o LSSConfigControllerPolicyRuleResourceConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResourceConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

// (Optional) The below values are supported when choosing `objectType` of type `CLIENT_TYPE`.
func (o LSSConfigControllerPolicyRuleResourceConditionOperandOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LSSConfigControllerPolicyRuleResourceConditionOperand) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LSSConfigControllerPolicyRuleResourceConditionOperand)(nil)).Elem()
}

func (o LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput() LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) ToLSSConfigControllerPolicyRuleResourceConditionOperandArrayOutputWithContext(ctx context.Context) LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput {
	return o
}

func (o LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput) Index(i pulumi.IntInput) LSSConfigControllerPolicyRuleResourceConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LSSConfigControllerPolicyRuleResourceConditionOperand {
		return vs[0].([]LSSConfigControllerPolicyRuleResourceConditionOperand)[vs[1].(int)]
	}).(LSSConfigControllerPolicyRuleResourceConditionOperandOutput)
}

type GetLSSConfigControllerConfig struct {
	// (string)
	AuditMessage string `pulumi:"auditMessage"`
	// (string)
	Description string `pulumi:"description"`
	// (bool)
	Enabled bool `pulumi:"enabled"`
	// (string)
	Filters []string `pulumi:"filters"`
	// (string)
	Format string `pulumi:"format"`
	// This field defines the name of the log streaming resource.
	Id string `pulumi:"id"`
	// (string)
	LssHost string `pulumi:"lssHost"`
	// (string)
	LssPort string `pulumi:"lssPort"`
	// This field defines the name of the log streaming resource.
	Name string `pulumi:"name"`
	// (string)
	SourceLogType string `pulumi:"sourceLogType"`
	UseTls        bool   `pulumi:"useTls"`
}

// GetLSSConfigControllerConfigInput is an input type that accepts GetLSSConfigControllerConfigArgs and GetLSSConfigControllerConfigOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerConfigInput` via:
//
//	GetLSSConfigControllerConfigArgs{...}
type GetLSSConfigControllerConfigInput interface {
	pulumi.Input

	ToGetLSSConfigControllerConfigOutput() GetLSSConfigControllerConfigOutput
	ToGetLSSConfigControllerConfigOutputWithContext(context.Context) GetLSSConfigControllerConfigOutput
}

type GetLSSConfigControllerConfigArgs struct {
	// (string)
	AuditMessage pulumi.StringInput `pulumi:"auditMessage"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// (bool)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// (string)
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// (string)
	Format pulumi.StringInput `pulumi:"format"`
	// This field defines the name of the log streaming resource.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	LssHost pulumi.StringInput `pulumi:"lssHost"`
	// (string)
	LssPort pulumi.StringInput `pulumi:"lssPort"`
	// This field defines the name of the log streaming resource.
	Name pulumi.StringInput `pulumi:"name"`
	// (string)
	SourceLogType pulumi.StringInput `pulumi:"sourceLogType"`
	UseTls        pulumi.BoolInput   `pulumi:"useTls"`
}

func (GetLSSConfigControllerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerConfig)(nil)).Elem()
}

func (i GetLSSConfigControllerConfigArgs) ToGetLSSConfigControllerConfigOutput() GetLSSConfigControllerConfigOutput {
	return i.ToGetLSSConfigControllerConfigOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerConfigArgs) ToGetLSSConfigControllerConfigOutputWithContext(ctx context.Context) GetLSSConfigControllerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerConfigOutput)
}

// GetLSSConfigControllerConfigArrayInput is an input type that accepts GetLSSConfigControllerConfigArray and GetLSSConfigControllerConfigArrayOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerConfigArrayInput` via:
//
//	GetLSSConfigControllerConfigArray{ GetLSSConfigControllerConfigArgs{...} }
type GetLSSConfigControllerConfigArrayInput interface {
	pulumi.Input

	ToGetLSSConfigControllerConfigArrayOutput() GetLSSConfigControllerConfigArrayOutput
	ToGetLSSConfigControllerConfigArrayOutputWithContext(context.Context) GetLSSConfigControllerConfigArrayOutput
}

type GetLSSConfigControllerConfigArray []GetLSSConfigControllerConfigInput

func (GetLSSConfigControllerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerConfig)(nil)).Elem()
}

func (i GetLSSConfigControllerConfigArray) ToGetLSSConfigControllerConfigArrayOutput() GetLSSConfigControllerConfigArrayOutput {
	return i.ToGetLSSConfigControllerConfigArrayOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerConfigArray) ToGetLSSConfigControllerConfigArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerConfigArrayOutput)
}

type GetLSSConfigControllerConfigOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerConfig)(nil)).Elem()
}

func (o GetLSSConfigControllerConfigOutput) ToGetLSSConfigControllerConfigOutput() GetLSSConfigControllerConfigOutput {
	return o
}

func (o GetLSSConfigControllerConfigOutput) ToGetLSSConfigControllerConfigOutputWithContext(ctx context.Context) GetLSSConfigControllerConfigOutput {
	return o
}

// (string)
func (o GetLSSConfigControllerConfigOutput) AuditMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.AuditMessage }).(pulumi.StringOutput)
}

// (string)
func (o GetLSSConfigControllerConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.Description }).(pulumi.StringOutput)
}

// (bool)
func (o GetLSSConfigControllerConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (string)
func (o GetLSSConfigControllerConfigOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// (string)
func (o GetLSSConfigControllerConfigOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.Format }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerConfigOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetLSSConfigControllerConfigOutput) LssHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.LssHost }).(pulumi.StringOutput)
}

// (string)
func (o GetLSSConfigControllerConfigOutput) LssPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.LssPort }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.Name }).(pulumi.StringOutput)
}

// (string)
func (o GetLSSConfigControllerConfigOutput) SourceLogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) string { return v.SourceLogType }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerConfigOutput) UseTls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConfig) bool { return v.UseTls }).(pulumi.BoolOutput)
}

type GetLSSConfigControllerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerConfig)(nil)).Elem()
}

func (o GetLSSConfigControllerConfigArrayOutput) ToGetLSSConfigControllerConfigArrayOutput() GetLSSConfigControllerConfigArrayOutput {
	return o
}

func (o GetLSSConfigControllerConfigArrayOutput) ToGetLSSConfigControllerConfigArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerConfigArrayOutput {
	return o
}

func (o GetLSSConfigControllerConfigArrayOutput) Index(i pulumi.IntInput) GetLSSConfigControllerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLSSConfigControllerConfig {
		return vs[0].([]GetLSSConfigControllerConfig)[vs[1].(int)]
	}).(GetLSSConfigControllerConfigOutput)
}

type GetLSSConfigControllerConnectorGroup struct {
	// This field defines the name of the log streaming resource.
	Id string `pulumi:"id"`
}

// GetLSSConfigControllerConnectorGroupInput is an input type that accepts GetLSSConfigControllerConnectorGroupArgs and GetLSSConfigControllerConnectorGroupOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerConnectorGroupInput` via:
//
//	GetLSSConfigControllerConnectorGroupArgs{...}
type GetLSSConfigControllerConnectorGroupInput interface {
	pulumi.Input

	ToGetLSSConfigControllerConnectorGroupOutput() GetLSSConfigControllerConnectorGroupOutput
	ToGetLSSConfigControllerConnectorGroupOutputWithContext(context.Context) GetLSSConfigControllerConnectorGroupOutput
}

type GetLSSConfigControllerConnectorGroupArgs struct {
	// This field defines the name of the log streaming resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLSSConfigControllerConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i GetLSSConfigControllerConnectorGroupArgs) ToGetLSSConfigControllerConnectorGroupOutput() GetLSSConfigControllerConnectorGroupOutput {
	return i.ToGetLSSConfigControllerConnectorGroupOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerConnectorGroupArgs) ToGetLSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) GetLSSConfigControllerConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerConnectorGroupOutput)
}

// GetLSSConfigControllerConnectorGroupArrayInput is an input type that accepts GetLSSConfigControllerConnectorGroupArray and GetLSSConfigControllerConnectorGroupArrayOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerConnectorGroupArrayInput` via:
//
//	GetLSSConfigControllerConnectorGroupArray{ GetLSSConfigControllerConnectorGroupArgs{...} }
type GetLSSConfigControllerConnectorGroupArrayInput interface {
	pulumi.Input

	ToGetLSSConfigControllerConnectorGroupArrayOutput() GetLSSConfigControllerConnectorGroupArrayOutput
	ToGetLSSConfigControllerConnectorGroupArrayOutputWithContext(context.Context) GetLSSConfigControllerConnectorGroupArrayOutput
}

type GetLSSConfigControllerConnectorGroupArray []GetLSSConfigControllerConnectorGroupInput

func (GetLSSConfigControllerConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (i GetLSSConfigControllerConnectorGroupArray) ToGetLSSConfigControllerConnectorGroupArrayOutput() GetLSSConfigControllerConnectorGroupArrayOutput {
	return i.ToGetLSSConfigControllerConnectorGroupArrayOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerConnectorGroupArray) ToGetLSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerConnectorGroupArrayOutput)
}

type GetLSSConfigControllerConnectorGroupOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o GetLSSConfigControllerConnectorGroupOutput) ToGetLSSConfigControllerConnectorGroupOutput() GetLSSConfigControllerConnectorGroupOutput {
	return o
}

func (o GetLSSConfigControllerConnectorGroupOutput) ToGetLSSConfigControllerConnectorGroupOutputWithContext(ctx context.Context) GetLSSConfigControllerConnectorGroupOutput {
	return o
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerConnectorGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerConnectorGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetLSSConfigControllerConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerConnectorGroup)(nil)).Elem()
}

func (o GetLSSConfigControllerConnectorGroupArrayOutput) ToGetLSSConfigControllerConnectorGroupArrayOutput() GetLSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o GetLSSConfigControllerConnectorGroupArrayOutput) ToGetLSSConfigControllerConnectorGroupArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerConnectorGroupArrayOutput {
	return o
}

func (o GetLSSConfigControllerConnectorGroupArrayOutput) Index(i pulumi.IntInput) GetLSSConfigControllerConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLSSConfigControllerConnectorGroup {
		return vs[0].([]GetLSSConfigControllerConnectorGroup)[vs[1].(int)]
	}).(GetLSSConfigControllerConnectorGroupOutput)
}

type GetLSSConfigControllerPolicyRule struct {
	Action            string                                      `pulumi:"action"`
	ActionId          string                                      `pulumi:"actionId"`
	BypassDefaultRule bool                                        `pulumi:"bypassDefaultRule"`
	Conditions        []GetLSSConfigControllerPolicyRuleCondition `pulumi:"conditions"`
	// (string)
	CreationTime string `pulumi:"creationTime"`
	CustomMsg    string `pulumi:"customMsg"`
	DefaultRule  bool   `pulumi:"defaultRule"`
	// (string)
	Description string `pulumi:"description"`
	// This field defines the name of the log streaming resource.
	Id                   string `pulumi:"id"`
	IsolationDefaultRule bool   `pulumi:"isolationDefaultRule"`
	LssDefaultRule       bool   `pulumi:"lssDefaultRule"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name                     string `pulumi:"name"`
	Operator                 string `pulumi:"operator"`
	PolicySetId              string `pulumi:"policySetId"`
	PolicyType               string `pulumi:"policyType"`
	Priority                 string `pulumi:"priority"`
	ReauthDefaultRule        bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout        string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout            string `pulumi:"reauthTimeout"`
	RuleOrder                string `pulumi:"ruleOrder"`
	ZpnCbiProfileId          string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId   string `pulumi:"zpnInspectionProfileId"`
	ZpnInspectionProfileName string `pulumi:"zpnInspectionProfileName"`
}

// GetLSSConfigControllerPolicyRuleInput is an input type that accepts GetLSSConfigControllerPolicyRuleArgs and GetLSSConfigControllerPolicyRuleOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerPolicyRuleInput` via:
//
//	GetLSSConfigControllerPolicyRuleArgs{...}
type GetLSSConfigControllerPolicyRuleInput interface {
	pulumi.Input

	ToGetLSSConfigControllerPolicyRuleOutput() GetLSSConfigControllerPolicyRuleOutput
	ToGetLSSConfigControllerPolicyRuleOutputWithContext(context.Context) GetLSSConfigControllerPolicyRuleOutput
}

type GetLSSConfigControllerPolicyRuleArgs struct {
	Action            pulumi.StringInput                                  `pulumi:"action"`
	ActionId          pulumi.StringInput                                  `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolInput                                    `pulumi:"bypassDefaultRule"`
	Conditions        GetLSSConfigControllerPolicyRuleConditionArrayInput `pulumi:"conditions"`
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	CustomMsg    pulumi.StringInput `pulumi:"customMsg"`
	DefaultRule  pulumi.BoolInput   `pulumi:"defaultRule"`
	// (string)
	Description pulumi.StringInput `pulumi:"description"`
	// This field defines the name of the log streaming resource.
	Id                   pulumi.StringInput `pulumi:"id"`
	IsolationDefaultRule pulumi.BoolInput   `pulumi:"isolationDefaultRule"`
	LssDefaultRule       pulumi.BoolInput   `pulumi:"lssDefaultRule"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name                     pulumi.StringInput `pulumi:"name"`
	Operator                 pulumi.StringInput `pulumi:"operator"`
	PolicySetId              pulumi.StringInput `pulumi:"policySetId"`
	PolicyType               pulumi.StringInput `pulumi:"policyType"`
	Priority                 pulumi.StringInput `pulumi:"priority"`
	ReauthDefaultRule        pulumi.BoolInput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout        pulumi.StringInput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout            pulumi.StringInput `pulumi:"reauthTimeout"`
	RuleOrder                pulumi.StringInput `pulumi:"ruleOrder"`
	ZpnCbiProfileId          pulumi.StringInput `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId   pulumi.StringInput `pulumi:"zpnInspectionProfileId"`
	ZpnInspectionProfileName pulumi.StringInput `pulumi:"zpnInspectionProfileName"`
}

func (GetLSSConfigControllerPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerPolicyRule)(nil)).Elem()
}

func (i GetLSSConfigControllerPolicyRuleArgs) ToGetLSSConfigControllerPolicyRuleOutput() GetLSSConfigControllerPolicyRuleOutput {
	return i.ToGetLSSConfigControllerPolicyRuleOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerPolicyRuleArgs) ToGetLSSConfigControllerPolicyRuleOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerPolicyRuleOutput)
}

// GetLSSConfigControllerPolicyRuleArrayInput is an input type that accepts GetLSSConfigControllerPolicyRuleArray and GetLSSConfigControllerPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerPolicyRuleArrayInput` via:
//
//	GetLSSConfigControllerPolicyRuleArray{ GetLSSConfigControllerPolicyRuleArgs{...} }
type GetLSSConfigControllerPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetLSSConfigControllerPolicyRuleArrayOutput() GetLSSConfigControllerPolicyRuleArrayOutput
	ToGetLSSConfigControllerPolicyRuleArrayOutputWithContext(context.Context) GetLSSConfigControllerPolicyRuleArrayOutput
}

type GetLSSConfigControllerPolicyRuleArray []GetLSSConfigControllerPolicyRuleInput

func (GetLSSConfigControllerPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerPolicyRule)(nil)).Elem()
}

func (i GetLSSConfigControllerPolicyRuleArray) ToGetLSSConfigControllerPolicyRuleArrayOutput() GetLSSConfigControllerPolicyRuleArrayOutput {
	return i.ToGetLSSConfigControllerPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerPolicyRuleArray) ToGetLSSConfigControllerPolicyRuleArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerPolicyRuleArrayOutput)
}

type GetLSSConfigControllerPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerPolicyRule)(nil)).Elem()
}

func (o GetLSSConfigControllerPolicyRuleOutput) ToGetLSSConfigControllerPolicyRuleOutput() GetLSSConfigControllerPolicyRuleOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleOutput) ToGetLSSConfigControllerPolicyRuleOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ActionId }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) BypassDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) bool { return v.BypassDefaultRule }).(pulumi.BoolOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) Conditions() GetLSSConfigControllerPolicyRuleConditionArrayOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) []GetLSSConfigControllerPolicyRuleCondition {
		return v.Conditions
	}).(GetLSSConfigControllerPolicyRuleConditionArrayOutput)
}

// (string)
func (o GetLSSConfigControllerPolicyRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) CustomMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.CustomMsg }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) DefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) bool { return v.DefaultRule }).(pulumi.BoolOutput)
}

// (string)
func (o GetLSSConfigControllerPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerPolicyRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) IsolationDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) bool { return v.IsolationDefaultRule }).(pulumi.BoolOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) LssDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) bool { return v.LssDefaultRule }).(pulumi.BoolOutput)
}

// (string)
func (o GetLSSConfigControllerPolicyRuleOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerPolicyRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.PolicyType }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.Priority }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ReauthDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) bool { return v.ReauthDefaultRule }).(pulumi.BoolOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ReauthIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ReauthIdleTimeout }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ReauthTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ReauthTimeout }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ZpnCbiProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ZpnCbiProfileId }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleOutput) ZpnInspectionProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRule) string { return v.ZpnInspectionProfileName }).(pulumi.StringOutput)
}

type GetLSSConfigControllerPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerPolicyRule)(nil)).Elem()
}

func (o GetLSSConfigControllerPolicyRuleArrayOutput) ToGetLSSConfigControllerPolicyRuleArrayOutput() GetLSSConfigControllerPolicyRuleArrayOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleArrayOutput) ToGetLSSConfigControllerPolicyRuleArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleArrayOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetLSSConfigControllerPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLSSConfigControllerPolicyRule {
		return vs[0].([]GetLSSConfigControllerPolicyRule)[vs[1].(int)]
	}).(GetLSSConfigControllerPolicyRuleOutput)
}

type GetLSSConfigControllerPolicyRuleCondition struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id string `pulumi:"id"`
	// (string)
	ModifiedTime string                                             `pulumi:"modifiedTime"`
	Modifiedby   string                                             `pulumi:"modifiedby"`
	Negated      bool                                               `pulumi:"negated"`
	Operands     []GetLSSConfigControllerPolicyRuleConditionOperand `pulumi:"operands"`
	Operator     string                                             `pulumi:"operator"`
}

// GetLSSConfigControllerPolicyRuleConditionInput is an input type that accepts GetLSSConfigControllerPolicyRuleConditionArgs and GetLSSConfigControllerPolicyRuleConditionOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerPolicyRuleConditionInput` via:
//
//	GetLSSConfigControllerPolicyRuleConditionArgs{...}
type GetLSSConfigControllerPolicyRuleConditionInput interface {
	pulumi.Input

	ToGetLSSConfigControllerPolicyRuleConditionOutput() GetLSSConfigControllerPolicyRuleConditionOutput
	ToGetLSSConfigControllerPolicyRuleConditionOutputWithContext(context.Context) GetLSSConfigControllerPolicyRuleConditionOutput
}

type GetLSSConfigControllerPolicyRuleConditionArgs struct {
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id pulumi.StringInput `pulumi:"id"`
	// (string)
	ModifiedTime pulumi.StringInput                                         `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput                                         `pulumi:"modifiedby"`
	Negated      pulumi.BoolInput                                           `pulumi:"negated"`
	Operands     GetLSSConfigControllerPolicyRuleConditionOperandArrayInput `pulumi:"operands"`
	Operator     pulumi.StringInput                                         `pulumi:"operator"`
}

func (GetLSSConfigControllerPolicyRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (i GetLSSConfigControllerPolicyRuleConditionArgs) ToGetLSSConfigControllerPolicyRuleConditionOutput() GetLSSConfigControllerPolicyRuleConditionOutput {
	return i.ToGetLSSConfigControllerPolicyRuleConditionOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerPolicyRuleConditionArgs) ToGetLSSConfigControllerPolicyRuleConditionOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerPolicyRuleConditionOutput)
}

// GetLSSConfigControllerPolicyRuleConditionArrayInput is an input type that accepts GetLSSConfigControllerPolicyRuleConditionArray and GetLSSConfigControllerPolicyRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerPolicyRuleConditionArrayInput` via:
//
//	GetLSSConfigControllerPolicyRuleConditionArray{ GetLSSConfigControllerPolicyRuleConditionArgs{...} }
type GetLSSConfigControllerPolicyRuleConditionArrayInput interface {
	pulumi.Input

	ToGetLSSConfigControllerPolicyRuleConditionArrayOutput() GetLSSConfigControllerPolicyRuleConditionArrayOutput
	ToGetLSSConfigControllerPolicyRuleConditionArrayOutputWithContext(context.Context) GetLSSConfigControllerPolicyRuleConditionArrayOutput
}

type GetLSSConfigControllerPolicyRuleConditionArray []GetLSSConfigControllerPolicyRuleConditionInput

func (GetLSSConfigControllerPolicyRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (i GetLSSConfigControllerPolicyRuleConditionArray) ToGetLSSConfigControllerPolicyRuleConditionArrayOutput() GetLSSConfigControllerPolicyRuleConditionArrayOutput {
	return i.ToGetLSSConfigControllerPolicyRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerPolicyRuleConditionArray) ToGetLSSConfigControllerPolicyRuleConditionArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerPolicyRuleConditionArrayOutput)
}

type GetLSSConfigControllerPolicyRuleConditionOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerPolicyRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (o GetLSSConfigControllerPolicyRuleConditionOutput) ToGetLSSConfigControllerPolicyRuleConditionOutput() GetLSSConfigControllerPolicyRuleConditionOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleConditionOutput) ToGetLSSConfigControllerPolicyRuleConditionOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionOutput {
	return o
}

// (string)
func (o GetLSSConfigControllerPolicyRuleConditionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) string { return v.CreationTime }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerPolicyRuleConditionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o GetLSSConfigControllerPolicyRuleConditionOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) string { return v.Modifiedby }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOutput) Negated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) bool { return v.Negated }).(pulumi.BoolOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOutput) Operands() GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) []GetLSSConfigControllerPolicyRuleConditionOperand {
		return v.Operands
	}).(GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type GetLSSConfigControllerPolicyRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerPolicyRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerPolicyRuleCondition)(nil)).Elem()
}

func (o GetLSSConfigControllerPolicyRuleConditionArrayOutput) ToGetLSSConfigControllerPolicyRuleConditionArrayOutput() GetLSSConfigControllerPolicyRuleConditionArrayOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleConditionArrayOutput) ToGetLSSConfigControllerPolicyRuleConditionArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionArrayOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleConditionArrayOutput) Index(i pulumi.IntInput) GetLSSConfigControllerPolicyRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLSSConfigControllerPolicyRuleCondition {
		return vs[0].([]GetLSSConfigControllerPolicyRuleCondition)[vs[1].(int)]
	}).(GetLSSConfigControllerPolicyRuleConditionOutput)
}

type GetLSSConfigControllerPolicyRuleConditionOperand struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id    string `pulumi:"id"`
	IdpId string `pulumi:"idpId"`
	Lhs   string `pulumi:"lhs"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	Modifiedby   string `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name       string `pulumi:"name"`
	ObjectType string `pulumi:"objectType"`
	Operator   string `pulumi:"operator"`
	Rhs        string `pulumi:"rhs"`
}

// GetLSSConfigControllerPolicyRuleConditionOperandInput is an input type that accepts GetLSSConfigControllerPolicyRuleConditionOperandArgs and GetLSSConfigControllerPolicyRuleConditionOperandOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerPolicyRuleConditionOperandInput` via:
//
//	GetLSSConfigControllerPolicyRuleConditionOperandArgs{...}
type GetLSSConfigControllerPolicyRuleConditionOperandInput interface {
	pulumi.Input

	ToGetLSSConfigControllerPolicyRuleConditionOperandOutput() GetLSSConfigControllerPolicyRuleConditionOperandOutput
	ToGetLSSConfigControllerPolicyRuleConditionOperandOutputWithContext(context.Context) GetLSSConfigControllerPolicyRuleConditionOperandOutput
}

type GetLSSConfigControllerPolicyRuleConditionOperandArgs struct {
	// (string)
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// This field defines the name of the log streaming resource.
	Id    pulumi.StringInput `pulumi:"id"`
	IdpId pulumi.StringInput `pulumi:"idpId"`
	Lhs   pulumi.StringInput `pulumi:"lhs"`
	// (string)
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	Modifiedby   pulumi.StringInput `pulumi:"modifiedby"`
	// This field defines the name of the log streaming resource.
	Name       pulumi.StringInput `pulumi:"name"`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	Operator   pulumi.StringInput `pulumi:"operator"`
	Rhs        pulumi.StringInput `pulumi:"rhs"`
}

func (GetLSSConfigControllerPolicyRuleConditionOperandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (i GetLSSConfigControllerPolicyRuleConditionOperandArgs) ToGetLSSConfigControllerPolicyRuleConditionOperandOutput() GetLSSConfigControllerPolicyRuleConditionOperandOutput {
	return i.ToGetLSSConfigControllerPolicyRuleConditionOperandOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerPolicyRuleConditionOperandArgs) ToGetLSSConfigControllerPolicyRuleConditionOperandOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionOperandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerPolicyRuleConditionOperandOutput)
}

// GetLSSConfigControllerPolicyRuleConditionOperandArrayInput is an input type that accepts GetLSSConfigControllerPolicyRuleConditionOperandArray and GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput values.
// You can construct a concrete instance of `GetLSSConfigControllerPolicyRuleConditionOperandArrayInput` via:
//
//	GetLSSConfigControllerPolicyRuleConditionOperandArray{ GetLSSConfigControllerPolicyRuleConditionOperandArgs{...} }
type GetLSSConfigControllerPolicyRuleConditionOperandArrayInput interface {
	pulumi.Input

	ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutput() GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput
	ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(context.Context) GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput
}

type GetLSSConfigControllerPolicyRuleConditionOperandArray []GetLSSConfigControllerPolicyRuleConditionOperandInput

func (GetLSSConfigControllerPolicyRuleConditionOperandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (i GetLSSConfigControllerPolicyRuleConditionOperandArray) ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutput() GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return i.ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(context.Background())
}

func (i GetLSSConfigControllerPolicyRuleConditionOperandArray) ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput)
}

type GetLSSConfigControllerPolicyRuleConditionOperandOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerPolicyRuleConditionOperandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) ToGetLSSConfigControllerPolicyRuleConditionOperandOutput() GetLSSConfigControllerPolicyRuleConditionOperandOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) ToGetLSSConfigControllerPolicyRuleConditionOperandOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionOperandOutput {
	return o
}

// (string)
func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.CreationTime }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.IdpId }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.Lhs }).(pulumi.StringOutput)
}

// (string)
func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.Modifiedby }).(pulumi.StringOutput)
}

// This field defines the name of the log streaming resource.
func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.ObjectType }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandOutput) Rhs() pulumi.StringOutput {
	return o.ApplyT(func(v GetLSSConfigControllerPolicyRuleConditionOperand) string { return v.Rhs }).(pulumi.StringOutput)
}

type GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput struct{ *pulumi.OutputState }

func (GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLSSConfigControllerPolicyRuleConditionOperand)(nil)).Elem()
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput) ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutput() GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput) ToGetLSSConfigControllerPolicyRuleConditionOperandArrayOutputWithContext(ctx context.Context) GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput {
	return o
}

func (o GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput) Index(i pulumi.IntInput) GetLSSConfigControllerPolicyRuleConditionOperandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLSSConfigControllerPolicyRuleConditionOperand {
		return vs[0].([]GetLSSConfigControllerPolicyRuleConditionOperand)[vs[1].(int)]
	}).(GetLSSConfigControllerPolicyRuleConditionOperandOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerConfigInput)(nil)).Elem(), LSSConfigControllerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerConfigPtrInput)(nil)).Elem(), LSSConfigControllerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerConnectorGroupInput)(nil)).Elem(), LSSConfigControllerConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerConnectorGroupArrayInput)(nil)).Elem(), LSSConfigControllerConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceInput)(nil)).Elem(), LSSConfigControllerPolicyRuleResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerPolicyRuleResourcePtrInput)(nil)).Elem(), LSSConfigControllerPolicyRuleResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceConditionInput)(nil)).Elem(), LSSConfigControllerPolicyRuleResourceConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceConditionArrayInput)(nil)).Elem(), LSSConfigControllerPolicyRuleResourceConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceConditionOperandInput)(nil)).Elem(), LSSConfigControllerPolicyRuleResourceConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LSSConfigControllerPolicyRuleResourceConditionOperandArrayInput)(nil)).Elem(), LSSConfigControllerPolicyRuleResourceConditionOperandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerConfigInput)(nil)).Elem(), GetLSSConfigControllerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerConfigArrayInput)(nil)).Elem(), GetLSSConfigControllerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerConnectorGroupInput)(nil)).Elem(), GetLSSConfigControllerConnectorGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerConnectorGroupArrayInput)(nil)).Elem(), GetLSSConfigControllerConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerPolicyRuleInput)(nil)).Elem(), GetLSSConfigControllerPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerPolicyRuleArrayInput)(nil)).Elem(), GetLSSConfigControllerPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerPolicyRuleConditionInput)(nil)).Elem(), GetLSSConfigControllerPolicyRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerPolicyRuleConditionArrayInput)(nil)).Elem(), GetLSSConfigControllerPolicyRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerPolicyRuleConditionOperandInput)(nil)).Elem(), GetLSSConfigControllerPolicyRuleConditionOperandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLSSConfigControllerPolicyRuleConditionOperandArrayInput)(nil)).Elem(), GetLSSConfigControllerPolicyRuleConditionOperandArray{})
	pulumi.RegisterOutputType(LSSConfigControllerConfigOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerConfigPtrOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerConnectorGroupOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerPolicyRuleResourceOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerPolicyRuleResourcePtrOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerPolicyRuleResourceConditionOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerPolicyRuleResourceConditionArrayOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerPolicyRuleResourceConditionOperandOutput{})
	pulumi.RegisterOutputType(LSSConfigControllerPolicyRuleResourceConditionOperandArrayOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerConfigOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerConnectorGroupOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerPolicyRuleConditionOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerPolicyRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerPolicyRuleConditionOperandOutput{})
	pulumi.RegisterOutputType(GetLSSConfigControllerPolicyRuleConditionOperandArrayOutput{})
}
