# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import zscaler_pulumi_zpa.accesspolicy as __accesspolicy
    accesspolicy = __accesspolicy
    import zscaler_pulumi_zpa.appconnectorgroup as __appconnectorgroup
    appconnectorgroup = __appconnectorgroup
    import zscaler_pulumi_zpa.applicationsegment as __applicationsegment
    applicationsegment = __applicationsegment
    import zscaler_pulumi_zpa.applicationserver as __applicationserver
    applicationserver = __applicationserver
    import zscaler_pulumi_zpa.browsercertificate as __browsercertificate
    browsercertificate = __browsercertificate
    import zscaler_pulumi_zpa.cloudconnectorgroup as __cloudconnectorgroup
    cloudconnectorgroup = __cloudconnectorgroup
    import zscaler_pulumi_zpa.config as __config
    config = __config
    import zscaler_pulumi_zpa.enrollmentcertificate as __enrollmentcertificate
    enrollmentcertificate = __enrollmentcertificate
    import zscaler_pulumi_zpa.forwardpolicy as __forwardpolicy
    forwardpolicy = __forwardpolicy
    import zscaler_pulumi_zpa.idpcontroller as __idpcontroller
    idpcontroller = __idpcontroller
    import zscaler_pulumi_zpa.inspection as __inspection
    inspection = __inspection
    import zscaler_pulumi_zpa.inspectionpolicy as __inspectionpolicy
    inspectionpolicy = __inspectionpolicy
    import zscaler_pulumi_zpa.lssconfig as __lssconfig
    lssconfig = __lssconfig
    import zscaler_pulumi_zpa.machinegroup as __machinegroup
    machinegroup = __machinegroup
    import zscaler_pulumi_zpa.policytype as __policytype
    policytype = __policytype
    import zscaler_pulumi_zpa.postureprofile as __postureprofile
    postureprofile = __postureprofile
    import zscaler_pulumi_zpa.provisioningkey as __provisioningkey
    provisioningkey = __provisioningkey
    import zscaler_pulumi_zpa.samlattribute as __samlattribute
    samlattribute = __samlattribute
    import zscaler_pulumi_zpa.scimattribute as __scimattribute
    scimattribute = __scimattribute
    import zscaler_pulumi_zpa.scimgroup as __scimgroup
    scimgroup = __scimgroup
    import zscaler_pulumi_zpa.segmentgroup as __segmentgroup
    segmentgroup = __segmentgroup
    import zscaler_pulumi_zpa.servergroup as __servergroup
    servergroup = __servergroup
    import zscaler_pulumi_zpa.serviceedge as __serviceedge
    serviceedge = __serviceedge
    import zscaler_pulumi_zpa.timeoutpolicy as __timeoutpolicy
    timeoutpolicy = __timeoutpolicy
    import zscaler_pulumi_zpa.trustednetwork as __trustednetwork
    trustednetwork = __trustednetwork
else:
    accesspolicy = _utilities.lazy_import('zscaler_pulumi_zpa.accesspolicy')
    appconnectorgroup = _utilities.lazy_import('zscaler_pulumi_zpa.appconnectorgroup')
    applicationsegment = _utilities.lazy_import('zscaler_pulumi_zpa.applicationsegment')
    applicationserver = _utilities.lazy_import('zscaler_pulumi_zpa.applicationserver')
    browsercertificate = _utilities.lazy_import('zscaler_pulumi_zpa.browsercertificate')
    cloudconnectorgroup = _utilities.lazy_import('zscaler_pulumi_zpa.cloudconnectorgroup')
    config = _utilities.lazy_import('zscaler_pulumi_zpa.config')
    enrollmentcertificate = _utilities.lazy_import('zscaler_pulumi_zpa.enrollmentcertificate')
    forwardpolicy = _utilities.lazy_import('zscaler_pulumi_zpa.forwardpolicy')
    idpcontroller = _utilities.lazy_import('zscaler_pulumi_zpa.idpcontroller')
    inspection = _utilities.lazy_import('zscaler_pulumi_zpa.inspection')
    inspectionpolicy = _utilities.lazy_import('zscaler_pulumi_zpa.inspectionpolicy')
    lssconfig = _utilities.lazy_import('zscaler_pulumi_zpa.lssconfig')
    machinegroup = _utilities.lazy_import('zscaler_pulumi_zpa.machinegroup')
    policytype = _utilities.lazy_import('zscaler_pulumi_zpa.policytype')
    postureprofile = _utilities.lazy_import('zscaler_pulumi_zpa.postureprofile')
    provisioningkey = _utilities.lazy_import('zscaler_pulumi_zpa.provisioningkey')
    samlattribute = _utilities.lazy_import('zscaler_pulumi_zpa.samlattribute')
    scimattribute = _utilities.lazy_import('zscaler_pulumi_zpa.scimattribute')
    scimgroup = _utilities.lazy_import('zscaler_pulumi_zpa.scimgroup')
    segmentgroup = _utilities.lazy_import('zscaler_pulumi_zpa.segmentgroup')
    servergroup = _utilities.lazy_import('zscaler_pulumi_zpa.servergroup')
    serviceedge = _utilities.lazy_import('zscaler_pulumi_zpa.serviceedge')
    timeoutpolicy = _utilities.lazy_import('zscaler_pulumi_zpa.timeoutpolicy')
    trustednetwork = _utilities.lazy_import('zscaler_pulumi_zpa.trustednetwork')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "zpa",
  "mod": "AccessPolicy/policyAccessRule",
  "fqn": "zscaler_pulumi_zpa.accesspolicy",
  "classes": {
   "zpa:AccessPolicy/policyAccessRule:PolicyAccessRule": "PolicyAccessRule"
  }
 },
 {
  "pkg": "zpa",
  "mod": "AppConnectorGroup/connectorGroup",
  "fqn": "zscaler_pulumi_zpa.appconnectorgroup",
  "classes": {
   "zpa:AppConnectorGroup/connectorGroup:ConnectorGroup": "ConnectorGroup"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ApplicationSegment/applicationSegment",
  "fqn": "zscaler_pulumi_zpa.applicationsegment",
  "classes": {
   "zpa:ApplicationSegment/applicationSegment:ApplicationSegment": "ApplicationSegment"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ApplicationSegment/applicationSegmentBrowserAccess",
  "fqn": "zscaler_pulumi_zpa.applicationsegment",
  "classes": {
   "zpa:ApplicationSegment/applicationSegmentBrowserAccess:ApplicationSegmentBrowserAccess": "ApplicationSegmentBrowserAccess"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ApplicationSegment/applicationSegmentInspection",
  "fqn": "zscaler_pulumi_zpa.applicationsegment",
  "classes": {
   "zpa:ApplicationSegment/applicationSegmentInspection:ApplicationSegmentInspection": "ApplicationSegmentInspection"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ApplicationSegment/applicationSegmentPRA",
  "fqn": "zscaler_pulumi_zpa.applicationsegment",
  "classes": {
   "zpa:ApplicationSegment/applicationSegmentPRA:ApplicationSegmentPRA": "ApplicationSegmentPRA"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ApplicationSegment/browserAccess",
  "fqn": "zscaler_pulumi_zpa.applicationsegment",
  "classes": {
   "zpa:ApplicationSegment/browserAccess:BrowserAccess": "BrowserAccess"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ApplicationServer/applicationServer",
  "fqn": "zscaler_pulumi_zpa.applicationserver",
  "classes": {
   "zpa:ApplicationServer/applicationServer:ApplicationServer": "ApplicationServer"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ForwardPolicy/policyAccessForwardingRule",
  "fqn": "zscaler_pulumi_zpa.forwardpolicy",
  "classes": {
   "zpa:ForwardPolicy/policyAccessForwardingRule:PolicyAccessForwardingRule": "PolicyAccessForwardingRule"
  }
 },
 {
  "pkg": "zpa",
  "mod": "Inspection/inspectionCustomControls",
  "fqn": "zscaler_pulumi_zpa.inspection",
  "classes": {
   "zpa:Inspection/inspectionCustomControls:InspectionCustomControls": "InspectionCustomControls"
  }
 },
 {
  "pkg": "zpa",
  "mod": "Inspection/inspectionProfile",
  "fqn": "zscaler_pulumi_zpa.inspection",
  "classes": {
   "zpa:Inspection/inspectionProfile:InspectionProfile": "InspectionProfile"
  }
 },
 {
  "pkg": "zpa",
  "mod": "InspectionPolicy/policyAccessInspectionRule",
  "fqn": "zscaler_pulumi_zpa.inspectionpolicy",
  "classes": {
   "zpa:InspectionPolicy/policyAccessInspectionRule:PolicyAccessInspectionRule": "PolicyAccessInspectionRule"
  }
 },
 {
  "pkg": "zpa",
  "mod": "LSSConfig/lSSConfigController",
  "fqn": "zscaler_pulumi_zpa.lssconfig",
  "classes": {
   "zpa:LSSConfig/lSSConfigController:LSSConfigController": "LSSConfigController"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ProvisioningKey/provisioningKey",
  "fqn": "zscaler_pulumi_zpa.provisioningkey",
  "classes": {
   "zpa:ProvisioningKey/provisioningKey:ProvisioningKey": "ProvisioningKey"
  }
 },
 {
  "pkg": "zpa",
  "mod": "SegmentGroup/segmentGroup",
  "fqn": "zscaler_pulumi_zpa.segmentgroup",
  "classes": {
   "zpa:SegmentGroup/segmentGroup:SegmentGroup": "SegmentGroup"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ServerGroup/serverGroup",
  "fqn": "zscaler_pulumi_zpa.servergroup",
  "classes": {
   "zpa:ServerGroup/serverGroup:ServerGroup": "ServerGroup"
  }
 },
 {
  "pkg": "zpa",
  "mod": "ServiceEdge/serviceEdgeGroup",
  "fqn": "zscaler_pulumi_zpa.serviceedge",
  "classes": {
   "zpa:ServiceEdge/serviceEdgeGroup:ServiceEdgeGroup": "ServiceEdgeGroup"
  }
 },
 {
  "pkg": "zpa",
  "mod": "TimeoutPolicy/policyAccessTimeOutRule",
  "fqn": "zscaler_pulumi_zpa.timeoutpolicy",
  "classes": {
   "zpa:TimeoutPolicy/policyAccessTimeOutRule:PolicyAccessTimeOutRule": "PolicyAccessTimeOutRule"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "zpa",
  "token": "pulumi:providers:zpa",
  "fqn": "zscaler_pulumi_zpa",
  "class": "Provider"
 }
]
"""
)
