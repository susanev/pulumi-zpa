# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ServiceEdgeGroupServiceEdge',
    'ServiceEdgeGroupTrustedNetwork',
    'GetServiceEdgeGroupServiceEdgeResult',
    'GetServiceEdgeGroupTrustedNetworkResult',
]

@pulumi.output_type
class ServiceEdgeGroupServiceEdge(dict):
    def __init__(__self__, *,
                 ids: Optional[Sequence[str]] = None):
        if ids is not None:
            pulumi.set(__self__, "ids", ids)

    @property
    @pulumi.getter
    def ids(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "ids")


@pulumi.output_type
class ServiceEdgeGroupTrustedNetwork(dict):
    def __init__(__self__, *,
                 ids: Optional[Sequence[str]] = None):
        if ids is not None:
            pulumi.set(__self__, "ids", ids)

    @property
    @pulumi.getter
    def ids(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "ids")


@pulumi.output_type
class GetServiceEdgeGroupServiceEdgeResult(dict):
    def __init__(__self__, *,
                 application_start_time: str,
                 control_channel_status: str,
                 creation_time: str,
                 ctrl_broker_name: str,
                 current_version: str,
                 description: str,
                 enabled: bool,
                 enrollment_cert: Mapping[str, Any],
                 expected_upgrade_time: str,
                 expected_version: str,
                 fingerprint: str,
                 id: str,
                 ipacl: str,
                 issued_cert_id: str,
                 last_broker_connect_time: str,
                 last_broker_connect_time_duration: str,
                 last_broker_disconnect_time: str,
                 last_broker_disconnect_time_duration: str,
                 last_upgrade_time: str,
                 latitude: str,
                 listen_ips: str,
                 location: str,
                 longitude: str,
                 modified_time: str,
                 modifiedby: str,
                 name: str,
                 platform: str,
                 previous_version: str,
                 private_ip: str,
                 provisioning_key_id: str,
                 provisioning_key_name: str,
                 public_ip: str,
                 publish_ips: str,
                 sarge_version: str,
                 service_edge_group_id: str,
                 service_edge_group_name: str,
                 upgrade_attempt: str,
                 upgrade_status: str):
        """
        :param str application_start_time: (string)
        :param str control_channel_status: (string)
        :param str creation_time: (string)
        :param str ctrl_broker_name: (string)
        :param str current_version: (string)
        :param str description: (string) Description of the Service Edge Group.
        :param bool enabled: (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
        :param Mapping[str, Any] enrollment_cert: (string)
        :param str expected_upgrade_time: (string)
        :param str expected_version: (string)
        :param str id: The ID of the service edge group to be exported.
        :param str issued_cert_id: (string)
        :param str last_broker_connect_time: (string)
        :param str last_broker_connect_time_duration: (string)
        :param str last_broker_disconnect_time: (string)
        :param str last_broker_disconnect_time_duration: (string)
        :param str last_upgrade_time: (string)
        :param str latitude: (string)
        :param str listen_ips: (string)
        :param str location: (string)
        :param str longitude: (string)
        :param str modified_time: (string)
        :param str name: The name of the service edge group to be exported.
        :param str platform: (string)
        :param str previous_version: (string)
        :param str private_ip: (string)
        :param str provisioning_key_id: (string)
        :param str provisioning_key_name: (string)
        :param str public_ip: (string)
        :param str publish_ips: (string)
        :param str sarge_version: (string)
        :param str service_edge_group_id: (string)
        :param str service_edge_group_name: (string)
        :param str upgrade_attempt: (string)
        :param str upgrade_status: (string)
        """
        pulumi.set(__self__, "application_start_time", application_start_time)
        pulumi.set(__self__, "control_channel_status", control_channel_status)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "ctrl_broker_name", ctrl_broker_name)
        pulumi.set(__self__, "current_version", current_version)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "enabled", enabled)
        pulumi.set(__self__, "enrollment_cert", enrollment_cert)
        pulumi.set(__self__, "expected_upgrade_time", expected_upgrade_time)
        pulumi.set(__self__, "expected_version", expected_version)
        pulumi.set(__self__, "fingerprint", fingerprint)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ipacl", ipacl)
        pulumi.set(__self__, "issued_cert_id", issued_cert_id)
        pulumi.set(__self__, "last_broker_connect_time", last_broker_connect_time)
        pulumi.set(__self__, "last_broker_connect_time_duration", last_broker_connect_time_duration)
        pulumi.set(__self__, "last_broker_disconnect_time", last_broker_disconnect_time)
        pulumi.set(__self__, "last_broker_disconnect_time_duration", last_broker_disconnect_time_duration)
        pulumi.set(__self__, "last_upgrade_time", last_upgrade_time)
        pulumi.set(__self__, "latitude", latitude)
        pulumi.set(__self__, "listen_ips", listen_ips)
        pulumi.set(__self__, "location", location)
        pulumi.set(__self__, "longitude", longitude)
        pulumi.set(__self__, "modified_time", modified_time)
        pulumi.set(__self__, "modifiedby", modifiedby)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "platform", platform)
        pulumi.set(__self__, "previous_version", previous_version)
        pulumi.set(__self__, "private_ip", private_ip)
        pulumi.set(__self__, "provisioning_key_id", provisioning_key_id)
        pulumi.set(__self__, "provisioning_key_name", provisioning_key_name)
        pulumi.set(__self__, "public_ip", public_ip)
        pulumi.set(__self__, "publish_ips", publish_ips)
        pulumi.set(__self__, "sarge_version", sarge_version)
        pulumi.set(__self__, "service_edge_group_id", service_edge_group_id)
        pulumi.set(__self__, "service_edge_group_name", service_edge_group_name)
        pulumi.set(__self__, "upgrade_attempt", upgrade_attempt)
        pulumi.set(__self__, "upgrade_status", upgrade_status)

    @property
    @pulumi.getter(name="applicationStartTime")
    def application_start_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "application_start_time")

    @property
    @pulumi.getter(name="controlChannelStatus")
    def control_channel_status(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "control_channel_status")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter(name="ctrlBrokerName")
    def ctrl_broker_name(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "ctrl_broker_name")

    @property
    @pulumi.getter(name="currentVersion")
    def current_version(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "current_version")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        (string) Description of the Service Edge Group.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
        """
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="enrollmentCert")
    def enrollment_cert(self) -> Mapping[str, Any]:
        """
        (string)
        """
        return pulumi.get(self, "enrollment_cert")

    @property
    @pulumi.getter(name="expectedUpgradeTime")
    def expected_upgrade_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "expected_upgrade_time")

    @property
    @pulumi.getter(name="expectedVersion")
    def expected_version(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "expected_version")

    @property
    @pulumi.getter
    def fingerprint(self) -> str:
        return pulumi.get(self, "fingerprint")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the service edge group to be exported.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ipacl(self) -> str:
        return pulumi.get(self, "ipacl")

    @property
    @pulumi.getter(name="issuedCertId")
    def issued_cert_id(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "issued_cert_id")

    @property
    @pulumi.getter(name="lastBrokerConnectTime")
    def last_broker_connect_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "last_broker_connect_time")

    @property
    @pulumi.getter(name="lastBrokerConnectTimeDuration")
    def last_broker_connect_time_duration(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "last_broker_connect_time_duration")

    @property
    @pulumi.getter(name="lastBrokerDisconnectTime")
    def last_broker_disconnect_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "last_broker_disconnect_time")

    @property
    @pulumi.getter(name="lastBrokerDisconnectTimeDuration")
    def last_broker_disconnect_time_duration(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "last_broker_disconnect_time_duration")

    @property
    @pulumi.getter(name="lastUpgradeTime")
    def last_upgrade_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "last_upgrade_time")

    @property
    @pulumi.getter
    def latitude(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "latitude")

    @property
    @pulumi.getter(name="listenIps")
    def listen_ips(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "listen_ips")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def longitude(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "longitude")

    @property
    @pulumi.getter(name="modifiedTime")
    def modified_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "modified_time")

    @property
    @pulumi.getter
    def modifiedby(self) -> str:
        return pulumi.get(self, "modifiedby")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the service edge group to be exported.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def platform(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "platform")

    @property
    @pulumi.getter(name="previousVersion")
    def previous_version(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "previous_version")

    @property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "private_ip")

    @property
    @pulumi.getter(name="provisioningKeyId")
    def provisioning_key_id(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "provisioning_key_id")

    @property
    @pulumi.getter(name="provisioningKeyName")
    def provisioning_key_name(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "provisioning_key_name")

    @property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "public_ip")

    @property
    @pulumi.getter(name="publishIps")
    def publish_ips(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "publish_ips")

    @property
    @pulumi.getter(name="sargeVersion")
    def sarge_version(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "sarge_version")

    @property
    @pulumi.getter(name="serviceEdgeGroupId")
    def service_edge_group_id(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "service_edge_group_id")

    @property
    @pulumi.getter(name="serviceEdgeGroupName")
    def service_edge_group_name(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "service_edge_group_name")

    @property
    @pulumi.getter(name="upgradeAttempt")
    def upgrade_attempt(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "upgrade_attempt")

    @property
    @pulumi.getter(name="upgradeStatus")
    def upgrade_status(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "upgrade_status")


@pulumi.output_type
class GetServiceEdgeGroupTrustedNetworkResult(dict):
    def __init__(__self__, *,
                 creation_time: str,
                 domain: str,
                 id: str,
                 master_customer_id: str,
                 modified_time: str,
                 modifiedby: str,
                 name: str,
                 network_id: str,
                 zscaler_cloud: str):
        """
        :param str creation_time: (string)
        :param str domain: (string)
        :param str id: The ID of the service edge group to be exported.
        :param str master_customer_id: (string)
        :param str modified_time: (string)
        :param str name: The name of the service edge group to be exported.
        :param str network_id: (string)
        :param str zscaler_cloud: (string)
        """
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "master_customer_id", master_customer_id)
        pulumi.set(__self__, "modified_time", modified_time)
        pulumi.set(__self__, "modifiedby", modifiedby)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "network_id", network_id)
        pulumi.set(__self__, "zscaler_cloud", zscaler_cloud)

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def domain(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the service edge group to be exported.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="masterCustomerId")
    def master_customer_id(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "master_customer_id")

    @property
    @pulumi.getter(name="modifiedTime")
    def modified_time(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "modified_time")

    @property
    @pulumi.getter
    def modifiedby(self) -> str:
        return pulumi.get(self, "modifiedby")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the service edge group to be exported.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkId")
    def network_id(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "network_id")

    @property
    @pulumi.getter(name="zscalerCloud")
    def zscaler_cloud(self) -> str:
        """
        (string)
        """
        return pulumi.get(self, "zscaler_cloud")


